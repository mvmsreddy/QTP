If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If
Call fn_FunctionSelect(g_fnName)
'================================================================================================================
'
'											Function Select
'
'================================================================================================================
Public Function fn_FunctionSelect(sv_fnname)
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   Select Case sv_fnname
'-------------------------------------------------------------------------------------------------ITERATION1----------------------------------------------------------------------------------------------
		Case "WL_FILTER"
			Call InsTCID("Filter","The Filter function has the following actions Filter by Date, Clear the Date Fields and Close the Filter Window.")
			Call FILTER_Fun()
		Case "WL_SORT"
			Call InsTCID("Sort","The Sort function has the following actions Sort by Date and Sort by Type.")
			Call SORT_Fun()
		Case "WL_REFRESH"
			Call InsTCID("Refresh","The Refresh does the process of REFRESH in the Worklist View window.")
			Call REFRESH_Fun()
		Case "WL_OPENACTIVITY"
			Call InsTCID("Worklist Open Activity","The Open Activity function navigates through the Worklist View and pulls an Activity to the Navilink window.")
			Call WL_OPENACTIVITY_Fun()
		Case "WL_OPENCLAIMDOC"
			Call InsTCID("Worklist Claim Documentation","The Open Activity function navigates through the Worklist View and pulls an Claim Document to the Navilink window.")
			Call WL_OPENCLAIMDOC_Fun()
		Case "COMMONHEADER"
			Call InsTCID("Claim Document Common Header","The Claim Documentation Verifies the load of the Claim Panel Information.")
            Call COMMONHEADER_Fun()
		Case "CLM_AUDITTRAIL"
			Call InsTCID("Claim Document Audit Trail","In the Claim Documentation, a new Audit Trail information is created.")
            Call CLM_AUDITTRAIL_Fun()
		Case "CLM_AUDITTRAILDETAILS"
			Call InsTCID("Claim Document Audit Trail Details","in the Claim Documentation, the created Audit Trail is been opened.")
            Call CLM_AUDITTRAILDETAILS_Fun()
		Case "ACT_AUDIT_TRAIL"
			Call InsTCID("Activity Audit Trail","in the Activity, a new Audit Trail information is created.")
			Call ACT_AUDIT_TRAIL_Fun()
		Case "ACT_AUDIT_TRAIL_DETAILS"
			Call InsTCID("Activity Audit Trail Detail","in the Audit, the created Audit Trail is been opened.")
			Call ACT_AUDIT_TRAIL_DETAILS_Fun()
		Case "FC_OPENACTIVITY"
			Call InsTCID("Folder Content Open Activity","to open an Activity.")
			Call FC_OPENACTIVITY_Fun()
		Case "FC_OPENCLAIMDOC"
			Call InsTCID("Folder Content Open Claim Document","to open an Claim Documentation.")
			Call FC_OPENCLAIMDOC_Fun()	   
		Case "DOCVERF"
			Call InsTCID("Document Verfication","to click on the Document Verfication in the Tools Menu.")
			Call DOCVERF_Fun()
		Case "SYSINFO"
			Call InsTCID("System Information","to click on the System Information in the Tools Menu.")
			Call SYSINFO_Fun()
'-------------------------------------------------------------------------------------------------ITERATION2----------------------------------------------------------------------------------------------
		Case "GENERAL"
			Call InsTCID(sv_fnname,"Verifying Help-General Menu.")
            Call Help_General()
		Case "FORMS"
			Call InsTCID(sv_fnname,"Verifying Help-Forms Menu.")
            Call Help_Forms()
		Case "TOOLS_VIEWCLAIMPROFILE" 
            Call InsTCID(sv_fnname,"The Tools-Search does the process of Viewing the Claim Profile By Clicking the Search From Tools Menu")
			Call TOOLS_VIEWCLAIMPROFILE("CLAIMNO",g_CLAIMNO)
		Case "TOOLS_VIEWFOLDECONTENT"
            Call InsTCID(sv_fnname,"The Tools-Search does the process of Viewing the Folder Content By Clicking the Search From Tools Menu")
			Call TOOLS_VIEWFOLDECONTENT("CLAIMNO",g_CLAIMNO)			
		Case "CV_VIEW"
			Call InsTCID(sv_fnname,"The View does the process of Viewing the Claims View window.")
			Call CV_VIEW_Fun()
		Case "CV_SORT"
			Call InsTCID(sv_fnname,"The Sort function has the following actions Sort by Claim Number and Claimant Name.")
			Call CV_SORT_Fun()
		Case "CV_REFRESH"
			Call InsTCID(sv_fnname,"The Refresh does the process of REFRESH in the Claims View window.")
			Call CVREFRESH_Fun()
		Case "CV_OPENACTIVITY"
			Call InsTCID(sv_fnname,"The Open Activity function navigates through the Claims View and pulls an Activity to the Navilink window.")
			Call CV_OPENACTIVITY_Fun()
		Case "CV_OPENCLAIMDOC"
			Call InsTCID(sv_fnname,"The Open Activity function navigates through the Claims View and pulls an Claim Document to the Navilink window.")
			Call CV_OPENCLAIMDOC_Fun()
		Case "GENERAL_ICD9"
			Call InsTCID(sv_fnname,"The General_ICD9 Function Checks the ICD9 Dialog Box.")
			Call GENERAL_ICD9_Fun()
		Case "CLAIMANT_FIXIPNONLY"
			Call InsTCID(sv_fnname,"The CLAIMANT_FIXIPNONLY function navigates through the Claimant Tab and Check the FIXIPN Button.")
			Call ClaimantIPN()
		Case "CLAIMANT_CONTINFO_SECONLY"
			Call InsTCID(sv_fnname,"The CLAIMANT_Contact Info function navigates through the Claimant Tab and Validate the Respective Fields")
			Call Claimant_Contactinfo()
		Case "VIEWCLAIMPROFILE"
			g_FlowFlag = 1
			Call InsTCID(sv_fnname,"The View Claim profile does the process of Viewing the Claim Profile Screen.")
			Call ViewClaimProfile("CLAIMNO",g_CLAIMNO)
			g_FlowFlag = 0
		Case "VIEWFOLDECONTENT"
			g_FlowFlag = 1
			Call InsTCID(sv_fnname,"The View Foder Content does the process of Viewing the Folder Content Screen.")
			Call ViewFolderCont("CLAIMNO",g_CLAIMNO)
			g_FlowFlag = 0
'-------------------------------------------------------------------------------------------------ITERATION3----------------------------------------------------------------------------------------------
		Case "ACTIVITYOWNERSEARCH"
			Call InsTCID(sv_fnname,"Verifying Activity Owner Search Window")
            Call ActivityOwnSrh()
		Case "DATECALC"
			Call InsTCID(sv_fnname,"Verifying Date Calculator Window.")
            Call Tools_DateCal()
		Case "GENERAL_CLAIMREOPEN"
			Call InsTCID(sv_fnname,"Verifying Claim Reopen Window.")
            Call ClmReOpenDiLog()
		Case "CLAIMANT"
			Call InsTCID(sv_fnname,"Verifying Claimant Tab")
            Call Claimant()
		Case "ELIGIBILITY"
			Call InsTCID(sv_fnname,"Verifying Eligibility Tab")
            Call Eligibility()
		Case "PLANINFO_NAVVIEW"
			Call InsTCID(sv_fnname,"Verifying NaviLink  View based on the Data")
            Call NavLnkVW()
		Case "PLANINFO_POLARISVIEW"
			Call InsTCID(sv_fnname,"Verifying POLARIS View based on the Data")
            Call PolarisVW()
		Case "PLANINFO_MERLINVIEW"
			Call InsTCID(sv_fnname,"Verifying MERLIN View based on the Data")
            Call MerlinVW()
		Case "PLANINFO_VIEWFULLDESC"
			Call InsTCID(sv_fnname,"Verifying View Full Description Window")
            Call FullDesc()
		Case "PLANINFO_VIEWNOTES"
			Call InsTCID(sv_fnname,"Verifying View Notes Window")
            Call VWNotes()
		Case "PLANINFO_CCPVIEW"
			Call InsTCID(sv_fnname,"Verifying CCP View based on the Data")
            Call CCPVW()
		Case "INTEGRATION"
			Call InsTCID(sv_fnname,"Verifying Integration Part in Single Search Window")
            Call SngSrhIntigration()
		Case "SPECIALHANDLING"
			Call InsTCID(sv_fnname,"Verifying Special Handling Part in Single Search Window")
            Call SplHandling()
		Case "MODIFY_DOC_DIALOG"
			Call InsTCID(sv_fnname,"Verifying Modify Document Window")
            Call ModDocDialog()
		Case "CLAIMOWNERSEARCH"
			Call InsTCID(sv_fnname,"Verifying Claim Owner Search Window.")
            Call ClmOwnSrh()
		Case "USERSEARCHDIALOG"
			Call InsTCID(sv_fnname,"Verifying Integration Part in Single Search Window")
            Call UserSearch()
'-------------------------------------------------------------------------------------------------ITERATION4----------------------------------------------------------------------------------------------
		Case "ABOUTBOX"
			Call InsTCID(sv_fnname,"About Box")
			Call Tools_AbtBox()
		Case "ADMINISTRATION"
			Call InsTCID(sv_fnname,"Tools Admin")
			Call Tools_Admin()
		Case "MANUALASSIGNMENT"
			Call InsTCID(sv_fnname,"Tool bar Manual Assignment")
			Call Toolbar_MannualAssin()
		Case "EDIT_CONTACT"
			Call InsTCID(sv_fnname,"Edit Contact")
			Call Tools_EdtCont()
		Case "ADD_IND_CLAIM"
            Call InsTCID(sv_fnname,"Create Individual Claim")
			Call Tools_CratIndNew()
		Case "ADD_CMP_CLAIM"
			Call InsTCID(sv_fnname,"Create Company Claim")
			Call Tools_CratCmpNew()
		Case "SEARCH_IND"
			Call InsTCID(sv_fnname,"Individual Search")
			Call Tools_SrhInd() 
		Case "SEARCH_CMP"
			Call InsTCID(sv_fnname,"Company Search")
			Call Tools_SrhComp() 
		Case "RESET_LAYOUT"
			Call InsTCID(sv_fnname,"Reset Layout")
			Call VW_RsetLayout()
		Case "SYNOPSIS"
			Call InsTCID(sv_fnname,"Action Plan Synopsis")
			Call ActionPlan_Synopsis()
		Case "CLAIMMANAGEMENT"
			Call InsTCID(sv_fnname,"Action Plan Claim Management")
			Call ActionPlan_ClaimManagement()
		Case "ACTIONS"
			Call InsTCID(sv_fnname,"Action Plan Actions")
			Call ActionPlan_Actions()
		Case "OFFSETS"
			Call InsTCID(sv_fnname,"Action Plan Offsets")
			Call ActionPlan_Offsets()
		Case "REQUESTLOG"
			Call InsTCID(sv_fnname,"Action Plan Request Log")
			Call ActionPlan_RequestLog()
		Case "CHANGEINSTATUS"
			Call InsTCID(sv_fnname,"Action Plan ChangeIn Status")
			Call ActionPlan_ChangeInStatus()
		Case "FULLVIEW"
			Call InsTCID(sv_fnname,"Action Plan Full View")
			Call ActionPlan_FullView()
		Case "CONTACT_DELETE"
			Call InsTCID(sv_fnname,"Delete Contact")
			Call Cont_DelCont()
		Case "CONTACT_EDIT"
			Call InsTCID(sv_fnname,"Edit Contact")
			Call Cont_EdtCont()
		Case "CONTACT_ADD_INDUCLAIM"
			Call InsTCID(sv_fnname,"Add Individual Claim")
			Call Cont_CreatIndNew()
		Case "CONTACT_ADD_COMPCLAIM"
			Call InsTCID(sv_fnname,"Add Company Claim")
			Call Cont_CratCompNew()
'-------------------------------------------------------------------------------------------------ITERATION5----------------------------------------------------------------------------------------------
		Case "FC_PRINTCLAIMFOLDER"
			Call InsTCID(sv_fnname,"Print Folder Content")
			Call PrintClaimFolder()
		Case "ACTIVITY_TAB"
			Call InsTCID(sv_fnname,"Activity Tab")
			Call ActivityTab()
		Case "TOOLS_TRIAGE"
			Call InsTCID(sv_fnname,"Tools Triage")
			Call Tools_Triage()
		Case "DOC_DETAIL_TAB"
			Call InsTCID(sv_fnname,"Document Details Tab")
			Call DocDetTb()
		Case "FOLLOWUP_TAB"
			Call InsTCID(sv_fnname,"Follow Up Tab")
			Call Follow_Up_Tab()
'-------------------------------------------------------------------------------------------------Else Case---------------------------------------------------------------------------------------------------
		Case Else
			 fn_UpdateErrorDetails  sv_Funname,"Check on the Option Selected on the Data Sheet.","The Function - " & sv_fnname & " which is Selected is Under Construction.","fn_FunctionSelect","","N",0,"Y"
	End Select
End Function
'================================================================================================================
'
'											Iteration1
'
'================================================================================================================
Public Function FILTER_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			
			Set obj_SwfWindow_FilterWindow = fn_Object("SwfWindow","WrkLst_DteFtr")
			Set obj_SwfButton_Filter = fn_Object("SwfButton","WrkLst_Filter")
			Set obj_SwfButton_Ok = fn_Object("SwfButton","Ok")
			Set obj_SwfButton_Clear = fn_Object("SwfButton","Dte_FtrClear")
			Set obj_SwfButton_Cancel = fn_Object("SwfButton","Cancel")			
			Set obj_SwfEditor_From = fn_Object("SwfEditor","DteFtr_FrmDte")
			Set obj_SwfEditor_To = fn_Object("SwfEditor","DteFtr_ToDte")

            sv_FromDate= Date-1
			sv_ToDate=Date
						
            NaviLinkwin.SwfButton(obj_SwfButton_Filter).SwfClick "Filter Button"

            NaviLinkwin.SwfWindow(obj_SwfWindow_FilterWindow).SwfEditor(obj_SwfEditor_From).SwfType sv_FromDate,"From Date Edit Box"
			
			NaviLinkwin.SwfWindow(obj_SwfWindow_FilterWindow).SwfEditor(obj_SwfEditor_To).SwfType sv_ToDate,"To Date Edit Box"
			
			NaviLinkwin.SwfWindow(obj_SwfWindow_FilterWindow).SwfButton(obj_SwfButton_Ok).SwfClick "Filter OK Button"
			Call SyncWind()
			wait(5)
			Call fn_RecoveryAction()

			NaviLinkwin.SwfButton(obj_SwfButton_Filter).SwfClick "Filter Button"
			
			NaviLinkwin.SwfWindow(obj_SwfWindow_FilterWindow).SwfButton(obj_SwfButton_Clear).SwfClick "Filter Clear Button"
			NaviLinkwin.SwfWindow(obj_SwfWindow_FilterWindow).SwfButton(obj_SwfButton_Ok).SwfClick "Filter OK Button"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()
			
			NaviLinkwin.SwfButton(obj_SwfButton_Filter).SwfClick "Filter Button"
			NaviLinkwin.SwfWindow(obj_SwfWindow_FilterWindow).SwfButton(obj_SwfButton_Cancel).SwfClick "Filter Cancel Button"			
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()
End Function 
'================================================================================================================
Public Function SORT_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			
			Set obj_SwfWindow_SortWindow = fn_Object("SwfWindow","WrkLst_SrtBy")
            Set obj_SwfButton_Sort = fn_Object("SwfButton","WrkLst_Sort")
			Set obj_SwfButton_ok = fn_Object("SwfButton","Ok")
			Set obj_SwfComboBox_Combo = fn_Object("SwfComboBox","WrkLst_SortBy")
            
			NaviLinkwin.SwfButton(obj_SwfButton_Sort).SwfClick "Sort Button"
			
			NaviLinkwin.SwfWindow(obj_SwfWindow_SortWindow).SwfComboBox(obj_SwfComboBox_Combo).SwfSelect "Date","Sort By Combo Box"
			NaviLinkwin.SwfWindow(obj_SwfWindow_SortWindow).SwfButton(obj_SwfButton_ok).SwfClick "Sort OK Button"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfButton(obj_SwfButton_Sort).SwfClick "Sort Button"
			
			NaviLinkwin.SwfWindow(obj_SwfWindow_SortWindow).SwfComboBox(obj_SwfComboBox_Combo).SwfSelect "Type","Sort By Combo Box"
			NaviLinkwin.SwfWindow(obj_SwfWindow_SortWindow).SwfButton(obj_SwfButton_ok).SwfClick "Sort OK Button"   
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function REFRESH_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			
			Set obj_SwfButton_Refresh = fn_Object("SwfButton","Refresh")
			
			NaviLinkwin.SwfButton(obj_SwfButton_Refresh).SwfClick "Refresh Button"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function WL_OPENACTIVITY_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			sv_FinalName = fn_GetName
		
			Set obj_SwfWindow_Sort = fn_Object("SwfWindow","WrkLst_SrtBy")
            Set obj_SwfButton_Sort = fn_Object("SwfButton","WrkLst_Sort")
			Set obj_SwfButton_ok = fn_Object("SwfButton","Ok")
			Set obj_SwfComboBox_Combo = fn_Object("SwfComboBox","WrkLst_SortBy")
            Set obj_SwfTreeView_Wrklst =  fn_Object("SwfTreeView","WrkLstVw")
			Set obj_SwfTab_MainTab =  fn_Object("SwfTab","ClmFoldUltraTabCtrl")
            
			NaviLinkwin.SwfButton(obj_SwfButton_Sort).SwfClick "Sort Button"
			
			NaviLinkwin.SwfWindow(obj_SwfWindow_Sort).SwfComboBox(obj_SwfComboBox_Combo).SwfSelect "Type","Sort By Combo Box"
			NaviLinkwin.SwfWindow(obj_SwfWindow_Sort).SwfButton(obj_SwfButton_ok).SwfClick	"Sort OK Button"
            Call fn_RecoveryAction()

			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklst).SwfTreeSelect "\Individual","Individual Tree View"
            Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()
			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklst).SwfTreeSelect "\Individual\" & sv_FinalName,sv_FinalName & " Tree View"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()
			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklst).SwfTreeSelect "\Individual\" & sv_FinalName & "\Activity"," Activity Tree View"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklst).SwfActivateNode "\Individual\" & sv_FinalName & "\Activity\","Activity Tree View"
            If Err.Number <> 0 Then
                Call WriteReport(Err.description,"Error in Function Worklist Open Activity","There is no new mail available for this id - " & sv_FinalName,"F")
			End If
            Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklst).SwfTreeSelect "\Individual\" & sv_FinalName & "\Activity\","Activity Tree View"			
			If Err.Number <> 0 Then
                Call WriteReport(Err.description,"Error in Function Worklist Open Activity","There is no new mail available for this id - " & sv_FinalName,"F")
			End If			
			Call SyncWind()
            Call fn_RecoveryAction()
            wait(10)
            CloseTabWin()
			Call SyncWind()
			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklst).SwfTreeCollapse "\Individual"," Individual Tree View"
            Call fn_RecoveryAction()
            wait(5)
			SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
			Wait(2)
End Function
'================================================================================================================
Public Function WL_OPENCLAIMDOC_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			sv_FinalName = fn_GetName

			Set obj_SwfWindow_Sort = fn_Object("SwfWindow","WrkLst_SrtBy")
            Set obj_SwfButton_Sort = fn_Object("SwfButton","WrkLst_Sort")
			Set obj_SwfButton_ok = fn_Object("SwfButton","Ok")
			Set obj_SwfComboBox_Combo = fn_Object("SwfComboBox","WrkLst_SortBy")
            Set obj_SwfTreeView_Wrklsttree =  fn_Object("SwfTreeView","WrkLstVw")
			Set obj_SwfTab_MainTab =  fn_Object("SwfTab","ClmFoldUltraTabCtrl")
			
            NaviLinkwin.SwfButton(obj_SwfButton_Sort).SwfClick "Sort Button"
			
			NaviLinkwin.SwfWindow(obj_SwfWindow_Sort).SwfComboBox(obj_SwfComboBox_Combo).SwfSelect "Type","Sort By Combo Box"
			NaviLinkwin.SwfWindow(obj_SwfWindow_Sort).SwfButton(obj_SwfButton_ok).SwfClick "Sort OK Button"
            Call fn_RecoveryAction()

			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklsttree).SwfTreeSelect "\Individual","Individual Tree View"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

            NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklsttree).SwfTreeSelect "\Individual\" & sv_FinalName,sv_FinalName & " Tree View"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklsttree).SwfTreeSelect "\Individual\" & sv_FinalName & "\Claim Documentation","Claim Documentation Tree View"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklsttree).SwfActivateNode "\Individual\" & sv_FinalName & "\Claim Documentation\","Claim Documentation Tree View"
			If Err.Number <> 0 Then
                Call WriteReport(Err.description,"Error in Function Worklist Open Claim Documentation","There is no new mail available for this id - " & sv_FinalName,"F")
			End If			
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklsttree).SwfTreeSelect "\Individual\" & sv_FinalName & "\Claim Documentation\","Claim Documentation Tree View"
			If Err.Number <> 0 Then
                Call WriteReport(Err.description,"Error in Function Worklist Open Claim Documentation","There is no new mail available for this id - " & sv_FinalName,"F")
			End If			
			Call SyncWind()
			wait(10)
			Call fn_RecoveryAction()
						
			CloseTabWin()
			Call SyncWind()
			wait(15)
			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklsttree).SwfTreeCollapse "\Individual","Individual Tree View"
            wait(5)
			SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
			Wait(2)			
            Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function COMMONHEADER_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			sv_FinalName = fn_GetName
            
			Set obj_SwfWindow_Sort = fn_Object("SwfWindow","WrkLst_SrtBy")
			Set obj_SwfButton_Sort = fn_Object("SwfButton","WrkLst_Sort")
			Set obj_SwfButton_ok = fn_Object("SwfButton","Ok")
			Set obj_SwfComboBox_Combo = fn_Object("SwfComboBox","WrkLst_SortBy")
            Set obj_SwfTreeView_Wrklst =  fn_Object("SwfTreeView","WrkLstVw")
			Set obj_SwfObject_Panel =  fn_Object("SwfObject","ClaimantInfo")
			Set obj_SwfTab_MainTab =  fn_Object("SwfTab","ClmFoldUltraTabCtrl")
			
            NaviLinkwin.SwfButton(obj_SwfButton_Sort).SwfClick "Sort Button"
			
			NaviLinkwin.SwfWindow(obj_SwfWindow_Sort).SwfComboBox(obj_SwfComboBox_Combo).SwfSelect "Type","Sort By Combo Box"
			NaviLinkwin.SwfWindow(obj_SwfWindow_Sort).SwfButton(obj_SwfButton_ok).SwfClick "Sort OK Button"  
            Call fn_RecoveryAction()

			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklst).SwfTreeSelect "\Individual","Individual Tree View"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklst).SwfTreeSelect "\Individual\" & sv_FinalName,sv_FinalName & " Tree View"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklst).SwfTreeSelect "\Individual\" & sv_FinalName & "\Claim Documentation","Claim Documentation Tree View"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklst).SwfActivateNode "\Individual\" & sv_FinalName & "\Claim Documentation\","Claim Documentation Tree View"
			If Err.Number <> 0 Then
                Call WriteReport(Err.description,"Error in Function Common Header","There is no new mail available for this id - " & sv_FinalName,"F")
			End If			
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()
						
			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklst).SwfTreeSelect "\Individual\" & sv_FinalName & "\Claim Documentation\","Claim Documentation Tree View"
			If Err.Number <> 0 Then
                Call WriteReport(Err.description,"Error in Function Common Header","There is no new mail available for this id - " & sv_FinalName,"F")
			End If			
			Call SyncWind()
			Call fn_RecoveryAction()			
			wait(15)
			
            NaviLinkwin.SwfObject(obj_SwfObject_Panel).SwfExist "Claim Dcoument Header"
			wait(15)
            CloseTabWin()
			Call SyncWind()
			wait(15)
			NaviLinkwin.SwfTreeView(obj_SwfTreeView_Wrklst).SwfTreeCollapse "\Individual","Individual Tree View"
            wait(5)	
			SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
			Wait(2)	
			Call fn_RecoveryAction()				
End Function
'================================================================================================================
Public Function CLM_AUDITTRAIL_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)

			Set obj_SwfWindow_Search = fn_Object("SwfWindow","SingleSearch")
            Set obj_SwfToolBar_SearchPanel = fn_Object("SwfToolbar","Toolbar")
			Set obj_SwfEdt_ClaimNo = fn_Object("SwfEdit","ClaimNo")
			Set obj_SwfButton_Search = fn_Object("SwfButton","SnglSrh")
			Set obj_SwfButton_ClaimProfile = fn_Object("SwfButton","ViewClaimProfile")
			Set obj_SwfTab_MainTab =  fn_Object("SwfTab","ClmFoldUltraTabCtrl")
			
			NaviLinkwin.SwfToolbar(obj_SwfToolBar_SearchPanel).ClickToolbarTool "mainToolbar","Search"
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfEdit(obj_SwfEdt_ClaimNo).SwfSet g_CLAIMNO,"ClaimNo EditBox"
			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfButton(obj_SwfButton_Search).SwfClick "Search Button"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfButton(obj_SwfButton_ClaimProfile).SwfClick "ClaimProfile Button"
			Call SyncWind()
			Wait(15)
            Call fn_RecoveryAction()

			Set obj_swfobject_FolderTab = fn_Object("SwfTab","TabControl")
   			Set obj_SwfButton_New = fn_Object("SwfButton","NewAdtTril")
			Set obj_SwfButton_SaveClose = fn_Object("SwfButton","Sve&Clse")
			Set obj_SwfComboBox_Combo = fn_Object("SwfComboBox","ClmDocType")
			Set obj_SwfEdit_Subject = fn_Object("SwfEdit","Subject")
			Set obj_SwfCheckbox_Priority = fn_Object("SwfCheckBox","Priority")
			Set obj_ActiveX_ActiveX = fn_Object("ActiveX","WorkLst_Tree")
			Set obj_WinObject_IERequest = fn_Object("SwfObject","ClmDocNotes")
						
            NaviLinkwin.SwfTab(obj_swfobject_FolderTab).SwfTabSelect "Claim Doc","Claim Doc Tab View" 
			Call SyncWind()
			wait(5)
            NaviLinkwin.SwfButton(obj_SwfButton_New).SwfClick "New Button"
			Call SyncWind()
			wait(5)
            NaviLinkwin.SwfComboBox(obj_SwfComboBox_Combo).SwfSelect "Financial","Type By Combo Box"		
			wait(5)
            Call fn_RecoveryAction()

            NaviLinkwin.SwfEdit(obj_SwfEdit_Subject).SwfSet "Test","Subject Edit Box"				
			wait(5)
			NaviLinkwin.SwfCheckBox(obj_SwfCheckbox_Priority).set "ON"
            wait(5)
			NaviLinkwin.WinObject(obj_WinObject_IERequest).Type "Automation Testing"
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfButton(obj_SwfButton_SaveClose).SwfClick "Save & Close Button"
			Call SyncWind()
			wait(15)
            CloseTabWin()
			Call SyncWind()
			wait(5)
			SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
			Wait(2)
            Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function CLM_AUDITTRAILDETAILS_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			Set obj_SwfWindow_Search = fn_Object("SwfWindow","SingleSearch")
            Set obj_SwfToolBar_SearchPanel = fn_Object("SwfToolbar","Toolbar")
			Set obj_SwfEdt_ClaimNo = fn_Object("SwfEdit","ClaimNo")
			Set obj_SwfButton_Search = fn_Object("SwfButton","SnglSrh")
			Set obj_SwfButton_FolderContent = fn_Object("SwfButton","ViewFolderContents")
			Set obj_SwfTab_MainTab =  fn_Object("SwfTab","ClmFoldUltraTabCtrl")
			
			NaviLinkwin.SwfToolbar(obj_SwfToolBar_SearchPanel).ClickToolbarTool "mainToolbar","Search"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfEdit(obj_SwfEdt_ClaimNo).SwfSet g_CLAIMNO,"ClaimNo EditBox"
			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfButton(obj_SwfButton_Search).SwfClick "Search Button"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()
			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfButton(obj_SwfButton_FolderContent).SwfClick "Folder Content Button"
			Call SyncWind()
			Wait(15)
			Call fn_RecoveryAction()

			Set obj_SwfEdt_FolderItem = fn_Object("SwfTable","FolderItems")
			Set obj_SwfButton_OpenItem = fn_Object("SwfButton","OpnFldrItm")
			Set obj_SwfButton_OpenAuditTrail = fn_Object("SwfButton","OpnAdtTril")
            Set obj_SwfButton_FromDate = fn_Object("SwfButton","AdtTrl_FrmDteCal")
			Set obj_SwfButton_ToDate = fn_Object("SwfButton","AdtTrl_ToDteCal")
			Set obj_SwfButton_Search = fn_Object("SwfButton","Search")
			Set obj_SwfButton_ViewDetails = fn_Object("SwfButton","AdtTrl_VwDtls")      
			Set obj_SwfButton_CloseAuditTrail = fn_Object("SwfButton","AdtTrl_Close")
			Set obj_SwfWindow_AuditTrail = fn_Object("SwfWindow","AditTrail")
			Set obj_SwfTable_AuditrailGrid = fn_Object("SwfTable","AuditrailGrid")
			Set obj_SwfEditor_ToDate = fn_Object("SwfEditor","AdtTrl_ToDte")
			Set obj_SwfEditor_FromDate = fn_Object("SwfEditor","AdtTrl_Frm_Dte")
						
			NaviLinkwin.SwfTable(obj_SwfEdt_FolderItem).SwfSelectRow "Claim Document","Folder Items Table"
			NaviLinkwin.SwfButton(obj_SwfButton_OpenItem).SwfClick "Open Folder Item Button"
			Call SyncWind()
			Wait(5)
			NaviLinkwin.SwfButton(obj_SwfButton_OpenAuditTrail).SwfClick "Open Audit Trail Button"
			Call SyncWind()
			Wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfExist "Audit Trail Window"
			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfButton(obj_SwfButton_FromDate).SwfExist "From Date Button"
			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfButton(obj_SwfButton_ToDate).SwfExist "To Date Button"
			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfButton(obj_SwfButton_Search).SwfExist "Search Button"
			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfButton(obj_SwfButton_ViewDetails).SwfExist "View Details Button"
            Call fn_RecoveryAction()

			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfEditor(obj_SwfEditor_FromDate).SwfExist "From Date EditBox"
			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfEditor(obj_SwfEditor_ToDate).SwfExist "To Date EditBox"
			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfTable(obj_SwfTable_AuditrailGrid).SwfExist "Audit Trail Grid Table"
			
			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfButton(obj_SwfButton_CloseAuditTrail).SwfClick "Close Audit Trail Button"
			Call SyncWind()
			wait(5)
            CloseTabWin()
			Call SyncWind()
			wait(5)
			SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
			Wait(2)			
            Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function ACT_AUDIT_TRAIL_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			Set obj_SwfWindow_Search = fn_Object("SwfWindow","SingleSearch")
            Set obj_SwfToolBar_SearchPanel = fn_Object("SwfToolbar","Toolbar")
			Set obj_SwfEdt_ClaimNo = fn_Object("SwfEdit","ClaimNo")
			Set obj_SwfButton_Search = fn_Object("SwfButton","SnglSrh")
			Set obj_SwfButton_ClaimProfile = fn_Object("SwfButton","ViewClaimProfile")
			Set obj_SwfTab_MainTab =  fn_Object("SwfTab","ClmFoldUltraTabCtrl")
			
			NaviLinkwin.SwfToolbar(obj_SwfToolBar_SearchPanel).ClickToolbarTool "mainToolbar","Search"
			Call SyncWind()
			wait(5)
			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfEdit(obj_SwfEdt_ClaimNo).SwfSet g_CLAIMNO,"ClaimNo EditBox"
			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfButton(obj_SwfButton_Search).SwfClick "Search Button"
			Call SyncWind()
			wait(5)
			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfButton(obj_SwfButton_ClaimProfile).SwfClick "ClaimProfile Button"
			Call SyncWind()
			Wait(15)
			Call fn_RecoveryAction()

   		    Set obj_swfobject_FolderTab = fn_Object("SwfTab","TabControl")
   			Set obj_SwfButton_New = fn_Object("SwfButton","NewAdtTril")
			Set obj_SwfButton_SaveClose = fn_Object("SwfButton","Sve&Clse")
			Set obj_SwfComboBox_Combo = fn_Object("SwfComboBox","Act_Type")
			Set obj_SwfComboBox_Name = fn_Object("SwfComboBox","Act_Name")
            Set obj_SwfEdit_Subject = fn_Object("SwfEdit","ActivitySubject")
			Set obj_ActiveX_ActiveX = fn_Object("ActiveX","WorkLst_Tree")
			Set obj_swfobject_IERequest = fn_Object("SwfObject","ClmDocNotes")
			Set obj_Dialog_FollowUP = fn_Object("Dialog","FollowUP")
			Set obj_WinButton_NO = fn_Object("WinButton","BtnNo")
						
            NaviLinkwin.SwfTab(obj_swfobject_FolderTab).SwfTabSelect "Activity","Tab View" 
			Call SyncWind()
            wait(5)
            NaviLinkwin.SwfButton(obj_SwfButton_New).SwfClick "New Button"
			wait(5)
            NaviLinkwin.SwfComboBox(obj_SwfComboBox_Combo).SwfSelect "Benefit Verification","Type By Combo Box"		
			wait(5)
            NaviLinkwin.SwfComboBox(obj_SwfComboBox_Name).SwfSelect "New Claim: Finalize","name By Combo Box"		
			wait(5)
            Call fn_RecoveryAction()

            NaviLinkwin.SwfEdit(obj_SwfEdit_Subject).SwfSet "Automation Testing","Subject Edit Box"
			wait(5)
			NaviLinkwin.WinObject(obj_swfobject_IERequest).Type "Automation Testing"
			wait(5)
			NaviLinkwin.SwfButton(obj_SwfButton_SaveClose).SwfClick "Save & Close Button"
			Call SyncWind()
			wait(15)
            Call fn_RecoveryAction()

			NaviLinkwin.Dialog(obj_Dialog_FollowUP).WinButton(obj_WinButton_NO).Click
            wait(10)
            CloseTabWin()
			Call SyncWind()
			Wait(5)
			SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
			Wait(2)
            Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function ACT_AUDIT_TRAIL_DETAILS_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			Set obj_SwfWindow_Search = fn_Object("SwfWindow","SingleSearch")
			Set obj_SwfToolBar_SearchPanel = fn_Object("SwfToolbar","Toolbar")
			Set obj_SwfEdt_ClaimNo = fn_Object("SwfEdit","ClaimNo")
			Set obj_SwfButton_Search = fn_Object("SwfButton","SnglSrh")
			Set obj_SwfButton_FolderContent = fn_Object("SwfButton","ViewFolderContents")
			Set obj_SwfTab_MainTab =  fn_Object("SwfTab","ClmFoldUltraTabCtrl")
		
			NaviLinkwin.SwfToolbar(obj_SwfToolBar_SearchPanel).ClickToolbarTool "mainToolbar","Search"
			Call SyncWind()
			wait(5)
			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfEdit(obj_SwfEdt_ClaimNo).SwfSet g_CLAIMNO,"ClaimNo EditBox"
			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfButton(obj_SwfButton_Search).SwfClick "Search Button"
			Call SyncWind()
			wait(5)
			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfButton(obj_SwfButton_FolderContent).SwfClick "Folder Content Button"
			Call SyncWind()
			Wait(15)
            Call fn_RecoveryAction()

   			Set obj_SwfEdt_FolderItem = fn_Object("SwfTable","FolderItems")
			Set obj_SwfButton_OpenItem = fn_Object("SwfButton","OpnFldrItm")
			Set obj_SwfButton_OpenAuditTrail = fn_Object("SwfButton","OpnAdtTril")			
			Set obj_SwfWindow_AuditTrail = fn_Object("SwfWindow","AditTrail")
			Set obj_SwfButton_FromDate = fn_Object("SwfButton","AdtTrl_FrmDteCal")
			Set obj_SwfButton_ToDate = fn_Object("SwfButton","AdtTrl_ToDteCal")
			Set obj_SwfButton_Search = fn_Object("SwfButton","Search")
			Set obj_SwfButton_ViewDetails = fn_Object("SwfButton","AdtTrl_VwDtls")      
			Set obj_SwfButton_CloseAuditTrail = fn_Object("SwfButton","AdtTrl_Close")
			Set obj_SwfTable_AuditrailGrid = fn_Object("SwfTable","AuditrailGrid")
			Set obj_SwfEditor_ToDate = fn_Object("SwfEditor","AdtTrl_ToDte")
			Set obj_SwfEditor_FromDate = fn_Object("SwfEditor","AdtTrl_Frm_Dte")
			 		
			NaviLinkwin.SwfTable(obj_SwfEdt_FolderItem).SwfSelectRow "Activity","Folder Items Table"
			NaviLinkwin.SwfButton(obj_SwfButton_OpenItem).SwfClick "Open Folder Item Button"
			Call SyncWind()
			Wait(5)

			NaviLinkwin.SwfButton(obj_SwfButton_OpenAuditTrail).SwfClick "Open Audit Trail Button"
			Call SyncWind()
			Wait(5)
            Call fn_RecoveryAction()
			
			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfExist "Audit Trail Window"
			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfButton(obj_SwfButton_FromDate).SwfExist "From Date Button"
			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfButton(obj_SwfButton_ToDate).SwfExist "To Date Button"
			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfButton(obj_SwfButton_Search).SwfExist "Search Button"
			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfButton(obj_SwfButton_ViewDetails).SwfExist "View Details Button"
            Call fn_RecoveryAction()

			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfEditor(obj_SwfEditor_FromDate).SwfExist "From Date EditBox"
			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfEditor(obj_SwfEditor_ToDate).SwfExist "To Date EditBox"
			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfTable(obj_SwfTable_AuditrailGrid).SwfExist "Audit Trail Grid Table"
						
			NaviLinkwin.SwfWindow(obj_SwfWindow_AuditTrail).SwfButton(obj_SwfButton_CloseAuditTrail).SwfClick "Close Audit Trail Button"
			Call SyncWind()
			wait(5)
            CloseTabWin()
			Call SyncWind()
			wait(5)
			SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
			Wait(2)
			Call fn_RecoveryAction()			
End Function
'================================================================================================================
Public Function FC_OPENACTIVITY_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			Set obj_SwfWindow_Search = fn_Object("SwfWindow","SingleSearch")
			Set obj_SwfToolBar_SearchPanel = fn_Object("SwfToolbar","Toolbar")
			Set obj_SwfEdt_ClaimNo = fn_Object("SwfEdit","ClaimNo")
			Set obj_SwfButton_Search = fn_Object("SwfButton","SnglSrh")
			Set obj_SwfButton_FolderContent = fn_Object("SwfButton","ViewFolderContents")
			Set obj_SwfTab_MainTab =  fn_Object("SwfTab","ClmFoldUltraTabCtrl")
			Set obj_SwfEdt_FolderItem = fn_Object("SwfTable","FolderItems")
			Set obj_SwfButton_OpenItem = fn_Object("SwfButton","OpnFldrItm")
            
			NaviLinkwin.SwfToolbar(obj_SwfToolBar_SearchPanel).ClickToolbarTool "mainToolbar","Search"
			Call SyncWind()
			wait(5)
			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfEdit(obj_SwfEdt_ClaimNo).SwfSet g_CLAIMNO,"ClaimNo EditBox"
			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfButton(obj_SwfButton_Search).SwfClick "Search Button"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfButton(obj_SwfButton_FolderContent).SwfClick "Folder Content Button"
			Call SyncWind()
			Wait(15)
			NaviLinkwin.SwfTable(obj_SwfEdt_FolderItem).SwfSelectRow "Activity","Folder Items Table"
			NaviLinkwin.SwfButton(obj_SwfButton_OpenItem).SwfClick "Open Folder Item Button"
			Call SyncWind()
			Wait(15)
            Call fn_RecoveryAction()

            CloseTabWin()
			Call SyncWind()
			wait(5)
			SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
			Wait(2)			
End Function
'================================================================================================================
Public Function FC_OPENCLAIMDOC_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			
			Set obj_SwfWindow_Search = fn_Object("SwfWindow","SingleSearch")
            Set obj_SwfToolBar_SearchPanel = fn_Object("SwfToolbar","Toolbar")
			Set obj_SwfEdt_ClaimNo = fn_Object("SwfEdit","ClaimNo")
			Set obj_SwfButton_Search = fn_Object("SwfButton","SnglSrh")
			Set obj_SwfButton_FolderContent = fn_Object("SwfButton","ViewFolderContents")
			Set obj_SwfTab_MainTab =  fn_Object("SwfTab","ClmFoldUltraTabCtrl")
			Set obj_SwfTable_FolderItem = fn_Object("SwfTable","FolderItems")
			Set obj_SwfButton_OpenItem = fn_Object("SwfButton","OpnFldrItm")
			
			NaviLinkwin.SwfToolbar(obj_SwfToolBar_SearchPanel).ClickToolbarTool "mainToolbar","Search"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfEdit(obj_SwfEdt_ClaimNo).SwfSet g_CLAIMNO,"ClaimNo EditBox"
			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfButton(obj_SwfButton_Search).SwfClick "Search Button"
			Call SyncWind()
			wait(5)
            
			NaviLinkwin.SwfWindow(obj_SwfWindow_Search).SwfButton(obj_SwfButton_FolderContent).SwfClick "Folder Content Button"
			Call SyncWind()
			Wait(15)
			Call fn_RecoveryAction()

			NaviLinkwin.SwfTable(obj_SwfTable_FolderItem).SwfSelectRow "Claim Document","Folder Items Table"
			NaviLinkwin.SwfButton(obj_SwfButton_OpenItem).SwfClick "Open Folder Item Button"
			Call SyncWind()
			Wait(15)
            CloseTabWin()
			Call SyncWind()
			wait(5)
			SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
			Wait(2)			
            Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function DOCVERF_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
            Set obj_SwfToolBar_ToolMenu = fn_Object("SwfToolbar","Toolbar")
		
			NaviLinkwin.SwfToolbar(obj_SwfToolBar_ToolMenu).DropdownToolbarTool "shellMainMenuToolbar","Tools"
			wait(5)
			NaviLinkwin.SwfToolbar(obj_SwfToolBar_ToolMenu).ClickMenuTool "shellMainMenuToolbar,Tools","Doc Verification"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

			Set obj_SwfWindow_DocVerify = fn_Object("SwfWindow","DocVerif")
			Set obj_SwfTable_DV_docList = fn_Object("SwfTable","DocVerDocList")
            Set obj_SwfButton_DV_Cancel = fn_Object("SwfButton","Cancel")
			Set obj_SwfButton_DV_dateCalander = fn_Object("SwfButton","DocVer_DteCal")'
			Set obj_SwfButton_DV_Search = fn_Object("SwfButton","Search")
			Set obj_SwfButton_DV_OpenImage = fn_Object("SwfButton","DocVer_OpnImg")
			Set obj_SwfButton_DV_Apply = fn_Object("SwfButton","DocVer_Apply")
            Set obj_SwfEditor_DV_EntryDate = fn_Object("SwfEditor","DocVer_EntryDte")
			Set obj_SwfEditor_DV_StartTime = fn_Object("SwfEditor","DocVer_StrtTme")
			Set obj_SwfEditor_DV_EndTime = fn_Object("SwfEditor","DocVer_EndTme")
			Set obj_SwfComboBox_DV_SourceStation = fn_Object("SwfComboBox","DocVerSrcStat")
			Set obj_SwfComboBox_DV_StartAMPM = fn_Object("SwfComboBox","DocVerStrtAMPM")
			Set obj_SwfComboBox_DV_EndAMPM = fn_Object("SwfComboBox","DocVerEndAMPM")
			
			NaviLinkwin.SwfWindow(obj_SwfWindow_DocVerify).SwfTable(obj_SwfTable_DV_docList).SwfExist "Document Verfication Table"

			NaviLinkwin.SwfWindow(obj_SwfWindow_DocVerify).SwfComboBox(obj_SwfComboBox_DV_SourceStation).SwfExist "Source Station ComboBox"
			NaviLinkwin.SwfWindow(obj_SwfWindow_DocVerify).SwfComboBox(obj_SwfComboBox_DV_StartAMPM).SwfExist "Start Time ComboBox"
			NaviLinkwin.SwfWindow(obj_SwfWindow_DocVerify).SwfComboBox(obj_SwfComboBox_DV_EndAMPM).SwfExist "End Time ComboBox"
			Call fn_RecoveryAction()

			NaviLinkwin.SwfWindow(obj_SwfWindow_DocVerify).SwfEditor(obj_SwfEditor_DV_EntryDate).SwfExist "Entry Date EditBox"
			NaviLinkwin.SwfWindow(obj_SwfWindow_DocVerify).SwfEditor(obj_SwfEditor_DV_StartTime).SwfExist "Start Time EditBox"
			NaviLinkwin.SwfWindow(obj_SwfWindow_DocVerify).SwfEditor(obj_SwfEditor_DV_EndTime).SwfExist "End Time EditBox"
			
			NaviLinkwin.SwfWindow(obj_SwfWindow_DocVerify).SwfButton(obj_SwfButton_DV_dateCalander).SwfExist "Date Calander Button"
			NaviLinkwin.SwfWindow(obj_SwfWindow_DocVerify).SwfButton(obj_SwfButton_DV_Search).SwfExist "Search Button"
			NaviLinkwin.SwfWindow(obj_SwfWindow_DocVerify).SwfButton(obj_SwfButton_DV_Apply).SwfExist "Apply Button"
			NaviLinkwin.SwfWindow(obj_SwfWindow_DocVerify).SwfButton(obj_SwfButton_DV_OpenImage).SwfExist "OpenImage Button"
			NaviLinkwin.SwfWindow(obj_SwfWindow_DocVerify).SwfButton(obj_SwfButton_DV_Cancel).SwfClick "Cancle Button"
			wait(5)
            Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function SYSINFO_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
	Set obj = fn_Object("SwfWindow","NaviLink")
	Set NaviLinkwin = SwfWindow(obj)
	Set obj_SwfToolBar_ToolMenu = fn_Object("SwfToolbar","Toolbar")

	NaviLinkwin.SwfToolbar(obj_SwfToolBar_ToolMenu).DropdownToolbarTool "shellMainMenuToolbar","Help"
	wait(5)
	NaviLinkwin.SwfToolbar(obj_SwfToolBar_ToolMenu).ClickMenuTool "shellMainMenuToolbar,Help","System Info"
	Call SyncWind()
	wait(5)
    Call fn_RecoveryAction()

	Set obj = fn_Object("SwfWindow","NavLnkExpMsg")
	Set SwfWindow_NavLnkExpMsg = SwfWindow(obj)
	Set obj_SwfWin_ExpDialog = fn_Object("SwfWindow","NavLnkExpDialog")
	Set ExpDialog = SwfWindow(obj)
	Set obj_SwfWindow_SysInfo = fn_Object("SwfWindow","SysInfo")
    Set obj_SwfButton_Close = fn_Object("SwfButton","Close")

	If NaviLinkwin.SwfWindow(obj_SwfWindow_SysInfo).Exist(10) Then
		Call WriteReport("System Info Dialog Box" ,"System Info Dialog Box is Existed","System Info Dialog Box is existed as expected","P")	
		Wait(5)
		NaviLinkwin.SwfWindow(obj_SwfWindow_SysInfo).Close
		Call WriteReport("System InfoDialog Box Closed" ,"System Info Dialog Box Closed","System Info Dialog Box Closed as expected","P")
	Else
		Call WriteReport("System Info Expceptions Dialog Box" ,"System Info Dialog Box is not Existed","System Info Dialog Box is not existed as expected","F")	
	End If
    Call fn_RecoveryAction()
End Function
''================================================================================================================
'
'							Iteration 2
'
''================================================================================================================
Public Function Help_General()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   Set obj = fn_Object("SwfWindow","NaviLink")
   Set Navilinkwin = SwfWindow(obj)
   Set obj = fn_Object("SwfWindow","NavLnkExpDialog")
   Set ExpDialog = SwfWindow(obj)
   Set obj_SwfToolbar = fn_Object("SwfToolbar","Toolbar")
   Set obj_SwfButton_Close = fn_Object("SwfButton","Close")

   Navilinkwin.SwfToolbar(obj_SwfToolbar).SwfSelMenu "Help"
   Navilinkwin.SwfToolbar(obj_SwfToolbar).SwfSelSubMenu "Help","General"
   Call fn_RecoveryAction()

   Set swfWin_General = fn_Object("SwfWindow","Help_General")
   Call fn_RecoveryAction()
   If Navilinkwin.Window(swfWin_General).Exist(10) Then
		Call WriteReport("Help General Dialog Box" ,"Help General Dialog Box is Existed","Help General Dialog Box is existed as expected","P")	
		Wait(5)
		Navilinkwin.Window(swfWin_General).Close
		Call WriteReport("Help General Dialog Box Closed" ,"Help General Dialog Box Closed","Help General Dialog Box Closed as expected","P")
	Else
		Call WriteReport("Verifying Help General Dialog Box" ,"Help General Dialog Box is not Existed","Help General Dialog Box is not existed as expected","F")
   End If

End Function
''================================================================================================================
Public Function Help_Forms()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
	Set obj = fn_Object("SwfWindow","NaviLink")
	Set Navilinkwin = SwfWindow(obj)
    Set obj_SwfToolbar = fn_Object("SwfToolbar","Toolbar")
	
	Navilinkwin.SwfToolbar(obj_SwfToolbar).SwfExist "Help "
	Navilinkwin.SwfToolbar(obj_SwfToolbar).SwfSelMenu "Help"
	Navilinkwin.SwfToolbar(obj_SwfToolbar).SwfSelSubMenu "Help","Forms"
	WAIT(10)
	Call fn_RecoveryAction()

	If Browser("title:=NaviLink Forms.*").Exist(10) Then
		Call WriteReport("Verifying Forms Browser Existence" ,"Forms Browser is Existed","Forms Browser is existed as expected","P")
		wait(5)
		Browser("title:=NaviLink Forms.*").Close
		Call WriteReport("Forms Browser Closed" ,"Forms Browser Closed","Forms Browser Closed as expected","P")
	Else
		Call WriteReport("Verifying Forms Browser Exist" ,"Forms Browser Does Exist","Forms Browser doesn't Existed ","F")	
	End If
    Call fn_RecoveryAction()
End Function
''================================================================================================================
Public Function TOOLS_VIEWCLAIMPROFILE(Criteria,Val)
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
	Call ToolsSearchBy("CLAIMNO",g_CLAIMNO)
	Set obj_swfobj_CP = fn_Object("SwfButton","ViewClaimProfile")
	Set obj_swfobject_Navi = fn_Object("SwfWindow","NaviLink")
	Set NaviLinkwin = SwfWindow(obj_swfobject_Navi)
	Set obj_swfobject_SearchWin = fn_Object("SwfWindow","SingleSearch")
	Set SearchWindow = SwfWindow(obj_swfobject_SearchWin)
    Set obj_swfobject_SearchWin = fn_Object("SwfWindow","SingleSearch")
	Set SearchWindow = SwfWindow(obj_swfobject_SearchWin)
	Set obj_SwfTab_MainTab =  fn_Object("SwfTab","ClmFoldUltraTabCtrl")	
	
	SearchWindow.SwfObject(obj_swfobj_CP).SwfClick "View Claim Profile"
	Call SyncWind()
	Wait(20)
    Call fn_RecoveryAction()
	CloseTabWin()
	Call SyncWind()
	wait(10)
	SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
	Wait(10)				
End Function
''================================================================================================================
Public Function TOOLS_VIEWFOLDECONTENT(Criteria,Val)
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
	Call ToolsSearchBy("CLAIMNO",g_CLAIMNO)
	Set obj_swfobj_FT = fn_Object("SwfButton","ViewFolderContents")
	Set obj_swfobject_Navi = fn_Object("SwfWindow","NaviLink")
	Set NaviLinkwin = SwfWindow(obj_swfobject_Navi)
	Set obj_swfobject_SearchWin = fn_Object("SwfWindow","SingleSearch")
	Set SearchWindow = SwfWindow(obj_swfobject_SearchWin)
	Set obj_SwfTab_MainTab =  fn_Object("SwfTab","ClmFoldUltraTabCtrl")		

	SearchWindow.SwfButton(obj_swfobj_FT).SwfClick "ViewFolderContent"
	Call SyncWind()
	Wait(15)
    Call fn_RecoveryAction()
    CloseTabWin()
	Call SyncWind()
	wait(10)
	SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
	Wait(10)				
End Function
''================================================================================================================
Public Function CV_VIEW_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			Set obj = fn_Object("SwfWindow","ClmVW_VwBy")
			Set SortWindow = SwfWindow(obj)
			Set obj_swfobject_Sort = fn_Object("SwfButton","ClmVW_View")
			Set obj_swfobject_Combo = fn_Object("SwfComboBox","ClmVW_VwBy")
			Set obj_swfobject_ok = fn_Object("SwfButton","Ok")
			
		    NaviLinkwin.SwfButton(obj_swfobject_Sort).SwfClick "Claims View"
			wait(5)
			Call fn_RecoveryAction()

			SortWindow.SwfComboBox(obj_swfobject_Combo).SwfSelect "Sub Unit","ClaimsView By Combo Box"
			SortWindow.SwfButton(obj_swfobject_ok).SwfClick "Ok Button"
			Call SyncWind()
			wait(5)
			Call fn_RecoveryAction()

			NaviLinkwin.SwfButton(obj_swfobject_Sort).SwfClick "Claims View"
			wait(5)
			Call fn_RecoveryAction()

			SortWindow.SwfComboBox(obj_swfobject_Combo).SwfSelect "User","ClaimsView By Combo Box"
			SortWindow.SwfButton(obj_swfobject_ok).SwfClick	 "Ok Button"   
			Call SyncWind()	
			wait(5)
            Call fn_RecoveryAction()
End Function
''================================================================================================================
Public Function CV_SORT_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			Set obj = fn_Object("SwfWindow","ClmVW_SrtBy")
			Set SortWindow = SwfWindow(obj)
			Set obj_swfbtn_Sort = fn_Object("SwfButton","ClmVW_Sort")
			Set obj_swfobject_Combo = fn_Object("SwfComboBox","ClmVW_SrtBy")
			Set obj_swfbtn_ok = fn_Object("SwfButton","Ok")
			
			NaviLinkwin.SwfButton(obj_swfbtn_Sort).SwfClick "Claims Sort"
			wait(5)
			Call fn_RecoveryAction()

			SortWindow.SwfComboBox(obj_swfobject_Combo).SwfSelect "Claim Number","ClaimsSort By Combo Box"
			SortWindow.SwfButton(obj_swfbtn_ok).SwfClick "Ok Button"
			Call SyncWind()
			wait(5)
			Call fn_RecoveryAction()

			NaviLinkwin.SwfButton(obj_swfbtn_Sort).SwfClick "Claims Sort"
			wait(5)
			Call fn_RecoveryAction()

			SortWindow.SwfComboBox(obj_swfobject_Combo).SwfSelect "Claimant Name","ClaimsSort By Combo Box"
		    SortWindow.SwfButton(obj_swfbtn_ok).SwfClick "Ok Button"
		   Call SyncWind()
		   wait(5)
           Call fn_RecoveryAction()
End Function
''================================================================================================================
Public Function CVREFRESH_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
			Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			Set obj_swfbtn_Refresh = fn_Object("SwfButton","ClmVW_Refrsh")
			NaviLinkwin.SwfButton(obj_swfbtn_Refresh).SwfClick "Claims Refresh"
			Call SyncWind()
            Call fn_RecoveryAction()
End Function
''================================================================================================================
Public Function CV_OPENACTIVITY_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
            Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			Set obj = fn_Object("SwfWindow","WrkLst_SrtBy")
			Set SortWindow = SwfWindow(obj)	  
            Set obj_swfbtn_Sort = fn_Object("SwfButton","ClmVW_Sort")
			
			Set obj_swfobject_Combo = fn_Object("SwfComboBox","ClmVW_SrtBy")
			Set obj_swfbtn_ok = fn_Object("SwfButton","Ok")  	
			Set obj_swftree_Cvtree =  fn_Object("SwfTreeView","ClmVW_Tree")
			Set obj_swfEdit_ACNo = fn_Object("SwfEdit","NavLnkClaimNo")
			Set obj_swfEdit_AOwn = fn_Object("SwfEdit","ActOwnr")
			Set obj_SwfTab_MainTab =  fn_Object("SwfTab","ClmFoldUltraTabCtrl")
			
			NaviLinkwin.SwfButton(obj_swfbtn_Sort).SwfClick "Sort Button"
			
			SortWindow.SwfComboBox(obj_swfobject_Combo).SwfSelect "Claimant Name","ClaimsSort By Combo Box"
			SortWindow.SwfButton(obj_swfbtn_ok).SwfClick "Ok Button"
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()
			ClaimNo = g_CLAIMNO

			If Ucase(g_strEnvironment) = "ITEST1" Then
				sv_chat = 5035
				sv_name = 5043
			Elseif Ucase(g_strEnvironment) = "UA" Then
				sv_chat = 150
				sv_name = 285422
			End If
			NaviLinkwin.SwfTreeView(obj_swftree_Cvtree).SwfTreeSelect "\Chattanooga","Tree View Chattnooga"
			Call SyncWind()
			NaviLinkwin.SwfTreeView(obj_swftree_Cvtree).SwfTreeSelect "\Chattanooga\" & sv_chat,"Tree View"
			Call SyncWind()
			NaviLinkwin.SwfTreeView(obj_swftree_Cvtree).SwfTreeSelect "\Chattanooga\" & sv_chat & "\" & sv_name,"Tree View"
			Call SyncWind()
            Call fn_RecoveryAction()

			
			NaviLinkwin.SwfTreeView(obj_swftree_Cvtree).SwfTreeSelect "\Chattanooga\"  & sv_chat & "\" & sv_name & "\" &ClaimNo,"Tree View"
			Call SyncWind()
			NaviLinkwin.SwfTreeView(obj_swftree_Cvtree).SwfTreeSelect "\Chattanooga\" & sv_chat & "\" & sv_name & "\" &ClaimNo&"\ACTIVITY","Tree View"
			Call SyncWind()
			wait(2)
			Call fn_RecoveryAction()

			 NaviLinkwin.SwfEdit(obj_swfEdit_ACNo).SwfGetValue  "ActivityClaimNo"
			wait(2)
			NaviLinkwin.SwfTreeView(obj_swftree_Cvtree).SwfTreeCollapse "\Chattanooga","Tree View Chattnooga Collapsed"
			Wait(15)
            Call CloseTabWin()
			Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()
			SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
			Wait(2)			
End Function
''================================================================================================================
Public Function CV_OPENCLAIMDOC_Fun()
		   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
		   	Set obj = fn_Object("SwfWindow","NaviLink")
			Set NaviLinkwin = SwfWindow(obj)
			Set obj = fn_Object("SwfWindow","WrkLst_SrtBy")
			Set SortWindow = SwfWindow(obj)	  
			Set obj_swfbtn_Sort = fn_Object("SwfButton","ClmVW_Sort")
			Set obj_swfobject_Combo = fn_Object("SwfComboBox","ClmVW_SrtBy")
			Set obj_swfbtn_ok = fn_Object("SwfButton","Ok")  	
			Set obj_swftree_Cvtree =  fn_Object("SwfTreeView","ClmVW_Tree")
			Set obj_swfEdit_ACNo = fn_Object("SwfEdit","NavLnkClaimNo")
			Set obj_swfEdit_AOwn = fn_Object("SwfEdit","ActOwnr")
			
			NaviLinkwin.SwfButton(obj_swfbtn_Sort).SwfClick "Sort Button"
			wait(5)
			
			SortWindow.SwfComboBox(obj_swfobject_Combo).SwfSelect "Claimant Name","ClaimsSort By Combo Box"
			SortWindow.SwfButton(obj_swfbtn_ok).SwfClick "Ok Button"
			Call SyncWind()
            Call fn_RecoveryAction()
			wait(15)
			ClaimNo = g_CLAIMNO

			If Ucase(g_strEnvironment) = "ITEST1" Then
				sv_chat = 5035
				sv_name = 5043
			Elseif Ucase(g_strEnvironment) = "UA" Then
				sv_chat = 150
				sv_name = 285422
			End If

			NaviLinkwin.SwfTreeView(obj_swftree_Cvtree).SwfTreeSelect "\Chattanooga","Tree View Chattnooga"
            wait(5)
			Call SyncWind()
			NaviLinkwin.SwfTreeView(obj_swftree_Cvtree).SwfTreeSelect "\Chattanooga\" & sv_chat,"Tree View"
            wait(5)
			Call SyncWind()
			NaviLinkwin.SwfTreeView(obj_swftree_Cvtree).SwfTreeSelect "\Chattanooga\" & sv_chat & "\" & sv_name,"Tree View"
			Call SyncWind()
            Call fn_RecoveryAction()

			NaviLinkwin.SwfTreeView(obj_swftree_Cvtree).SwfTreeSelect "\Chattanooga\"& sv_chat & "\" & sv_name & "\" & ClaimNo,"Tree View"
			Call SyncWind()
			NaviLinkwin.SwfTreeView(obj_swftree_Cvtree).SwfTreeSelect "\Chattanooga\"& sv_chat & "\" & sv_name & "\" & ClaimNo&"\CLAIMDOC","Tree View"
            Call SyncWind()
			wait(5)
            Call fn_RecoveryAction()

			NaviLinkwin.SwfEdit(obj_swfEdit_ACNo).SwfGetValue "DocClaimNo"
			If Trim(g_ReValue)=Trim(ClaimNo) Then
					Call WriteReport("Selected ClaimDOC with "&ClaimNo & " from Tree  Matches "&Val& " From opened Doc","Doc with Claim No :"&Val & " Was Opened","Doc with Claim No :"&Val & "  Was Opened","P")
				Else
					Call WriteReport("Selected ClaimDoc with "&ClaimNo & " from Tree  Matches "&Val& " From opened ClaimDoc","ClaimDoc with Claim No :"&Val & " Was  not  Matched","ClaimDoc with Claim No :"&Val & " not matched with Expected","F")	
			End If
			Wait(2)
			NaviLinkwin.SwfTreeView(obj_swftree_Cvtree).SwfTreeCollapse "\Chattanooga","Tree View Chattnooga Collapsed"
            Call fn_RecoveryAction()

			Wait(2)
			Set obj_SwfTab_MainTab =  fn_Object("SwfTab","ClmFoldUltraTabCtrl")
			Wait(15)
            CloseTabWin()
			Call SyncWind()
			wait(5)
			SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
            Call fn_RecoveryAction()
			Wait(2)			
End Function
''================================================================================================================
Public Function GENERAL_ICD9_Fun()
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
	Call ViewClaimProfile("CLAIMNO",g_CLAIMNO)
	wait(5)
	Set obj_swfobject_Navi = fn_Object("SwfWindow","NaviLink")
	Set NaviLinkwin = SwfWindow(obj_swfobject_Navi)
	Set obj_swfobject_ICD = fn_Object("SwfWindow","ICD9Lookup")
	Set ICDWindow = SwfWindow(obj_swfobject_ICD)
	Set obj_swfobject = fn_Object("SwfButton","FindPrimDxCode")
	Set obj_swfobject5 = fn_Object("SwfButton","BtnSearch")
	Set obj_swfobject7 = fn_Object("SwfButton","OkButton")
	Set obj_swfbutton_ICD9_Cancel = fn_Object("SwfButton","ICD9_Cancel")
    Set obj_swfobject1 = fn_Object("SwfEdit","ICD9Code")
	Set obj_swfobject2 = fn_Object("SwfEdit","ICD9Desc")
	Set obj_swfobject3 = fn_Object("SwfRadioButton","ICDCode")
	Set obj_swfobject4 = fn_Object("SwfRadioButton","ICDDesc")
	Set obj_swfobject6 = fn_Object("SwfTable","ICD9Grid")

	NaviLinkwin.SwfButton(obj_swfobject).Click
	Call SyncWind()
	wait(15)
	SearchByVal="Description"
	Code="414.9"
	Desc="DESCEMETOCELE"
	If SearchByVal="Code" Then
		ICDWindow.SwfEdit(obj_swfobject1).SwfSet(Code)
		ICDWindow.SwfButton(obj_swfobject5).SwfClick "PrimaryDXCode"
		Call SyncWind()
		wait(10)
        Call fn_RecoveryAction()

		ICDWindow.SwfTable(obj_swfobject6).SwfGetCell Code,0,"Grid"
		ICDWindow.SwfButton(obj_swfbutton_ICD9_Cancel).SwfClick "CancelButton"
	ElseIf SearchByVal="Description" Then
		ICDWindow.SwfRadioButton(obj_swfobject4).Set
		ICDWindow.SwfEdit(obj_swfobject2).SwfSet Desc,"Description"
		ICDWindow.SwfButton(obj_swfobject5).SwfClick "Seach Button"
		Call SyncWind()
		wait(10)
        Call fn_RecoveryAction()

		Val=ICDWindow.SwfTable(obj_swfobject6).GetCellData(0,1)
		If Trim(Val)=Trim(Desc) Then
			strSearchValue=Desc
			sv_Value=Desc
			Call WriteReport("Verify Value From Grid: "&strSearchValue & " was Selected",sv_Value & " Selected",sv_Value & " Selected","P")
		Else
			Call WriteReport("Verify Value From Grid: "&strSearchValue & " Selected",sv_Value & " Not Selected",sv_Value & " Not Selected","F")
		End If
		ICDWindow.SwfButton(obj_swfbutton_ICD9_Cancel).SwfClick "Cancel Button"
	End If  
    Call fn_RecoveryAction()
	Wait(5)

	Set obj_swfBttn_EXClose = fn_Object("SwfButton","Cancel")
	Set obj_swfBttn_EXOK = fn_Object("WinButton","BtnOK")
	Set obj_swfDialog_Cancel = fn_Object("Dialog","CanclChngs")
	NaviLinkwin.SwfButton(obj_swfBttn_EXClose).SwfClick "Cancel Button"
	wait(5)
	If NaviLinkwin.Dialog(obj_swfDialog_Cancel).WinButton(obj_swfBttn_EXOK).Exist(10) Then
		NaviLinkwin.Dialog(obj_swfDialog_Cancel).WinButton(obj_swfBttn_EXOK).Click 
	End If
	Wait(10)	
    Call fn_RecoveryAction()
End Function
''================================================================================================================  
Public Function ClaimantIPN()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
	Call ViewClaimProfile("CLAIMNO",g_CLAIMNO)
	wait(5)
	
	Set obj_swfobject_Navi = fn_Object("SwfWindow","NaviLink")
	Set NaviLinkwin = SwfWindow(obj_swfobject_Navi)
	Set obj_swfobject_IPN = fn_Object("SwfWindow","FIXIPN")
	Set IPNWin = SwfWindow(obj_swfobject_IPN)
	Set obj_swfobject_IPN = fn_Object("SwfButton","FixIPNButton")
	Set obj_swfLabel_Claimant = fn_Object("SwfLabel","ClaimantIPN")
	Set obj_swfEditor_CorrectIPN = fn_Object("SwfEditor","CorrectIPN")
	Set obj_swfbtn_FixIPN_Cancel = fn_Object("SwfButton","ICD9_Cancel")
	Set obj_swfTab= fn_Object("SwfTab","ClmPrfTabControl")
    
	NaviLinkwin.SwfTab(obj_swfTab).SwfTabSelect "Claimant","Claimant Tab"
	Call SyncWind()
	Wait(5)
    Call fn_RecoveryAction()

	Set obj_swfobject_Excep = fn_Object("SwfWindow","NavLnkExpDialog")
	Set NaviLinkExcep = NaviLinkwin.SwfWindow(obj_swfobject_Excep)
	Set obj_swfEdit_EXClose = fn_Object("SwfButton","Close")
    
	wait(5)
	sv_True = "FALSE"
	sv_True = NaviLinkwin.SwfObject(obj_swfobject_IPN).Exist
	If UCASE(sv_True) = "TRUE" Then
		NaviLinkwin.SwfObject(obj_swfobject_IPN).SwfClick "IPNButton"
		Call SyncWind()
		Wait(5)
		
		If IPNWin.SwfLabel(obj_swfLabel_Claimant).Exist(10) Then
			Val=IPNWin.SwfLabel(obj_swfLabel_Claimant).GetRoProperty("text")
			If Val<>"" Then
				Call WriteReport("Claimant IPN Value Should Display","Claimant IPN Value is:"&Val&"","Claimant IPN Value is:"&Val&"is Dispalyed as expected","P")		
			Else
				Call WriteReport("Claimant IPN Value Should Display","Claimant IPN Value is:"&Val&"","Claimant IPN Value is:"&Val&"is not Dispalyed as expected","F")		
			End If
		End If
		Call fn_RecoveryAction()		

		IPNWin.SwfEditor(obj_swfEditor_CorrectIPN).Type Val
		Call WriteReport("Set the Correct IPN Value ","Correct IPN Value is:"&Val&"","Correct IPN Value is:"&Val&"is Dispalyed as expected","P")		
		IPNWin.SwfButton(obj_swfbtn_FixIPN_Cancel).SwfClick "Fix IPN Cancel Button"
		Wait(5)
	Else
		Call WriteReport("Claimant IPN Button is Available","Claimant IPN Button is Available as expected","Claimant IPN Button is not Available as expected","F")
	End If

	Set obj_swfBttn_EXClose = fn_Object("SwfButton","Cancel")
	Set obj_swfBttn_EXOK = fn_Object("WinButton","BtnOK")
	Set obj_swfDialog_Cancel = fn_Object("Dialog","CanclChngs")
	NaviLinkwin.SwfButton(obj_swfBttn_EXClose).SwfClick "Cancel Button"
    Call fn_RecoveryAction()
	wait(5)
	If NaviLinkwin.Dialog(obj_swfDialog_Cancel).WinButton(obj_swfBttn_EXOK).Exist(10) Then
		NaviLinkwin.Dialog(obj_swfDialog_Cancel).WinButton(obj_swfBttn_EXOK).Click 
	End If
	Wait(10)	
    Call fn_RecoveryAction()
End Function
''================================================================================================================
Public Function Claimant_Contactinfo()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
	Set obj_swfobject_Navi = fn_Object("SwfWindow","NaviLink")
	Set NaviLinkwin = SwfWindow(obj_swfobject_Navi)

	Set obj_swfobject_Excep = fn_Object("SwfWindow","NavLnkExpDialog")
	Set NaviLinkExcep = SwfWindow(obj_swfobject_Excep)
	Set obj_swfEdit_EXClose = fn_Object("SwfButton","Close")
	
	Set obj_swfEdit_PAdd1 = fn_Object("SwfEdit","PrmAdd1")
	Set obj_swfEdit_PAdd2 = fn_Object("SwfEdit","PrmAdd2")
	Set obj_swfEdit_PCity = fn_Object("SwfEdit","PrmCity")
	Set obj_swfEdit_PEmail = fn_Object("SwfEdit","PrmEmail")
	Set obj_swfEdit_TAdd1 = fn_Object("SwfEdit","TmpAdd1")
	Set obj_swfEdit_TAdd2 = fn_Object("SwfEdit","TmpAdd2")
	Set obj_swfEdit_TCity = fn_Object("SwfEdit","TmpCity")
	Set obj_swfEdit_TEmail = fn_Object("SwfEdit","TmpEmail")
	Set obj_SwfObject_PPCode = fn_Object("SwfEdit","Prm_PstlCde")
	Set obj_SwfObject_PPhNo = fn_Object("SwfEdit","Prm_PhneNum")
	Set obj_SwfObject_PFXno = fn_Object("SwfEdit","Prm_FaxNum")
	Set obj_SwfObject_TPCode = fn_Object("SwfEdit","Tmp_PstlCde")
	Set obj_SwfObject_TPhNo = fn_Object("SwfEdit","Tmp_PhNum")
	Set obj_SwfObject_TFXno = fn_Object("SwfEdit","Tmp_FaxNum")
	Set obj_SwfObject_TBDte = fn_Object("SwfEdit","BegDate")
	Set obj_SwfObject_TEDte = fn_Object("SwfEdit","EndDate")

	Set obj_SwfComboBox_PState = fn_Object("SwfComboBox","Prm_Stat/Prov")
	Set obj_SwfComboBox_PCountry = fn_Object("SwfComboBox","Prm_Country")
	Set obj_SwfComboBox_PPhType = fn_Object("SwfComboBox","Prm_PhType")
	Set obj_SwfComboBox_PFaxtype = fn_Object("SwfComboBox","Prm_FaxType")
	Set obj_SwfComboBox_PEmailType = fn_Object("SwfComboBox","Prm_EmilType")
	Set obj_SwfComboBox_TState = fn_Object("SwfComboBox","Tmp_Stat/Prov")
	Set obj_SwfComboBox_TCountry = fn_Object("SwfComboBox","Tmp_Country")
	Set obj_SwfComboBox_TPhType = fn_Object("SwfComboBox","Tmp_PhType")
	Set obj_SwfComboBox_TFaxtype = fn_Object("SwfComboBox","Tmp_FaxType")
	Set obj_SwfComboBox_TEmailType = fn_Object("SwfComboBox","Tmp_EmailType")
	
	Set obj_swfbtn_SaveNClose = fn_Object("SwfButton","Sve&Clse")
	
	Set obj_SwfCheckBox_PPhInt = fn_Object("SwfCheckBox","Prm_PhneIntl")
	Set obj_SwfCheckBox_PFxInt = fn_Object("SwfCheckBox","Prm_FaxIntl")
	Set obj_SwfCheckBox_TPhInt = fn_Object("SwfCheckBox","Tmp_PhneIntl")
	Set obj_SwfCheckBox_TFxInt = fn_Object("SwfCheckBox","Tmp_FaxIntnl")
	
	Set obj_SwfTab = fn_Object("SwfTab","Clmnt_AdrsTab")
	Set obj_swfTab1= fn_Object("SwfTab","ClmPrfTabControl")
	
	Call ViewClaimProfile("CLAIMNO",g_CLAIMNO)
    wait(5)
	NaviLinkwin.SwfTab(obj_swfTab1).SwfTabSelect "Claimant","Claimant Tab"
	Call SyncWind()
	wait(5)
	
    Call fn_RecoveryAction()
	NaviLinkwin.SwfEdit(obj_swfEdit_PAdd1).SwfExist  "PermanentAdd1"
	NaviLinkwin.SwfEdit(obj_swfEdit_PAdd1).SwfSet "211234 Main St","PermanentAdd1"
	
	NaviLinkwin.SwfEdit(obj_swfEdit_PAdd2).SwfExist "PermanentAdd2"
	NaviLinkwin.SwfEdit(obj_swfEdit_PAdd2).SwfSet "211234 Main St","PermanentAdd2"
	
	NaviLinkwin.SwfEdit(obj_swfEdit_PCity).SwfExist "PermanentCITY"
	NaviLinkwin.SwfEdit(obj_swfEdit_PCity).SwfSet "ALLENTON","PermanentCITY"
	Call fn_RecoveryAction()

	NaviLinkwin.SwfComboBox(obj_SwfComboBox_PCountry).SwfExist "PermanentCOUNTRY"
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_PCountry).SwfSelect "United States","PermanentCOUNTRY"
	
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_PState).SwfExist "PermanentSTATE"
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_PState).SwfSelect "Michigan","PermanentSTATE"
	
	NaviLinkwin.SwfEditor(obj_SwfObject_PPCode).SwfExist "Perm_Postal_CODE"
	NaviLinkwin.SwfEditor(obj_SwfObject_PPCode).SwfType "48002","Perm_Postal_CODE"
	
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_PPhType).SwfExist "Perm_Phone_TYPE"
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_PPhType).SwfSelect "Home","Perm_Phone_TYPE"
	Call fn_RecoveryAction()
	 
	NaviLinkwin.SwfCheckBox(obj_SwfCheckBox_PPhInt).SwfExist "Perm_PH_INT"
	NaviLinkwin.SwfCheckBox(obj_SwfCheckBox_PPhInt).Click'Select'Object.Click'Set '"ON","Perm_PH_INT"
	
	NaviLinkwin.SwfEditor(obj_SwfObject_PPhNo).SwfExist "Perm_PHNO"
	NaviLinkwin.SwfEditor(obj_SwfObject_PPhNo).SwfType "2075752292","Perm_PHNO"
	
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_PFaxtype).SwfExist "PermFAXTYPE"
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_PFaxtype).SwfSelect "Home","PermFAXTYPE"
	
	NaviLinkwin.SwfCheckBox(obj_SwfCheckBox_PFxInt).SwfExist "PFAXINT"
	NaviLinkwin.SwfCheckBox(obj_SwfCheckBox_PFxInt).click
	Call fn_RecoveryAction()

	NaviLinkwin.SwfEditor(obj_SwfObject_PFXno).SwfExist "PFAXNO"
	NaviLinkwin.SwfEditor(obj_SwfObject_PFXno).SwfType "2075752292","PFAXNO"
	
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_PEmailType).SwfExist "PEMAILTYPE"
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_PEmailType).SwfSelect "Home","PEMAILTYPE"
	
	NaviLinkwin.SwfEdit(obj_swfEdit_PEmail).SwfExist "PEMAIL"
	NaviLinkwin.SwfEdit(obj_swfEdit_PEmail).SwfSet "test@unum.com","PEMAIL" 
	Call SyncWind()
    Call fn_RecoveryAction()
	Wait(5)

	NaviLinkwin.SwfTab(obj_SwfTab).SwfTabSelect "Temporary","Temporary Tab"
	Call SyncWind()
    Call fn_RecoveryAction()
	Wait(5)
	
	NaviLinkwin.SwfEditor(obj_SwfObject_TBDte).SwfExist "TempBDATE"
	NaviLinkwin.SwfEditor(obj_SwfObject_TBDte).SwfType"01282010","TempBDATE"
	
	NaviLinkwin.SwfEditor(obj_SwfObject_TEDte).SwfExist "TempEDATE"
	NaviLinkwin.SwfEditor(obj_SwfObject_TEDte).SwfType"01282010","TempEDATE"
	
	NaviLinkwin.SwfEdit(obj_swfEdit_TAdd1).SwfExist "TempADDRS1"
	NaviLinkwin.SwfEdit(obj_swfEdit_TAdd1).SwfSet "123rd Ave","TempADDRS1"
	
	NaviLinkwin.SwfEdit(obj_swfEdit_TAdd2).SwfExist "TempADDRS2"
	NaviLinkwin.SwfEdit(obj_swfEdit_TAdd2).SwfSet "211 Main St","TempADDRS2"
	
	NaviLinkwin.SwfEdit(obj_swfEdit_TCity).SwfExist "TempCITY"
	NaviLinkwin.SwfEdit(obj_swfEdit_TCity).SwfSet "ALLENTON","TempCITY"
	Call fn_RecoveryAction()

	NaviLinkwin.SwfComboBox(obj_SwfComboBox_TCountry).SwfExist "TempCOUNTRY"
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_TCountry).SwfSelect "United States","TempCOUNTRY"
	
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_TState).SwfExist "TempSTATE"
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_TState).SwfSelect "Michigan","TempSTATE"
	
	NaviLinkwin.SwfEditor(obj_SwfObject_TPCode).SwfExist "TempPCODE"
	NaviLinkwin.SwfEditor(obj_SwfObject_TPCode).SwfType "48002","TempPCODE"
	
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_TPhType).SwfExist "TempPHTYPE"
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_TPhType).SwfSelect "Home","TempPHTYPE"
	Call fn_RecoveryAction()

	NaviLinkwin.SwfCheckBox(obj_SwfCheckBox_TPhInt).SwfExist "TempPNINT"
	NaviLinkwin.SwfCheckBox(obj_SwfCheckBox_TPhInt).Click'Set "ON"'"ON","TempPNINT"
	
	NaviLinkwin.SwfEditor(obj_SwfObject_TPhNo).SwfExist "TempPHNO"
	NaviLinkwin.SwfEditor(obj_SwfObject_TPhNo).SwfType "2075752292","TempPHNO"
	
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_TFaxtype).SwfExist "TempFAXTYPE"
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_TFaxtype).SwfSelect "Home","TempFAXTYPE"
	
	NaviLinkwin.SwfCheckBox(obj_SwfCheckBox_TFxInt).SwfExist "TempFXINT"
	NaviLinkwin.SwfCheckBox(obj_SwfCheckBox_TFxInt).Click
	
	NaviLinkwin.SwfEditor(obj_SwfObject_TFXno).SwfExist "TempFXNO"
	NaviLinkwin.SwfEditor(obj_SwfObject_TFXno).SwfType "2075752292","TempFXNO"
	
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_TEmailType).SwfExist "TempEMailType"
	NaviLinkwin.SwfComboBox(obj_SwfComboBox_TEmailType).SwfSelect "Home","TempEMailType"
	
	NaviLinkwin.SwfEdit(obj_swfEdit_TEmail).SwfExist "TempEMail"
	NaviLinkwin.SwfEdit(obj_swfEdit_TEmail).SwfSet "test@unum.com","TempEMail" 
	Call fn_RecoveryAction()

	Set obj_swfBttn_EXClose = fn_Object("SwfButton","Cancel")
	Set obj_swfBttn_EXOK = fn_Object("WinButton","BtnOK")
	Set obj_swfDialog_Cancel = fn_Object("Dialog","CanclChngs")
	NaviLinkwin.SwfButton(obj_swfBttn_EXClose).SwfClick "Cancel Button"
	wait(5)
	NaviLinkwin.Dialog(obj_swfDialog_Cancel).WinButton(obj_swfBttn_EXOK).Click 
	Call fn_RecoveryAction()
End Function
''================================================================================================================	
'
'																		Iteration3
'
''================================================================================================================
Public Function ActivityOwnSrh()
If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If
   Set Obj = fn_Object("SwfWindow","NaviLink")
   Set NaviLinkWin = SwfWindow(Obj)

   Set Obj = fn_Object("SwfWindow","ActOwnSrh")
   Set ActivityOwnSrh = SwfWindow(Obj)

   Set Obj = fn_Object("Dialog","CanclChngs")
   Set CanChngs = swfWindow(Obj)

   Set Obj_SwfObject_ActivityPge = fn_Object("SwfObject","ActivityPage")
   Set Obj_SwfObject_ClmPrfPge = fn_Object("SwfObject","ClaimProfilePage")
   Set Obj_WinObj_IE = fn_Object("SwfObject","ClmDocNotes")

   Set Obj_SwfTab_TabControl = fn_Object("SwfTab","TabControl")
   Set Obj_SwfTab_TabCtrl = fn_Object("SwfTab","ClmPrfTabControl")
   Set Obj_SwfTab_ClmTabCtrl = fn_Object("SwfTab","ClmFoldUltraTabCtrl")

   Set Obj_SwfButton_New = fn_Object("SwfButton","NewAdtTril")
   Set Obj_SwfButton_ActOwnSrh = fn_Object("SwfButton","ActOwnSrh")
   Set Obj_SwfButton_SveClse = fn_Object("SwfButton","Sve&Clse")
   Set Obj_SwfButton_Cancel = fn_Object("SwfButton","Cancel")
   Set Obj_SwfButton_OK = fn_Object("SwfButton","OkButton")
   Set Obj_SwfButton_Search = fn_Object("SwfButton","BtnSearch")

   Set Obj_SwfComboBox_Unit  = fn_Object("SwfComboBox","AtOwnSrh_Unit")
   Set Obj_SwfComboBox_SbUnit  = fn_Object("SwfComboBox","AtOwnSrh_SbUnit")
   Set Obj_SwfComboBox_JbTitle  = fn_Object("SwfComboBox","AtOwnSrh_JBTitle")
   Set Obj_SwfComboBox_JbFunc  = fn_Object("SwfComboBox","AtOwnSrh_JBFunc")
   Set Obj_SwfComboBox_Type = fn_Object("SwfComboBox","Act_Type")
   Set Obj_SwfComboBox_Name  = fn_Object("SwfComboBox","Act_Name")

   Set Obj_SwfEdit_ActOwn = fn_Object("SwfEdit","ActOwnr")
   Set Obj_SwfEdit_Sub = fn_Object("SwfEdit","Subject")

   Set Obj_SwfTable_OwnSrh = fn_Object("SwfTable","OwnSrhRes")
   Set Obj_Actx_Req = fn_Object("ActiveX","WorkLst_Tree")

   Set Obj_WinBtn_OK = fn_Object("WinButton","BtnOK")

   Call CloseTabWin()
   Call SyncWind()
   
   ViewClaimProfile "CLAIMNO",g_CLAIMNO
   Call SyncWind()
   Call fn_RecoveryAction()  

   NaviLinkWin.SwfObject(Obj_SwfObject_ClmPrfPge).SwfExist "ClaimProfileTabPage"
   NaviLinkWin.SwfTab(Obj_SwfTab_TabControl).SwfTabSelect "Activity","ActivityTab"
   NaviLinkWin.SwfObject(Obj_SwfObject_ActivityPge).SwfClick "ActivityTabPage"
   NaviLinkWin.SwfButton(Obj_SwfButton_New).SwfExist "New Button"
   NaviLinkWin.SwfButton(Obj_SwfButton_New).SwfClick "New Button"
   NaviLinkWin.SwfComboBox(Obj_SwfComboBox_Type).SwfSelect "Personal","Personal"
   NaviLinkWin.SwfComboBox(Obj_SwfComboBox_Name).SwfSelect "General","General"
   NaviLinkWin.SwfButton(Obj_SwfButton_ActOwnSrh).SwfClick "Activity Owner Search Button"
  Call SyncWind()
  Call fn_RecoveryAction()

   ActivityOwnSrh.SwfExist "Activity Owner Search Window"
   SwfWindow("Swin_NaviLink").SwfWindow("Swin_ActvtyOnerSearch").SwfComboBox("SCoBox_SiteCombo").Select "Portland"
   ActivityOwnSrh.SwfComboBox(Obj_SwfComboBox_Unit).SwfSelect "Intake","Intake"
   ActivityOwnSrh.SwfComboBox(Obj_SwfComboBox_SbUnit).SwfSelect "Port - Intake","Port - Intake"
   ActivityOwnSrh.SwfComboBox(Obj_SwfComboBox_JbTitle).SwfSelect "Intake Specialist", "Intake Specialist"
   ActivityOwnSrh.SwfComboBox(Obj_SwfComboBox_JbFunc).SwfSelect "Intake Specialist","Intake Specialist"
   ActivityOwnSrh.SwfButton(Obj_SwfButton_Search).SwfClick "Activity Owner Search button"
   Call SyncWind()
   Call fn_RecoveryAction()

   GrdResVal = ActivityOwnSrh.SwfTable(Obj_SwfTable_OwnSrh).SwfGetCell("Fowler, Russ","Owner","Activity Owner Search Grid")
   ActivityOwnSrh.SwfButton(Obj_SwfButton_OK).SwfClick "Activity Owner Search OK Button"

   NaviLinkWin.SwfObject(Obj_SwfObject_ActivityPge).SwfExist "Back to ActivityTab"
   OwnNme = NaviLinkWin.SwfEdit(Obj_SwfEdit_ActOwn).SwfGetValue ("Activity Owner Name")

   If Ucase(Trim(GrdResVal)) = Ucase(Trim(OwnNme)) Then
       Call WriteReport("Check both  selected Grid value and Owner Field Values ","Both field values are Same","Both Field Values are Same as Expected","P")
	Else
		Call WriteReport("Check both  selected Grid value and Owner Field Values ","Both field values are Not Same","Both Field Values are Not Same as Expected","F")
	End If
	Call fn_RecoveryAction()

	NaviLinkWin.SwfButton(Obj_SwfButton_Cancel).SwfClick "Click Ok Button"
	Call SyncWind()
	CanChngs.SwfButton(Obj_WinBtn_OK).SwfClick "Click Ok Button"
	Call CloseTabWin()
	Call SyncWind()
	Call fn_RecoveryAction()

End Function
'================================================================================================================
Public Function Tools_DateCal()
If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If
   Set Obj = fn_Object("SwfWindow","NaviLink")
   Set NavilinkWin = SwfWindow(Obj)

   Set Obj = fn_Object("SwfWindow","DateCalc")
   Set DateCalc = SwfWindow(Obj)

   Set obj_SwfToolbar_ToolMenu = fn_Object("SwfToolbar","Toolbar")

   Call CloseTabWin()
   Call SyncWind()
   
   NavilinkWin.SwfExist "NaviLink Window"

   NavilinkWin.SwfToolbar(obj_SwfToolbar_ToolMenu).SwfSelMenu "Tools"
   NavilinkWin.SwfToolbar(obj_SwfToolbar_ToolMenu).SwfSelSubMenu "Tools","Date Calculator"
	Call fn_RecoveryAction()

	DateCalc.SwfExist "Date Caculator Window"
	DateCalc.SwfClose "Date Caculator Window"

	CloseTabWin()
	Call SyncWind()
    Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function ClmReOpenDiLog()
If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If
   Set Obj = fn_Object("SwfWindow","NaviLink")
   Set NaviLinkWin = SwfWindow(Obj)

   Set Obj = fn_Object("SwfWindow","SingleSearch")
   Set SingleSearch = SwfWindow(Obj)

   Set Obj = fn_Object("SwfWindow","ReopenClaim")
   Set ReOpenClm = SwfWindow(Obj)

   Set Obj_SwfToolBar_Toolbar = fn_Object("SwfToolbar","Toolbar")
   Set Obj_SwfEdit_ClmNo = fn_Object("SwfEdit","ClaimNo")
   Set Obj_SwfButton_Search = fn_Object("SwfButton","SnglSrh")
   Set Obj_SwfButton_VwClmProf = fn_Object("SwfButton","ViewClaimProfile")
   Set Obj_SwfButton_SaveClose = fn_Object("SwfButton","Sve&Clse")
   Set Obj_SwfButton_Cancel = fn_Object("SwfButton","Cancel")
   Set Obj_SwfTable_SrhRes = fn_Object("SwfTable","ClmSrhRes")
   Set Obj_SwfObject_ClmProf = fn_Object("SwfObject","ClaimProfilePage")
   Set Obj_SwfComboBox_ClmStatus = fn_Object("SwfComboBox","NavLnkClmStat")
   Set Obj_SwfTab_ClaimTab = fn_Object("SwfTab","ClmFoldUltraTabCtrl")

   CloseTabWin()
   Call SyncWind()

   ViewClaimProfile "CLAIMNO",g_CLAIMNO
	Call SyncWind()
   Call fn_RecoveryAction()

	NaviLinkWin.SwfObject(Obj_SwfObject_ClmProf).SwfExist "Claim Profile Page"
	Call SyncWind()
	
	sv_SelectValue = NaviLinkWin.SwfComboBox(Obj_SwfComboBox_ClmStatus).GetSelection
	If Ucase(sv_SelectValue) <> "CLOSED" Then
		SwfWindow("Swin_NaviLink").SwfComboBox("SCoBox_NavLnkClmStat").Select "Closed"
		SwfWindow("Swin_NaviLink").SwfButton("SBtn_Save").SwfClick "Save Button"
		Wait(5)
		Call SyncWind()

		SwfWindow("Swin_NaviLink").SwfWindow("Swin_CloseClaimDlg").SwfEditor("Sedt_NotesText").SwfType "Testing","Notes edit box"
		SwfWindow("Swin_NaviLink").SwfWindow("Swin_CloseClaimDlg").SwfButton("OK").SwfClick "ok Button"
		Wait(5)
		Call SyncWind()
		Call fn_RecoveryAction()
	End If
		NaviLinkWin.SwfComboBox(Obj_SwfComboBox_ClmStatus).SwfSelect "Open", "Open"
		NaviLinkWin.SwfButton(Obj_SwfButton_SaveClose).SwfClick "Save & Close Button"
		Call SyncWind()
		
		ReOpenClm.SwfExist "ReOpen Claim Window"
		ReOpenClm.SwfButton(Obj_SwfButton_Cancel).SwfClick "Cancel Button"
		Call fn_RecoveryAction()

		If SwfWindow("swfname:= ShellForm").Dialog("text:=Error", "nativeclass:= #32770").Exist(10) Then
			Call WriteReport("Verfiy Error DailogBox","Error DailogBox is Existed","Error DailogBox is Existed as Expected","P")
			SwfWindow("swfname:= ShellForm").Dialog("text:=Error", "nativeclass:= #32770").WinButton("text:=OK").Click
		Else
			Call WriteReport("Verfiy Error DailogBox","Error DailogBox is not Existed","Error DailogBox is not Existed as Expected","F")
		End If
    	
	Set obj_swfBttn_EXClose = fn_Object("SwfButton","Cancel")
	Set obj_swfBttn_EXOK = fn_Object("WinButton","BtnOK")
	Set obj_swfDialog_Cancel = fn_Object("Dialog","CanclChngs")
	NaviLinkwin.SwfButton(obj_swfBttn_EXClose).SwfClick "Cancel Button"
	wait(5)
    NaviLinkwin.Dialog(obj_swfDialog_Cancel).WinButton(obj_swfBttn_EXOK).Click 
	Call SyncWind()	
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function Claimant()
If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If
   Set Obj = fn_Object("SwfWindow","NaviLink")
   Set NaviLinkWin = SwfWindow(Obj)

   Set Obj_SwfObject_ClmPrfPage = fn_Object("SwfObject","ClaimProfilePage")
   Set Obj_SwfObject_ClmPrfGenTab = fn_Object("SwfObject","ClmProfGeneral")
   Set Obj_SwfObject_ClmPrfClmTab = fn_Object("SwfObject","ClmProfClaimant")
   Set Obj_SwfTab_ClmPrfTabCtrl = fn_Object("SwfTab","ClmPrfTabControl")
   
   CloseTabWin()
   Call SyncWind()

	ViewClaimProfile "CLAIMNO",g_CLAIMNO
	Call SyncWind()
    Call fn_RecoveryAction()

   NaviLinkWin.SwfObject(Obj_SwfObject_ClmPrfPage).SwfExist "Claim Profile Page"
   Call SyncWind()
   Wait(15)
   NaviLinkWin.SwfTab(Obj_SwfTab_ClmPrfTabCtrl).SwfTabSelect "Claimant","Claim Profile Claimant Tab"
   Call SyncWind()
   Wait(10)
	Set obj_swfobject_Excep = fn_Object("SwfWindow","NavLnkExpDialog")
	Set NaviLinkExcep = NaviLinkwin.SwfWindow(obj_swfobject_Excep)
	Set obj_swfEdit_EXClose = fn_Object("SwfButton","Close")
	
	If NaviLinkExcep.Exist(10) Then
		NaviLinkExcep.SwfButton(obj_swfEdit_EXClose).SwfClick "Exception Window Close Button"
	End If
	Call SyncWind()
	Wait(5)

    CloseTabWin()
	Call SyncWind()
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function Eligibility()
   If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If
   Set Obj = fn_Object("SwfWindow","NaviLink")
   Set NaviLinkWin = SwfWindow(Obj)

   Set Obj_SwfObject_ClmPrfPage = fn_Object("SwfObject","ClaimProfilePage")
   Set Obj_SwfObject_ClmPrfGenTab = fn_Object("SwfObject","ClmProfGeneral")
   Set Obj_SwfObject_ClmPrfElgTab = fn_Object("SwfObject","ClaimPrfEligibility")
   Set Obj_SwfTab_ClmPrfTabCtrl = fn_Object("SwfTab","ClmPrfTabControl")
  
   CloseTabWin()

	ViewClaimProfile "CLAIMNO",g_CLAIMNO
   Call SyncWind()
   Call fn_RecoveryAction()

   NaviLinkWin.SwfObject(Obj_SwfObject_ClmPrfPage).SwfExist "Claim Profile Page"
   Call SyncWind()

	NaviLinkWin.SwfTab(Obj_SwfTab_ClmPrfTabCtrl).SwfTabSelect "Eligibility","Claim Profile Eligibility Tab"
   Call SyncWind()
	wait(5)
	Call fn_RecoveryAction()

   CloseTabWin()
   Call SyncWind()
End Function
'================================================================================================================
Public Function NavLnkVW()
   If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If
   Set Obj = fn_Object("SwfWindow","NaviLink")
   Set NaviLinkWin = SwfWindow(Obj)

    Set Obj_SwfTab_TabCtrl = fn_Object("SwfTab","ClmPrfTabControl")
	Set Obj_SwfObject_GenTab = fn_Object("SwfObject","ClmProfGeneral")
	Set Obj_SwfObject_NavLnkVW = fn_Object("SwfObject","ClmPrfPlanInfo")
	Set Obj_SwfEdit_PolSys = fn_Object("SwfEdit","PolSys")
	
	CloseTabWin()
	Call SyncWind()

   ViewClaimProfile "CLAIMNO",g_CLAIMNO
   Call SyncWind()
	Call fn_RecoveryAction()

   ExpPolSysStat = "Best"
      PolSysStat = NaviLinkWin.SwfEdit(Obj_SwfEdit_PolSys).SwfGetValue("Policy System Edit Box	")

   If Trim(PolSysStat) = Trim(ExpPolSysStat) Then
	   Call WriteReport("Verify Policy System Status ",Val & " is the value in Polcy System Status","Policy System Status Showing Value as Expected","P")        
		NaviLinkWin.SwfTab(Obj_SwfTab_TabCtrl).SwfTabSelect "Plan Info","Plan Info Sub Tab"
    Else
		Call WriteReport("Verify Policy System Status ",Val & " is Not the value in Polcy System Status","Policy System Status Not Showing Value as Expected","F")        
   End If
	Call fn_RecoveryAction()
   CloseTabWin()
   Call SyncWind()
   
End Function
'================================================================================================================
Public Function PolarisVW()
If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If

   Set Obj = fn_Object("SwfWindow","NaviLink")
   Set NaviLinkWin = SwfWindow(Obj)

    Set Obj_SwfTab_TabCtrl = fn_Object("SwfTab","ClmPrfTabControl")
	Set Obj_SwfObject_GenTab = fn_Object("SwfObject","ClmProfGeneral")
	Set Obj_SwfEdit_PolSys = fn_Object("SwfEdit","PolSys")
	Set Obj_SwfObject_PolarisVW = fn_Object("SwfObject","ClmPrfPlanInfo")

	CloseTabWin()

   ViewClaimProfile "CLAIMNO",g_CLAIMNO
  Call SyncWind()
	Call fn_RecoveryAction()

   ExpVal = "Polaris"
   Val = NaviLinkWin.SwfEdit(Obj_SwfEdit_PolSys).SwfGetValue("Policy System Value")

   If Trim(val) = Trim(ExpVal) Then
	   Call WriteReport("Verify Policy System Status ",Val & " is the value in Polcy System Status","Policy System Status Showing Value as Expected","P")
		NaviLinkWin.SwfTab(Obj_SwfTab_TabCtrl).SwfTabSelect "Plan Info","Plan Info Sub Tab"
    Else
		Call WriteReport("Verify Policy System Status ",Val & " is Not the value in Polcy System Status","Policy System Status Not Showing Value as Expected","F")        
   End If
	Call fn_RecoveryAction()
   CloseTabWin()
End Function
'================================================================================================================
Public Function MerlinVW()
If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If
   Set Obj = fn_Object("SwfWindow","NaviLink")
   Set NaviLinkWin = SwfWindow(Obj)

    Set Obj_SwfTab_TabCtrl = fn_Object("SwfTab","ClmPrfTabControl")
	Set Obj_SwfObject_GenTab = fn_Object("SwfObject","ClmProfGeneral")
	Set Obj_SwfEdit_PolSys = fn_Object("SwfEdit","PolSys")
	Set Obj_SwfObject_MerlinVW = fn_Object("SwfObject","ClmPrfMerlinPlanInfo")

	CloseTabWin()
	Call SyncWind()

	ViewClaimProfile "CLAIMNO",g_CLAIMNO
	Call SyncWind()
	Call fn_RecoveryAction()

   ExpVal = "Merlin"
   Val = NaviLinkWin.SwfEdit(Obj_SwfEdit_PolSys).SwfGetValue("Policy System Value")

   If Trim(val) = Trim(ExpVal) Then
	   Call WriteReport("Verify Policy System Status ",Val & " is the value in Polcy System Status","Policy System Status Showing Value as Expected","P")      
		NaviLinkWin.SwfTab(Obj_SwfTab_TabCtrl).SwfTabSelect "Plan Info","Plan Info Sub Tab"
    Else
		Call WriteReport("Verify Policy System Status ",Val & " is Not the value in Polcy System Status","Policy System Status Not Showing Value as Expected","F")      
   End If
	Call fn_RecoveryAction()
   CloseTabWin()
	Call SyncWind()
End Function
'================================================================================================================
Public Function FullDesc()
If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If
   Set Obj = fn_Object("SwfWindow","NaviLink")
   Set NaviLinkWin = SwfWindow(Obj)

   Set Obj = fn_Object("SwfWindow","FulDesc")
   Set FullDesc = SwfWindow(Obj)

   Set Obj_SwfTab_TabCtrl = fn_Object("SwfTab","ClmPrfTabControl")
   Set Obj_SwfObject_GenTab = fn_Object("SwfObject","ClmProfGeneral")
   Set Obj_SwfEdit_PlnSta = fn_Object("SwfEdit","PlanSyncStat")
   Set Obj_SwfButton_FulDesc = fn_Object("SwfButton","Pln_FullDesc")
   Set Obj_SwfButton_OK = fn_Object("SwfButton","FulDesc_OK")

   CloseTabWin()
   ViewClaimProfile "CLAIMNO",g_CLAIMNO
   Call SyncWind()
	Call fn_RecoveryAction()

   StaVal = NaviLinkWin.SwfEdit(Obj_SwfEdit_PlnSta).SwfGetValue("Plan Sync Status")
   If Trim(StaVal) = Trim("Successful") Then
	   Call WriteReport("Verify Plan Sync Status ","Plan Sync Status is "&StaVal,"Plan Sync Status is "&StaVal& " as Expected","P")
	   NaviLinkWin.SwfTab(Obj_SwfTab_TabCtrl).SwfTabSelect "Plan Info","Plan Info Sub Tab"
	   NaviLinkWin.SwfButton(Obj_SwfButton_FulDesc).SwfClick "Full Description Button"
	   Call SyncWind()
       
	   FullDesc.SwfExist "Full Description Window"
	   FullDesc.SwfHighlight "Full Description Window"
	   FullDesc.SwfButton(Obj_SwfButton_OK).SwfClick "Full Description OK Button"
	Else
		Call WriteReport("Verify Plan Sync Status ","Plan Sync Status is Not"&StaVal,"Plan Sync Status is Not "&StaVal& " as Expected","F")
   End If
	Call fn_RecoveryAction()
   CloseTabWin()
	Call SyncWind()
End Function
'================================================================================================================
Public Function VWNotes()
If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If
   Set Obj = fn_Object("SwfWindow","NaviLink")
   Set NaviLinkWin = SwfWindow(Obj)

   Set Obj = fn_Object("SwfWindow","VwContNts")
   Set ContNots = SwfWindow(Obj)

   Set Obj_SwfTab_TabCtrl = fn_Object("SwfTab","ClmPrfTabControl")
   Set Obj_SwfObject_GenTab = fn_Object("SwfObject","ClmProfGeneral")
   Set Obj_SwfEdit_PlnSta = fn_Object("SwfEdit","PlanSyncStat")
   Set Obj_SwfButton_VWNts = fn_Object("SwfButton","Pln_VWNotes")
   Set Obj_SwfButton_NtsCanc = fn_Object("SwfButton","VCNts_Cancel")

   CloseTabWin()
   Call SyncWind()
   
   ViewClaimProfile "CLAIMNO",g_CLAIMNO
	Call SyncWind()
   Call fn_RecoveryAction()

   StaVal = NaviLinkWin.SwfEdit(Obj_SwfEdit_PlnSta).SwfGetValue("Plan Sync Status")
   
   If Trim(StaVal) = Trim("Successful") Then
       Call WriteReport("Verify Plan Sync Status ","Plan Sync Status is "&StaVal,"Plan Sync Status is "&StaVal& " as Expected","P")
		NaviLinkWin.SwfTab(Obj_SwfTab_TabCtrl).SwfTabSelect "Plan Info","Plan Info Sub Tab"
	   NaviLinkWin.SwfButton(Obj_SwfButton_VWNts).SwfClick "View Notes Button"

	  Call SyncWind()

	   ContNots.SwfExist "Contrat View Window"
	   ContNots.SwfButton(Obj_SwfButton_NtsCanc).SwfClick "Contrat Cancel Button"
	Else
        Call WriteReport("Verify Plan Sync Status ","Plan Sync Status is Not"&StaVal,"Plan Sync Status is Not "&StaVal& " as Expected","F")
   End If
	Call fn_RecoveryAction()
   CloseTabWin()
   Call SyncWind()
End Function
'================================================================================================================
Public Function CCPVW()
If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If
   Set Obj = fn_Object("SwfWindow","NaviLink")
   Set NaviLinkWin = SwfWindow(Obj)

    Set Obj_SwfTab_TabCtrl = fn_Object("SwfTab","ClmPrfTabControl")
	Set Obj_SwfObject_GenTab = fn_Object("SwfObject","ClmProfGeneral")
	Set Obj_SwfEdit_PolSys = fn_Object("SwfEdit","PolSys")
	Set Obj_SwfObject_CCPVW = fn_Object("SwfObject","ClmPrfCCPPlanInfo")

	CloseTabWin()

	ViewClaimProfile "CLAIMNO",g_CLAIMNO
	Call SyncWind()
	Call fn_RecoveryAction()

   ExpVal = "CCP"
   Val = NaviLinkWin.SwfEdit(Obj_SwfEdit_PolSys).SwfGetValue("Policy System Value")

   If Trim(val) = Trim(ExpVal) Then
	   Call WriteReport("Verify Policy System Status as "&Val,Val & " is the value in Polcy System Status",Val & " is the value in Polcy System Status","P")        
		NaviLinkWin.SwfTab(Obj_SwfTab_TabCtrl).SwfTabSelect "Plan Info","Plan Info Sub Tab"
    Else
		Call WriteReport("Verify Policy System Status as "&Val,Val & " is not the value in Polcy System Status",Val & " is not the value in Polcy System Status","F")
   End If
	Call fn_RecoveryAction()
   CloseTabWin()
	Call SyncWind()
End Function
'================================================================================================================
Public Function SngSrhIntigration()

If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If

   Set Obj = fn_Object("SwfWindow","NaviLink")
   Set NaviLinkWin = SwfWindow(Obj)

   Set Obj = fn_Object("SwfWindow","SingleSearch")
   Set SingleSearch = SwfWindow(Obj)

   Set Obj_SwfToolbar_SrhWin = fn_Object("SwfToolbar","Toolbar")
   Set Obj_SwfEditor_TaxId = fn_Object("SwfEditor","SngSrh_TaxId")
   Set Obj_SwfEdit_SearchClaim = fn_Object("SwfEdit","SearchClaim")
   Set Obj_SwfTab_SrhTabCtrl = fn_Object("SwfTab","SngSrhTabCtrl")
   
   Set Obj_SwfButton_Search = fn_Object("SwfButton","SnglSrh")
   Set Obj_SwfButton_Reset = fn_Object("SwfButton","SngSrh_Reset")
   Set Obj_SwfButton_RsetoPrior = fn_Object("SwfButton","SngSrh_RsetoPrior")
   Set Obj_SwfButton_ClmActPln = fn_Object("SwfButton","SngSrh_ClmActPln")
   Set Obj_SwfButton_ClmResp = fn_Object("SwfButton","SngSrh_ClmResp")
   Set Obj_SwfButton_SplHandling = fn_Object("SwfButton","SngSrh_SplHand")
   Set Obj_SwfButton_VWClmPrf = fn_Object("SwfButton","ViewClaimProfile")
   Set Obj_SwfButton_VWFldCont = fn_Object("SwfButton","ViewFolderContents")
   Set Obj_SwfButton_VWActPln = fn_Object("SwfButton","ViewActionPlan")
   Set Obj_SwfButton_Cancel = fn_Object("SwfButton","VCNts_Cancel")
   Set Obj_SwfButton_LegClmMrg = fn_Object("SwfButton","LegacyClaimMerge")
   Set Obj_SwfButton_AddNWClm = fn_Object("SwfButton","AddNewClaim")
   Set Obj_SwfButton_RelOrgs = fn_Object("SwfButton","RelatedOrgs")
   Set Obj_SwfButton_Rewrites = fn_Object("SwfButton","Rewrites")
   Set Obj_SwfButton_PopClmProf = fn_Object("SwfButton","PopClaimProfile")
   Set Obj_SwfButton_PopDocDtl = fn_Object("SwfButton","PopDocDetail")
   Set Obj_SwfButton_Products = fn_Object("SwfButton","Products")
   Set Obj_SwfButton_Divisions = fn_Object("SwfButton","Divisions")
   Set Obj_SwfEdit_PolNo = fn_Object("SwfEdit","SngSrh_PolNum")
   Set Obj_SwfEditor_AsoDte = fn_Object("SwfEditor","SngSrh_AsOfDate")
   Set Obj_SwfTable_PolSrhRes = fn_Object("SwfTable","PolSrhResGrid")

   CloseTabWin()
	Call SyncWind()

   NaviLinkWin.SwfToolbar(Obj_SwfToolbar_SrhWin).SwfTbarClick "mainToolbar","Search"
	Call fn_RecoveryAction()
   SingleSearch.SwfExist "Single Search Window"
   
   For i = 0 to 2
	   Val = SingleSearch.SwfTab(Obj_SwfTab_SrhTabCtrl).SwfTabGetSel("Getting tab Name")
	
	   If Trim(Val) = "&NaviLink Claim" or Trim(Val) = "Clai&m/Coverage" or Trim(Val) = "Polic&y" Then
		   Call WriteReport("Verify existance of"&Val&" Tab"," Into"&Val&" Tab"," Into"&Val&" Tab as Expected","P")
		   
		   ClmVal = SingleSearch.SwfEdit(Obj_SwfEdit_SearchClaim).SwfGetValue("Getting Search Claim Field Value")
		   ClmTaxId = SingleSearch.SwfEditor(Obj_SwfEditor_TaxId).GetROProperty("text")
		    Val = SingleSearch.SwfTab(Obj_SwfTab_SrhTabCtrl).SwfTabGetSel("Getting tab Name")
			Call fn_RecoveryAction()

		   If Trim(Val) = "&NaviLink Claim" or Trim(Val) = "Clai&m/Coverage" Then

			   If ClmVal = "" and ClmTaxId="" Then
				   Call WriteReport("Verify No Values inTaxId and Search Claim"," No Values inTaxId and Search Claim Fields"," No Values inTaxId and Search Claim Fields as Expected","P")
				   SingleSearch.SwfButton(Obj_SwfButton_Search).SwfDisable "Search Button"
				   SingleSearch.SwfButton(Obj_SwfButton_Reset).SwfEnable "Reset Button"
				   SingleSearch.SwfButton(Obj_SwfButton_SplHandling).SwfDisable "Special Handling Button"
				   SingleSearch.SwfButton(Obj_SwfButton_Cancel).SwfEnable "Cancel Button"
				   Call fn_RecoveryAction()
	
                  If Trim(Val) = "&NaviLink Claim" Then
						   SingleSearch.SwfButton(Obj_SwfButton_ClmActPln).SwfDisable "Claim Action Plan Button"
					End If

					   SingleSearch.SwfButton(Obj_SwfButton_ClmResp).SwfDisable "Claim Response Button"
					   SingleSearch.SwfButton(Obj_SwfButton_VWClmPrf).SwfDisable "View Claim Profile Button"
					   SingleSearch.SwfButton(Obj_SwfButton_VWFldCont).SwfDisable "View Folder Content Button"
					   SingleSearch.SwfButton(Obj_SwfButton_VWActPln).SwfDisable "View Action Plam Button"
					   If Trim(Val) = "Clai&m/Coverage" Then
						   SingleSearch.SwfButton(Obj_SwfButton_LegClmMrg).SwfDisable "Legacy Claim Merge"
						   SingleSearch.SwfButton(Obj_SwfButton_AddNWClm).SwfDisable "Add New Claim"
						End If
				 End If
				Call fn_RecoveryAction()
			Else
            
				If Trim(Val) = "Polic&y" Then
                    PolNo = SingleSearch.SwfEdit(Obj_SwfEdit_PolNo).SwfGetValue("Getting PolicyNo Field Value")
					AsODte  = SingleSearch.SwfEditor(Obj_SwfEditor_AsoDte).GetROProperty("text")

					If PolNo = "" and (AsODte="//" or AsODte="") Then
					   SingleSearch.SwfButton(Obj_SwfButton_Search).SwfDisable "Search Button"
					   SingleSearch.SwfButton(Obj_SwfButton_Reset).SwfEnable "Reset Button"
					   SingleSearch.SwfButton(Obj_SwfButton_SplHandling).SwfDisable "Special Handling Button"
					   SingleSearch.SwfButton(Obj_SwfButton_Cancel).SwfEnable "Cancel Button"
						SingleSearch.SwfButton(Obj_SwfButton_RelOrgs).SwfDisable"RelatedOrgs"
						SingleSearch.SwfButton(Obj_SwfButton_Rewrites).SwfDisable"Rewrites"
						SingleSearch.SwfButton(Obj_SwfButton_PopClmProf).SwfDisable"PopClaimProfile"
						SingleSearch.SwfButton(Obj_SwfButton_PopDocDtl).SwfDisable"PopDocDetail"
						SingleSearch.SwfButton(Obj_SwfButton_Products).SwfDisable"Products"
						SingleSearch.SwfButton(Obj_SwfButton_Divisions).SwfDisable"Divisions"
					End If
					Call fn_RecoveryAction()
				Else
					Call WriteReport("Verify Values inTaxId and Search Claim"," Values inTaxId and Search Claim Fields"," Values inTaxId and Search Claim Fields as Not Expected","F")
				End If
			End If

		Val = SingleSearch.SwfTab(Obj_SwfTab_SrhTabCtrl).SwfTabGetSel("Getting tab Name")
	
         If Trim(Val) = "&NaviLink Claim" or Trim(Val) = "Clai&m/Coverage" Then
             SingleSearch.SwfEdit(Obj_SwfEdit_SearchClaim).SwfSet g_CLAIMNO
			 SingleSearch.SwfButton(Obj_SwfButton_Search).SwfEnable "Search Button"
			 SingleSearch.SwfButton(Obj_SwfButton_Search).SwfClick "Search Button"
			 Call fn_RecoveryAction()
			 Call SyncWind()

			 SingleSearch.SwfButton(Obj_SwfButton_SplHandling).SwfEnable "Special Handling Button"
             SingleSearch.SwfButton(Obj_SwfButton_ClmResp).SwfDisable "Claim Response Button"
			 SingleSearch.SwfButton(Obj_SwfButton_VWClmPrf).SwfEnable "View Claim Profile Button"
			 SingleSearch.SwfButton(Obj_SwfButton_VWFldCont).SwfEnable "View Folder Content Button"
			 SingleSearch.SwfButton(Obj_SwfButton_VWActPln).SwfEnable "View Action Plam Button"
				 If Trim(Val) = "&NaviLink Claim" Then
					 SingleSearch.SwfButton(Obj_SwfButton_Reset).SwfClick "Rest Button"
					 Call fn_RecoveryAction()
					 SingleSearch.SwfButton(Obj_SwfButton_ClmActPln).SwfEnable "Claim Action Plan Button"
					 SingleSearch.SwfTab(Obj_SwfTab_SrhTabCtrl).SwfSelect "Clai&m/Coverage","Clai&m/Coverage"
				 Else
					SingleSearch.SwfButton(Obj_SwfButton_LegClmMrg).SwfDisable"LegacyClaimMerge"
					SingleSearch.SwfButton(Obj_SwfButton_AddNWClm).SwfDisable"AddNewClaim"
					SingleSearch.SwfButton(Obj_SwfButton_Reset).SwfClick "Rest Button"
					SingleSearch.SwfTab(Obj_SwfTab_SrhTabCtrl).SwfSelect "Polic&y","Polic&y"
					Call fn_RecoveryAction()
				 End If
			End If
		 
			If Trim(Val) = "Polic&y" Then
				SingleSearch.SwfEdit(Obj_SwfEdit_PolNo).SwfSet g_POLICY
				SingleSearch.SwfEditor(Obj_SwfEditor_AsoDte).Type g_ASOFDATE
				SingleSearch.SwfButton(Obj_SwfButton_Search).SwfClick "Search Button"
				Call fn_RecoveryAction()

				SingleSearch.SwfTable(Obj_SwfTable_PolSrhRes).SwfGetCell 0,g_POLICY
				SingleSearch.SwfButton(Obj_SwfButton_RelOrgs).SwfEnable"RelatedOrgs"
				SingleSearch.SwfButton(Obj_SwfButton_Rewrites).SwfDisable"Rewrites"
				SingleSearch.SwfButton(Obj_SwfButton_PopClmProf).SwfDisable"PopClaimProfile"
				SingleSearch.SwfButton(Obj_SwfButton_PopDocDtl).SwfDisable"PopDocDetail"
				SingleSearch.SwfButton(Obj_SwfButton_Products).SwfEnable"Products"
				SingleSearch.SwfButton(Obj_SwfButton_Divisions).SwfEnable"Divisions"
				SingleSearch.SwfTab(Obj_SwfTab_SrhTabCtrl).SwfSelect "&NaviLink Claim","&NaviLink Claim"
       End If
       Else
			Call WriteReport("Verify Not exist in"&Val&" Tab"," Not Into"&Val&" Tab"," Not Into"&Val&" Tab as Expected","P")
		End If
	Next

	SingleSearch.SwfClose "Single Search Window"
	Call fn_RecoveryAction()
  CloseTabWin()
Call SyncWind()
End Function
'================================================================================================================
Public Function SplHandling()
If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If
   Set Obj = fn_Object("SwfWindow","NaviLink")
   Set NaviLinkWin = SwfWindow(Obj)

   Set Obj = fn_Object("SwfWindow","SingleSearch")
   Set SingleSearch = SwfWindow(Obj)

   Set Obj = fn_Object("SwfWindow","SplHandIns")
   Set SplHandIns = SwfWindow(Obj)

   Set Obj_SwfToolBar_Menu = fn_Object("SwfToolBar","Toolbar")
   Set Obj_SwfEdit_Claim = fn_Object("SwfEdit","SearchClaim")
   Set Obj_SwfButton_Search = fn_Object("SwfButton","SnglSrh")
   Set Obj_SwfButton_SplHand = fn_Object("SwfButton","SngSrh_SplHand")
   Set Obj_SwfButton_Cancel = fn_Object("SwfButton","VCNts_Cancel")

   CloseTabWin()
  Call SyncWind()

   NaviLinkWin.SwfExist "NaviLink  Window"
   NaviLinkWin.SwfToolBar(Obj_SwfToolBar_Menu).SwfTbarClick "mainToolbar","Search"
   Call fn_RecoveryAction()

   SingleSearch.SwfExist "Single Search Window"
   SingleSearch.SwfEdit(Obj_SwfEdit_Claim).SwfSet g_CLAIMNO,g_CLAIMNO
   SingleSearch.SwfButton(Obj_SwfButton_Search).SwfClick "Search Button"
   Call fn_RecoveryAction()
   Call SyncWind()
   SingleSearch.SwfButton(Obj_SwfButton_SplHand).SwfClick "Special Handling Button"
   wait(5)
   Call SyncWind()
   wait(10)
   SplHandIns.SwfClose "Special Handling Window"
   Call fn_RecoveryAction()
   Call SyncWind()
   wait(10)
   SingleSearch.SwfExist "Single Search Window"
   SingleSearch.SwfButton(Obj_SwfButton_Cancel).SwfClick "Cancel Button"
   Call SyncWind()
   Call fn_RecoveryAction()
   
End Function
'================================================================================================================
Public Function ModDocDialog()
If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If
   Set Obj = fn_Object("SwfWindow","NaviLink")
   Set NaviLinkWin = SwfWindow(Obj)

   Set Obj = fn_Object("SwfWindow","WrkLst_SrtBy")
   Set WrkSort = SwfWindow(Obj)

   Set Obj = fn_Object("SwfWindow","OnScreenForm")
   Set OnScreenFrm = SwfWindow(Obj)

    Set Obj = fn_Object("SwfWindow","ModifyDoc")
   Set ModifyDoc = SwfWindow(Obj)
   
   Set Obj_SwfTreeView_Grp = fn_Object("SwfTreeView","WrkLstVw")
   Set Obj_SwfButton_Sort = fn_Object("SwfButton","WrkLst_Sort")
   Set Obj_SwfComboBox_SortBy = fn_Object("SwfComboBox","WrkLst_SortBy")
   Set Obj_SwfButton_Ok = fn_Object("SwfButton","Ok")
   Set Obj_SwfButton_Modify = fn_Object("SwfButton","NewModify")
   Set Obj_SwfButton_DocCancel = fn_Object("SwfButton","Doc_Cancel")
   Set Obj_SwfButton_ModCancel = fn_Object("SwfButton","Cancel")

  CloseTabWin()

   NaviLinkWin.SwfButton(Obj_SwfButton_Sort).SwfClick "WorkList Sort Button"
   Call SyncWind()
  
   WrkSort.SwfExist "Sort By Window"
   WrkSort.SwfComboBox(Obj_SwfComboBox_SortBy).SwfSelect "Type","Type"
   WrkSort.SwfButton(Obj_SwfButton_Ok).SwfClick "Ok Button"
   Call fn_RecoveryAction()

   NaviLinkWin.SwfTreeView(Obj_SwfTreeView_Grp).SwfExist "Work List View"
   NaviLinkWin.SwfTreeView(Obj_SwfTreeView_Grp).SwfTreeSelect "\Group","Group"
   NaviLinkWin.SwfTreeView(Obj_SwfTreeView_Grp).SwfTreeSelect "\Group\PORT New Claim","PORT New Claim"
   Call fn_RecoveryAction()

   NaviLinkWin.SwfTreeView(Obj_SwfTreeView_Grp).SwfTreeSelect "\Group\PORT New Claim\Incoming Mail","Incoming Mail Group"
   NaviLinkWin.SwfTreeView(Obj_SwfTreeView_Grp).SwfTreeSelect "\Group\PORT New Claim\Incoming Mail\","Incoming Mail"
	wait(10)
   Call SyncWind()
   Call fn_RecoveryAction()
	wait(15)
	SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
	   Call SyncWind()
	wait(10)
	NaviLinkWin.Activate
   NaviLinkWin.SwfButton(Obj_SwfButton_Modify).SwfExist "Modify Button"
   NaviLinkWin.SwfButton(Obj_SwfButton_Modify).SwfClick "Modify Button"
   Call SyncWind()
	wait(10)
	Call fn_RecoveryAction()
   ModifyDoc.SwfButton(Obj_SwfButton_ModCancel).SwfClick "Modify Document Cancel Button"
	Call SyncWind()
	wait(10)
	Call fn_RecoveryAction()
   NaviLinkWin.SwfButton(Obj_SwfButton_DocCancel).SwfClick "DocDetail Cancel Button"
   Call SyncWind()
   wait(10)
   	NaviLinkWin.SwfTreeView(Obj_SwfTreeView_Grp).SwfTreeCollapse "\Group","Group"
	Call SyncWind()
	Call fn_RecoveryAction()
   SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")

End Function

'================================================================================================================
Public Function ClmOwnSrh()
If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If
   Set Obj = fn_Object("SwfWindow","NaviLink")
   Set NaviLinkWin = SwfWindow(Obj)

   Set Obj = fn_Object("SwfWindow","ReAsgnOfClms")
   Set ReAsgnOfClm = SwfWindow(Obj)

   Set obj = fn_Object("SwfWindow","ClmOwnSrh")
   Set ClmOwnSearch = SwfWindow(Obj)

   Set obj_SwfToolbar_ReAssgn = fn_Object("SwfToolbar","Toolbar")
   Set obj_SwfButton_ClmOwnSrh = fn_Object("SwfButton","ClmOwnLkUp")
   Set obj_SwfButton_ClmOwnSrhCancel = fn_Object("SwfButton","Cancel")
   Set Obj_SwfCombo_ReAsgSys = fn_Object("SwfComboBox","ReAsg_Sys")
   Set Obj_SwfCombo_ReAsgProd = fn_Object("SwfComboBox","ReAsg_Prod")
   Set Obj_SwfCombo_ReAsgProdTyp = fn_Object("SwfComboBox","ReAsg_ProdTyp")
   Set Obj_SwfCombo_ReAsgFndng = fn_Object("SwfComboBox","ReAsg_Fundng")
   Set Obj_SwfCombo_ReAsgClmOwnShp = fn_Object("SwfComboBox","ReAsg_ClmOwnshp")
   Set Obj_SwfButton_BtnSearch = fn_Object("SwfButton","BtnSearch")
   Set Obj_SwfButton_BtnOk = fn_Object("SwfButton","OkButton")
   Set Obj_SwfTable_OwnSrhRes = fn_Object("SwfTable","OwnSrhRes")
   Set Obj_SwfEdit_ClmOwn = fn_Object("SwfEdit","ReAsgn_ClmOwn")
	Set Obj_SwfButton_BtnCancel = fn_Object("SwfButton","Cancel")
   
   CloseTabWin()
   
   NavilinkWin.SwfExist "NaviLink Window"
   
   NaviLinkWin.SwfToolbar(obj_SwfToolbar_ReAssgn).SwfSelMenu "Tools"
   NaviLinkWin.SwfToolbar(obj_SwfToolbar_ReAssgn).SwfSelSubMenu "Tools","Reassignment"
   Call fn_RecoveryAction()

   Call SyncWind()
   ReAsgnOfClm.SwfExist "Re Assignment Window"
   ReAsgnOfClm.SwfComboBox(Obj_SwfCombo_ReAsgSys).SwfSelect "BAS","BAS System"
   ReAsgnOfClm.SwfComboBox(Obj_SwfCombo_ReAsgProd).SwfSelect "Short Term Disability","Short Term Disability Product"
   ReAsgnOfClm.SwfComboBox(Obj_SwfCombo_ReAsgProdTyp).SwfSelect "Traditional","Traditional Product Type"
   Call fn_RecoveryAction()

   ReAsgnOfClm.SwfComboBox(Obj_SwfCombo_ReAsgFndng).SwfSelect "Fully Insured","Fully Insured Funding"
   ReAsgnOfClm.SwfComboBox(Obj_SwfCombo_ReAsgClmOwnShp).SwfSelect "Intake","Intake Owner Ship"
   ReAsgnOfClm.SwfButton(obj_SwfButton_ClmOwnSrh).SwfClick "Owner Search Look Up Button"
	Call SyncWind()
	Call fn_RecoveryAction()

   ClmOwnSearch.SwfExist "Claim Owner Search Window"
   ClmOwnSearch.SwfButton(Obj_SwfButton_BtnSearch).SwfClick "Claim Owner Search Button"
   Call SyncWind()
   GrdRes = ClmOwnSearch.SwfTable(Obj_SwfTable_OwnSrhRes).SwfGetCell("Fowler, Russ","Owner","Selecting Fowler Russ")
   ClmOwnSearch.SwfButton(Obj_SwfButton_BtnOk).SwfClick "Claim Owner Search Ok Button"
	Call fn_RecoveryAction()

   ReAsgnOfClm.SwfExist "ReAssignment Window"
   ClmOwnRes = ReAsgnOfClm.SwfEdit(Obj_SwfEdit_ClmOwn).SwfGetValue("Claim Owner Field Value")

   If Trim(GrdRes) = Trim(ClmOwnRes) Then
	   Call WriteReport("Verify Claim Owner Field Value","Claim Owner Field Value is selected Value from Owner Search Grid","Claim Owner Field Value is selected Value from Owner Search Grid as Expected","P")
	   ReAsgnOfClm.SwfButton(Obj_SwfButton_BtnCancel).SwfClick "ReAssign Cancel Button"
    Else
		Call WriteReport("Verify Claim Owner Field Value","Claim Owner Field Value is not the Value from Owner Search Grid","Claim Owner Field Value is Not the Value from Owner Search Grid as Expected","F")
	End If

   CloseTabWin()
   Call SyncWind()
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function UserSearch()
If  UCase(g_HandleError) = "YES" Then
	On Error resume next 
End If 
	CloseTabWin()

	Call ViewClaimProfile("CLAIMNO",g_CLAIMNO)
	Call SyncWind()
	Call fn_RecoveryAction()

	Set obj = fn_Object("SwfWindow","NaviLink")
	Set NaviLinkwin = SwfWindow(obj)
	
	Set obj = fn_Object("SwfWindow","FollowupSearch")
	Set FollowupSearch = SwfWindow(obj)
	
	Set ActivityTab1 = fn_Object("SwfTab","Activity_Tab")
	Set RequestResponseTab = fn_Object("SwfTab","RequestResponseTab")
	Set NewButton = fn_Object("SwfButton","Activity_NewBtn")
	Set SaveAndClose = fn_Object("SwfButton","Sve&Clse")
	Set FollowuserSearch = fn_Object("SwfButton","FollowuserSearch")
	Set SearchButton = fn_Object("SwfButton","BtnSearch")
	Set OkButton = fn_Object("SwfButton","OkButton")
	Set UserSite = fn_Object("SwfComboBox","UserSite")
	Set ActivityType = fn_Object("SwfComboBox","Activity_Type")
	Set ActivityName = fn_Object("SwfComboBox","Activity_Name")
	Set MarkasPriority = fn_Object("SwfCheckBox","MarkasPriority")
	Set ActivitySubject = fn_Object("SwfEdit","ActivitySubject")
    Set obj_LastName = fn_Object("SwfEdit","lastNameSearch")
	Set obj_FirstName = fn_Object("SwfEdit","FirstNameSearch")
	Set FollowUpDate = fn_Object("SwfEditor","FollowUpDate")
			
   Call SyncWind()
	NaviLinkwin.SwfTab(ActivityTab1).SwfTabSelect "Activity","Activity"
	
	NaviLinkwin.SwfButton(NewButton).SwfExist "NewButton"
	NaviLinkwin.SwfButton(NewButton).SwfClick "NewButton"
	Call SyncWind()

	NaviLinkwin.SwfComboBox(ActivityType).SwfSelect "Appeal","Appeal Referral option"
	NaviLinkwin.SwfComboBox(ActivityName).SwfSelect "Appeal Referral","Appeal Referral option"
	Call fn_RecoveryAction()

	NaviLinkwin.SwfCheckBox(MarkasPriority).Click
	NaviLinkwin.SwfEdit(ActivitySubject).SwfExist "Activity Subject"
	NaviLinkwin.SwfEdit(ActivitySubject).SwfSet "Activity Subject","Activity Subj."
	Call fn_RecoveryAction()

	 NaviLinkwin.SwfTab(RequestResponseTab).Select "Request"
	 Set  WshShell = CreateObject("WScript.Shell")
	 WshShell.SendKeys "{TAB}"
	 WshShell.SendKeys "Activity"

	 
	NaviLinkwin.SwfButton(SaveAndClose).SwfExist "SaveAndClose"
	NaviLinkwin.SwfButton(SaveAndClose).SwfClick "SaveAndClose"
	Call SyncWind()
	Call fn_RecoveryAction()

	SwfWindow("Swin_NaviLink").Dialog("DLog_Followup").WinButton("SBtn_Yes").SwfClick "Followup OK Button Click"

	Call SyncWind()

	NaviLinkwin.SwfEdit(ActivitySubject).SwfExist "FollowUp Subject"
	NaviLinkwin.SwfEdit(ActivitySubject).SwfSet "FollowUp Subject","FollowUp Subj."

	Set  WshShell = CreateObject("WScript.Shell")
	 WshShell.SendKeys "{TAB}"
	 Call SyncWind()
	  WshShell.SendKeys "{TAB}"
	 WshShell.SendKeys "Follow Up"

	NaviLinkwin.SwfButton(FollowuserSearch).SwfExist "SaveAndClose"
	Call SyncWind()
	NaviLinkwin.SwfButton(FollowuserSearch).SwfClick "FollowuserSearch"
	Call fn_RecoveryAction()

	
	UserName1=SwfWindow("regexpwndtitle:=Navilink.*").GetROProperty("text")
	UserName=Split(UserName1,":")
	OwnerName=Split(Trim(UserName(1))," ")
	FirstName= OwnerName(0)
	LastName=OwnerName(1)

	FollowupSearch.SwfComboBox(UserSite).SwfSelect "Portland","PortLand Site"
	 FollowupSearch.SwfEdit(obj_LastName).SwfExist "LastName"
	FollowupSearch.SwfEdit(obj_LastName).SwfSet "Fowler", "LastName set to Fowler"
	FollowupSearch.SwfEdit(obj_FirstName).SwfExist "FirstName"
	FollowupSearch.SwfEdit(obj_FirstName).SwfSet "Russ", "LastName set to Russ"
	 FollowupSearch.SwfButton(SearchButton).SwfExist "SearchButton"
	FollowupSearch.SwfButton(SearchButton).SwfClick "SearchButton"
	Call SyncWind()
	Call fn_RecoveryAction()

	FollowupSearch.SwfButton(OkButton).SwfExist "OkButton"
	FollowupSearch.SwfButton(OkButton).SwfClick "OkButton"

	NaviLinkwin.SwfButton(SaveAndClose).SwfExist "SaveAndClose"
	NaviLinkwin.SwfButton(SaveAndClose).SwfClick "SaveAndClose"
	Call SyncWind()
	CloseTabWin()
	Call fn_RecoveryAction()			
End Function
''================================================================================================================	
'
'																		Iteration 4
'
''================================================================================================================
Public Function Tools_AbtBox()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   CloseTabWin()

   SwfWindow("Swin_NaviLink").SwfExist "NaviLink Window"
   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelMenu "Help"
   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelSubMenu "Help","About"
   Call SyncWind()
   wait(5)
   Call fn_RecoveryAction()
   SwfWindow("Swin_AbtNaviLink").SwfExist "About NaviLink Window"
   SwfWindow("Swin_AbtNaviLink").SwfButton("SBtn_OK").SwfClick "Ok Button"
   Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function Tools_Admin() 'Func
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If

   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelMenu "Tools"
   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelSubMenu "Tools","Administration"
	Call SyncWind()
	Call fn_RecoveryAction()
	Dialog("DLog_FileDownload").SwfExist "File Download - Security"
   Wait(10)
   Dialog("DLog_FileDownload").WinButton("WBtn_Run").SwfExist "Run Button"
   Dialog("DLog_FileDownload").WinButton("WBtn_Run").SwfClick "Run Button"
   Wait(10)
   Call fn_RecoveryAction()
   Window("Swin_NavLnk Admn").Activate
   Window("Swin_NavLnk Admn").SwfExist "NaviLink Admin Window"
	Window("Swin_NavLnk Admn").Activate
   Window("Swin_NavLnk Admn").SwfClose "NaviLink Admin Window"
   Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function Toolbar_MannualAssin()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
	sv_FinalName = fn_GetName

   SwfWindow("Swin_NaviLink").SwfExist "NaviLink Window"
   SwfWindow("Swin_NaviLink").SwfButton("SBtn_WL_Sort").SwfClick "Sort Button"
   Call SyncWind()
   wait(5)
   Call fn_RecoveryAction()

   SwfWindow("SWin_SortBy").SwfComboBox("SCoBoX_SortBy").SwfSelect "Type","Type"
   SwfWindow("SWin_SortBy").SwfButton("SBtn_OK").SwfClick "Ok Button"
   Call SyncWind()
   Wait(5)
   Call fn_RecoveryAction()

   SwfWindow("Swin_NaviLink").SwfTreeView("STvw_WrkLstVw").SwfTreeSelect "\Individual", "Individual View"
   sv_TreeViewExcp = TreeViewExcp("\Individual")
   If sv_TreeViewExcp = 1 Then
	   Exit Function
   End If

	SwfWindow("Swin_NaviLink").SwfTreeView("STvw_WrkLstVw").SwfTreeSelect "\Individual\" & sv_FinalName,sv_FinalName
   sv_TreeViewExcp = TreeViewExcp("\Individual")
   If sv_TreeViewExcp = 1 Then
	   Exit Function
   End If
   SwfWindow("Swin_NaviLink").SwfTreeView("STvw_WrkLstVw").SwfTreeSelect "\Individual\" & sv_FinalName & "\Claim Markup","Claims Markup View"
   sv_TreeViewExcp = TreeViewExcp("\Individual\" & sv_FinalName & "\Claim Markup")
   If sv_TreeViewExcp = 1 Then
	   Exit Function
   End If
   SwfWindow("Swin_NaviLink").SwfTreeView("STvw_WrkLstVw").SwfTreeSelect "\Individual\" & sv_FinalName & "\Claim Markup\","Old Claims Markup Activity"
   sv_TreeViewExcp = TreeViewExcp("\Individual\" & sv_FinalName & "\Claim Markup\")
   If sv_TreeViewExcp = 1 Then
	   Exit Function
   End If
   Call SyncWind()
   Wait(10)


   SwfWindow("Swin_NaviLink").SwfTab("STab_ClaimFolderTab").SwfTabSelect "Claim Profile","Claim Profile"
   Call SyncWind()
   Wait(5)
   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfTbarClick "mainToolbar","Manual Assign"
   Call SyncWind()
   Wait(5)
   Call fn_RecoveryAction()

	If SwfWindow("Swin_NaviLink").Dialog("Dlog_ManualAssign").WinButton("Wbtn_OK").Exist(10) Then
		Call WriteReport("The Claim Selected Does not have Error","The Claim Selected Does not have Error","The Claim Selected has Error","F")
		SwfWindow("Swin_NaviLink").Dialog("Dlog_ManualAssign").WinButton("Wbtn_OK").Click
	Else
		SwfWindow("Swin_ManualAssignment").SwfExist "Manual Assignment Window"
		SwfWindow("Swin_ManualAssignment").SwfButton("SBtn_AssignToBtn").SwfExist "Assign To Button"
		SwfWindow("Swin_ManualAssignment").SwfButton("SBtn_AssignToBtn").SwfClick "Assign To Button"
		Wait(5)
		Call fn_RecoveryAction()
		
		SwfWindow("Swin_ClmOwnSrh").SwfExist "Claim Owner Search Window"
		SwfWindow("Swin_ClmOwnSrh").SwfExist "Claim Owner Search Window"
		SwfWindow("Swin_ClmOwnSrh").SwfButton("SBtn_Search").SwfClick "Search Button"
		SwfWindow("Swin_ClmOwnSrh").SwfButton("SBtn_OK").SwfExist "Ok Button"
		SwfWindow("Swin_ClmOwnSrh").SwfButton("SBtn_OK").SwfClick "Ok Button"
		Wait(5)
        Call fn_RecoveryAction()

		SwfWindow("Swin_ManualAssignment").SwfEditor("SEdtr_Notes").SwfType "Testing","Testing"
		SwfWindow("Swin_ManualAssignment").SwfButton("SBtn_Cancel").SwfClick "Click Cancel Button"
	End If
	CloseTabWin()
	Call SyncWind()
	wait(5)

	If SwfWindow("Swin_NaviLink").SwfWindow("Dlg_NaviLink_Excp_Msg").SwfButton("swfBtn_Close").exist(10)  Then
		SwfWindow("Swin_NaviLink").SwfWindow("Dlg_NaviLink_Excp_Msg").SwfButton("swfBtn_Close").Click
	End If
	Call SyncWind()
	wait(5)

	SwfWindow("Swin_NaviLink").SwfTreeView("STvw_WrkLstVw").SwfTreeCollapse "\Individual"," Individual Tree View"
	Wait(5)
	SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
	Wait(2)
	Call fn_RecoveryAction()

End Function
'================================================================================================================
Public Function Tools_EdtCont()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   CloseTabWin()

   Nme = SrhCont()
   FLName = Split(Nme,",")

   SwfWindow("Swin_ContSrh").SwfExist "Contact Search Window"
   SwfWindow("Swin_ContSrh").SwfRadioButton("SRbtn_Company").SwfRBCheck "Company Radio Button"
   SwfWindow("Swin_ContSrh").SwfRadioButton("SRbtn_Individual").SwfRBCheck "Individual Radio Button"
   Call fn_RecoveryAction()

   SwfWindow("Swin_ContSrh").SwfEdit("SEdt_CompNme1").Object.Clear
   SwfWindow("Swin_ContSrh").SwfEdit("SEdt_LName").SwfSet FLName(0),FLName(0)
   SwfWindow("Swin_ContSrh").SwfEdit("SEdt_FName").SwfSet FLName(1),FLName(1)
   SwfWindow("Swin_ContSrh").SwfButton("SBtn_Search").SwfClick "Search Button"
   Call SyncWind()
   Call fn_RecoveryAction()

   SwfWindow("Swin_ContSrh").SwfButton("SBtn_EditCont").SwfEnable "Edit Contat Button"
   SwfWindow("Swin_ContSrh").SwfButton("SBtn_EditCont").SwfClick "Edit Contact Button"
	Call SyncWind()
	Call fn_RecoveryAction()

   SwfWindow("Swin_EditCont").SwfExist "Edit Contact Window"
   SwfWindow("Swin_EditCont").SwfComboBox("SCoBox_PhoneType").SwfSelect "Home","Home Phone"
   SwfWindow("Swin_EditCont").SwfCheckBox("SChBx_PhIntNat").Swfcheck "International"
   SwfWindow("Swin_EditCont").SwfEdit("SEdt_PhNum").SwfSet "771423294700600","771423294700600"
	Call fn_RecoveryAction()

   SwfWindow("Swin_EditCont").SwfComboBox("SCoBox_FaxType").SwfSelect "Home","Home Phone"
   SwfWindow("Swin_EditCont").SwfCheckBox("SChBx_FaxIntNat").Swfcheck "International"
   SwfWindow("Swin_EditCont").SwfEdit("SEdt_FaxNum").SwfSet "771423294700578","771423294700578"
	Call fn_RecoveryAction()

   EMail = RandNme(5)

   SwfWindow("Swin_EditCont").SwfComboBox("SCoBox_EmailType").SwfSelect "Home","Home Phone"
   SwfWindow("Swin_EditCont").SwfEdit("SEdt_Email").SwfSet EMail&"@unum.com",EMail&"@unum.com"
   SwfWindow("Swin_EditCont").SwfButton("SBtn_Save").SwfClick "Save Button"
	Call SyncWind()
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function Tools_CratIndNew()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   CloseTabWin()

   SwfWindow("Swin_NaviLink").SwfExist "NaviLink Window"
   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelMenu "Tools"
   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelSubMenu "Tools","Contacts"
   Call fn_RecoveryAction()

	Call SyncWind()
	Val = AddSrh("Individual")
	LFName = Split(Val,",")

	SwfWindow("Swin_ContSrh").SwfButton("SBtn_NewCont").SwfClick "Create New Contact"
	IndNewCont LFName(0),LFName(1)
	Call fn_RecoveryAction()
	Call SyncWind()
	VerIndSrh LFName(0),LFName(1)
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function Tools_CratCmpNew()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   CloseTabWin()

	SwfWindow("Swin_NaviLink").SwfExist "NaviLink Window"
	SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelMenu "Tools"
	SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelSubMenu "Tools","Contacts"
	Call SyncWind()
	Call fn_RecoveryAction()

	SwfWindow("Swin_ContSrh").SwfExist "Contact Search Window"
	SwfWindow("Swin_ContSrh").SwfButton("SBtn_NewCont").SwfDisable "Create New Contact"
	SwfWindow("Swin_ContSrh").SwfButton("SBtn_EditCont").SwfDisable "Edit Contact"
	SwfWindow("Swin_ContSrh").SwfRadioButton("SRbtn_Company").SwfRBCheck "Company Radio Button"
	SwfWindow("Swin_ContSrh").SwfRadioButton("SRbtn_Company").SwfIsChecked "Company"
	Call fn_RecoveryAction()

	CmpNme = RandNme(5)
    SwfWindow("Swin_ContSrh").SwfEdit("SEdt_CompNme1").SwfSet CmpNme,CmpNme
	SwfWindow("Swin_ContSrh").SwfButton("SBtn_Search").SwfClick "Search Button"
	Call SyncWind()
	Dialog("DLog_NoContFnd").SwfExist "No Contacts Found Dialog"
	Dialog("DLog_NoContFnd").WinButton("WBtn_OK").SwfClick "OK Button"
	Call fn_RecoveryAction()

	SwfWindow("Swin_ContSrh").SwfButton("SBtn_NewCont").SwfEnable "Create New Contact"
	SwfWindow("Swin_ContSrh").SwfButton("SBtn_EditCont").SwfDisable "Edit Contact"
	SwfWindow("Swin_ContSrh").SwfButton("SBtn_NewCont").SwfClick "Create New Contact"
	Call SyncWind()

	CompNewCont(CmpNme)
	Call fn_RecoveryAction()

    VerCmpSrh(CmpNme)
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function Tools_SrhInd()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If

   CloseTabWin()

	SwfWindow("Swin_NaviLink").SwfExist "NaviLink Window"
	SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelMenu "Tools"
	SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelSubMenu "Tools","Contacts"
	Call SyncWind()
	Call fn_RecoveryAction()

   SwfWindow("Swin_ContSrh").SwfExist "Contact Search Window"
   SwfWindow("Swin_ContSrh").SwfRadioButton("SRbtn_Individual").SwfIsChecked "Individial"

   SwfWindow("Swin_ContSrh").SwfButton("SBtn_NewCont").SwfDisable "Create New Contact"
   SwfWindow("Swin_ContSrh").SwfButton("SBtn_EditCont").SwfDisable "Edit Contact"

   LName  = "Thamballapali"
   FName = "Swarup"
   SwfWindow("Swin_ContSrh").SwfEdit("SEdt_LName").SwfSet LName,LName
   SwfWindow("Swin_ContSrh").SwfEdit("SEdt_FName").SwfSet FName,FName
   SwfWindow("Swin_ContSrh").SwfButton("SBtn_Search").SwfClick "Search Button"
   Call SyncWind()
   Call fn_RecoveryAction()
	Wait(5)

	Nme = SwfWindow("Swin_ContSrh").SwfTable("STble_ContSrh").SwfGetCell(LName&", "&FName,1,LName&", "&FName)
   
   If Trim(Nme)= Trim(LName&", "&FName) Then
	   Call WriteReport("Verify Individual Contact Details","Individual Contact Details are displayed","Individual Contact Details are displayed as Expected","P")
	Else
		Call WriteReport("Verify Individual Contact Details","Individual Contact Details are Not displayed","Individual Contact Details are Not displayed as Expected","F")
   End If

   SwfWindow("Swin_ContSrh").SwfButton("SBtn_NewCont").SwfEnable"Create New Contact"
   SwfWindow("Swin_ContSrh").SwfButton("SBtn_EditCont").SwfEnable "Edit Contact"
   SwfWindow("Swin_ContSrh").SwfButton("SBtn_Cancel").SwfClick "Cancel Button"
   Call SyncWind()
   Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function Tools_SrhComp()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   CloseTabWin()

   SwfWindow("Swin_NaviLink").SwfExist "NaviLink Window"
   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelMenu "Tools"
   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelSubMenu "Tools","Contacts"
   	Call SyncWind()
	Call fn_RecoveryAction()

   SwfWindow("Swin_ContSrh").SwfExist "Contact Search Window"
   SwfWindow("Swin_ContSrh").SwfRadioButton("SRbtn_Company").SwfRBCheck "Company"
   SwfWindow("Swin_ContSrh").SwfRadioButton("SRbtn_Company").SwfIsChecked "Company"

   SwfWindow("Swin_ContSrh").SwfButton("SBtn_NewCont").SwfDisable "Create New Contact"
   SwfWindow("Swin_ContSrh").SwfButton("SBtn_EditCont").SwfDisable "Edit Contact"
   Call fn_RecoveryAction()

   SwfWindow("Swin_ContSrh").SwfEdit("SEdt_CompNme1").SwfSet "UnumProvident","UnumProvident"
   SwfWindow("Swin_ContSrh").SwfButton("SBtn_Search").SwfClick "Search Button"
   	Call SyncWind()
	Wait(5)

	ContRes = SwfWindow("Swin_ContSrh").SwfTable("STble_ContSrh").SwfGetCell("UnumProvident",1,"UnumProvident")

	If UCase(Trim(ContRes)) = UCase("UnumProvident") Then
	   Call WriteReport("Verify Company Contact Details","Company Contact Details are displayed","Company Contact Details are displayed as Expected","P")
	Else
		Call WriteReport("Verify Company Contact Details","Company Contact Details are Not displayed","Company Contact Details are Not displayed as Expected","F")
   End If
   Call fn_RecoveryAction()

   SwfWindow("Swin_ContSrh").SwfButton("SBtn_NewCont").SwfEnable"Create New Contact"
   SwfWindow("Swin_ContSrh").SwfButton("SBtn_EditCont").SwfEnable "Edit Contact"
   SwfWindow("Swin_ContSrh").SwfButton("SBtn_Cancel").SwfClick "Cancel Button"
	Call SyncWind()
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function VW_RsetLayout() 'Func
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
 
   SwfWindow("Swin_NaviLink").SwfExist "NaviLink Window"
   SwfWindow("Swin_NaviLink").Activate
   WLWidth = SwfWindow("Swin_NaviLink").SwfObject("SObj_WinDocArea").GetROProperty("Width")

   If WLWidth<250 OR WLWidth>250  Then
	   '
	Else
		SwfWindow("Swin_NaviLink").SwfObject("SObj_WinDocArea").Object.Width =  RandomNumber(260,550)
		Call SyncWind()
	End If

	SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelMenu "View"
	SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelSubMenu "View","Reset Window Layout"

	Call SyncWind()
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public function ActionPlan_Synopsis()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If

	sv_SearchBy = SearchBy("ClaimNo",g_CLAIMNO)
	Call fn_RecoveryAction()

	If sv_SearchBy = 0  Then
				Swfwindow("Swin_SingleSearch").SwfButton("SBtn_VWActnPln").SwfClick "View Action Plan"
				Call SyncWind()
	
				Swfwindow("Swin_NaviLink").SwfTab("STab_ActionPlanTab").SwfTabSelect "Synopsis","Synopsis Tab"
				Call SyncWind()
	
				swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_Segment").SwfSelect "Contractual Review","Segment"
				Call SyncWind()
				Call fn_RecoveryAction()

				swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_Segment").SwfSelect "Extended Disability","Segment"
				swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_Segment").SwfSelect "Work Capacity","Segment"
	
				Call SyncWind()
				swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_Segment").SwfSelect "Contractual Review","Segment"
				Call fn_RecoveryAction()
			
			FieldDirection_Field=swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_FileDirection").SwfGetAllItemsValue("File Direction")
					If 	Instr(1,FieldDirection_Field,"Contestability (IDI)",1)>1 AND _
							 Instr(1,FieldDirection_Field,"Coverage/Enrollment",1)>1 AND _
							  Instr(1,FieldDirection_Field,"Definition of Disability (IDI)",1)>1 AND _
							  Instr(1,FieldDirection_Field,"EP Not Met (IDI)",1)>1 AND _
							  Instr(1,FieldDirection_Field,"Exclusion",1)>1 AND _
							  Instr(1,FieldDirection_Field,"Late Filing",1)>1 AND _
							  Instr(1,FieldDirection_Field,"Limitations/Mod of Coverage",1)>1 AND _
							  Instr(1,FieldDirection_Field,"Max Duration",1)>1 AND _
							  Instr(1,FieldDirection_Field,"Pre-Existing",1)>1 AND _
							  Instr(1,FieldDirection_Field,"Proof of Loss",1)>1 AND _
							  Instr(1,FieldDirection_Field,"Regular Care",1)>1 AND _
							  Instr(1,FieldDirection_Field,"Work Related (STD)",1)>1 Then
						Call WriteReport("Segment field 'Contractual Review' selected available Lists in File Direction Field are:" ,"Segment field 'Contractual Review' selected available Lists in File Direction Fields are: Contestability (IDI),Coverage/Enrollment,Definition of Disability (IDI),EP Not Met (IDI),Exclusion,Late Filing,Limitations/Mod of Coverage,Max Duration,Pre-Existing,Proof of Loss,Regular Care,Work Related (STD)","Segment field 'Contractual Review' selected available Lists in File Direction Fields are: Contestability (IDI),Coverage/Enrollment,Definition of Disability (IDI),EP Not Met (IDI),Exclusion,Late Filing,Limitations/Mod of Coverage,Max Duration,Pre-Existing,Proof of Loss,Regular Care,Work Related (STD) as expected","P")
							Else
						Call WriteReport("Segment field 'Contractual Review' selected available Lists in File Direction Field are:" ,"Segment field 'Contractual Review' selected there is no  Lists in File Direction Fields","Segment field 'Contractual Review' selected there is no  Lists in File Direction Fields as expected","F")
				End If

			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_Segment").SwfSelect "Extended Disability","Segment"
			Call SyncWind()
			Call fn_RecoveryAction()

			FieldDirection_Field2=swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_FileDirection").SwfGetAllItemsValue("File Direction")
			If 	Instr(1,FieldDirection_Field2,"Max Duration",1)>1 AND _
							 Instr(1,FieldDirection_Field2,"Maximum Duration - Partial",1)>1 AND _
							  Instr(1,FieldDirection_Field2,"Ongoing Management",1)>1 AND _
							  Instr(1,FieldDirection_Field2,"Settlement",1)>1 AND _
							  Instr(1,FieldDirection_Field2,"Transfer Prep",1)>1 Then
								Call WriteReport("Segment field 'Extended Disability' selected available Lists in File Direction Field are:" ,"Segment field 'Extended Disability' selected available Lists in File Direction Fields are:Max Duration,Maximum Duration - Partial,Ongoing Management,Settlement,Transfer Prep","Segment field 'Extended Disability' selected available Lists in File Direction Fields are: Max Duration,Maximum Duration - Partial,Ongoing Management,Settlement,Transfer Prep as expected","P")
								Else
							Call WriteReport("Segment field 'Extended Disability' selected available Lists in File Direction Field are:" ,"Segment field 'Extended Disability' selected there is no  Lists in File Direction Fields","Segment field 'Extended Disability' selected there is no  Lists in File Direction Fields as expected","F")
				End If

		swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_Segment").SwfSelect "Work Capacity","Segment"
		Call SyncWind()
		Call fn_RecoveryAction()

		FieldDirection_Field3=swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_FileDirection").SwfGetAllItemsValue("File Direction")
			If 	Instr(1,FieldDirection_Field3,"Future Work Capacity Any Occupation",1)>1 AND _
							 Instr(1,FieldDirection_Field3,"Future Work Capacity Own Occupation",1)>1 AND _
							  Instr(1,FieldDirection_Field3,"Planned Return to Work Any Occupation",1)>1 AND _
							  Instr(1,FieldDirection_Field3,"Planned Return to Work Own Occupation",1)>1 AND _
							  Instr(1,FieldDirection_Field3,"Possible Work Capacity Any Occupation (current)",1)>1 AND _
							 Instr(1,FieldDirection_Field3,"Possible Work Capacity Own Occupation (current)",1)>1 Then
								Call WriteReport("Segment field 'Work Capacity' selected available Lists in File Direction Field are:" ,"Segment field 'Work Capacity' selected available Lists in File Direction Fields are: Future Work Capacity Any Occupation,Future Work Capacity Own Occupation,Planned Return to Work Any Occupation,Planned Return to Work Own Occupation,Possible Work Capacity Any Occupation (current),Possible Work Capacity Own Occupation (current)","Segment field 'Contractual Review' selected available Lists in File Direction Fields are: Future Work Capacity Any Occupation,Future Work Capacity Own Occupation,Planned Return to Work Any Occupation,Planned Return to Work Own Occupation,Possible Work Capacity Any Occupation (current),Possible Work Capacity Own Occupation (current) as expected","P")
								Else
							Call WriteReport("Segment field 'Work Capacity' selected available Lists in File Direction Field are:" ,"Segment field 'Work Capacity' selected there is no  Lists in File Direction Fields","Segment field 'Work Capacity' selected there is no  Lists in File Direction Fields as expected","F")
				End If

				swfwindow("Swin_NaviLink").SwfEdit("SEdt_CurrentAge").SwfExist"Current Age"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_Gender").SwfExist"Gender"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_LastDayWrkd").SwfExist"Disability Date"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_BenefitAmt").SwfExist"Benefit Amount"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_PrimDxDesc").SwfExist"Primary DXx Desc"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_ExpDelDte").SwfExist"Expected Delivery Date"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_ActDelDte").SwfExist"Actual Delivery Date"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_SurgeryDte").SwfExist "Surgery Date"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_OCCType").SwfExist "Occ Type"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_OCCTitle").SwfExist "Occ Title"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_YDCurrDte").SwfExist"Youngest Dependent Current Age"

				Call SyncWind()
				Call fn_RecoveryAction()
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_Height").SwfExist"Height"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_Weight").SwfExist"Weight"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_SurgyDesc").SwfExist"Surgery Desc"

				swfwindow("Swin_NaviLink").SwfEditor("SEdt_ClmOvrVw").SwfType"Smoke Test","Claim OverView"
				Call SyncWind()
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreatedBy").SwfExist"Created By"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreatedDte").SwfExist"Created Date"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreateSite").SwfExist"Created Site"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_UpdatedBy").SwfExist"Updated By"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_UpdatedDte").SwfExist"Updated Date"
				swfwindow("Swin_NaviLink").SwfEdit("SEdt_UpdatedSite").SwfExist"Updated Site"

				swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_Converted").SwfExist"Converted"
				swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_Converted").Swfcheck"Converted"
				Call fn_RecoveryAction()

				swfwindow("Swin_NaviLink").SwfButton("SBtn_View Pol").SwfExist"View Policy"
				swfwindow("Swin_NaviLink").SwfButton("SBtn_Full View").SwfExist"Full View"
				swfwindow("Swin_NaviLink").SwfButton("SBtn_Save").SwfExist"Save"
				swfwindow("Swin_NaviLink").SwfButton("SBtn_Cancel").SwfExist"Cancel"
				CloseTabWin()
				Call SyncWind()
				Call fn_RecoveryAction()
	End If
End Function
'================================================================================================================
Public function ActionPlan_ClaimManagement()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If

	sv_SearchBy = SearchBy("ClaimNo",g_CLAIMNO)
	Call fn_RecoveryAction()

	If sv_SearchBy = 0  Then
		Call SyncWind()
		Swfwindow("Swin_SingleSearch").SwfButton("SBtn_VWActnPln").SwfClick "View Action Plan"
		Call SyncWind()
		swfwindow("Swin_NaviLink").SwfTab("STab_ActionPlanTab").SwfTabSelect "Claim Management","Claim Management Tab"
		Call fn_RecoveryAction()

		swfwindow("Swin_NaviLink").SwfButton("SBtn_ERDteCal").SwfClick"ERD date Calendar Button" 
		swfwindow("Swin_NaviLink").SwfWindow("Swin_Calendar").SwfClose"ERD Calendar"
	
		swfwindow("Swin_NaviLink").SwfButton("SBtn_CIDteCal").SwfClick"CID date Calendar Button"
		swfwindow("Swin_NaviLink").SwfWindow("Swin_Calendar").SwfClose"CIDCalendar"
		Call fn_RecoveryAction()

		RTW_Opp= swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_RTWOpp").SwfGetAllItemsValue("RTW Oppurtunities")
	
			If 	Instr(1,RTW_Opp,"Assistance N/A",1)>1 AND _
				 Instr(1,RTW_Opp,"RTW External Resource",1)>1 AND _
				  Instr(1,RTW_Opp,"RTW Not Feasible-Extended Disability",1)>1 AND _
				  Instr(1,RTW_Opp,"RTW Not Feasible-Other",1)>1 AND _
				  Instr(1,RTW_Opp,"RTW P/T with Assistance",1)>1 AND _
				  Instr(1,RTW_Opp,"RTW VRC Assist Current",1)>1 AND _
				 Instr(1,RTW_Opp,"RTW VRC Assist Future",1)>1 AND _
				  Instr(1,RTW_Opp,"RTW without VRC Assistance",1)>1 Then
					Call WriteReport("RTW Oppurtunities Field available are:" ,"RTW Oppurtunities Field available are Assistance N/A ,RTW External Resource,RTW Not Feasible-Extended Disability,RTW Not Feasible-Other,RTW P/T with Assistance,RTW VRC Assist Current,RTW VRC Assist Future,RTW without VRC Assistance","RTW Oppurtunities Field available are  Assistance N/A ,RTW External Resource,RTW Not Feasible-Extended Disability,RTW Not Feasible-Other,RTW P/T with Assistance,RTW VRC Assist Current,RTW VRC Assist Future,RTW without VRC Assistance as expected","P")
					Else
					Call WriteReport("RTW Oppurtunities Field available are:" ,"RTW Oppurtunities there is no  Lists in File Direction Fields","RTW Oppurtunities there is no  Lists in File Direction Fields as expected","F")
			End If
	
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_ReservOfRights").SwfExist"Reservation of Rights"
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_ReservOfRights").SwfSelect"No","Reservation of Rights"
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_ReservOfRights").SwfSelect"Yes","Reservation of Rights"
			Call fn_RecoveryAction()
				
			swfwindow("Swin_NaviLink").SwfButton("SBtn_RORSDteCal").SwfClick"ROR Start Date Calendar"
			swfwindow("Swin_NaviLink").SwfWindow("Swin_Calendar").SwfClose"ROR Start Date Calendar"
			
			swfwindow("Swin_NaviLink").SwfButton("SBtn_ROREDte").SwfClick"ROR End Date Calendar"
			swfwindow("Swin_NaviLink").SwfWindow("Swin_Calendar").SwfClose"ROR End Date Calendar"
	
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_preExInvestReqd").SwfExist"Pre-Ex Invest Req'd?"
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_preExInvestReqd").SwfSelect"No","Pre-Ex Invest Req'd?"
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_preExInvestReqd").SwfSelect"Yes","Pre-Ex Invest Req'd?"
			Call fn_RecoveryAction()

			swfwindow("Swin_NaviLink").SwfButton("SBtn_PreExSDteCal").SwfClick"Pre Ex Start date Calendar"
			swfwindow("Swin_NaviLink").SwfWindow("Swin_Calendar").SwfClose"Pre Ex Start date Calendar"
	
			swfwindow("Swin_NaviLink").SwfButton("SBtn_PreExEDte").SwfClick"Pre Ex End date Calendar"
			swfwindow("Swin_NaviLink").SwfWindow("Swin_Calendar").SwfClose"Pre Ex End date Calendar"
	
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_SSDIndicator").SwfExist"SSDI Indicator"
			SSDI_Indicator=swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_SSDIndicator").SwfGetAllItemsValue("SSDI Indicator")
				If 	Instr(1,SSDI_Indicator,"Non - Presumptive",1)>1 Then
					Call WriteReport("SSDI Indicator Field available are:" ,"SSDI Indicator Field available are Non - Presumptive,Non Integrated,Not Pursuing,Presumptive"," SSDI Indicator Field available are Non - Presumptive,Non Integrated,Not Pursuing,Presumptive as expected","P")
					Else
					Call WriteReport("SSDI Indicator Field available are:" ,"SSDI Indicator there is no  Lists in File Direction Fields","SSDI Indicator there is no  Lists in File Direction Fields as expected","F")
			End If
	
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_SSDIndicator").SwfSelect"Non - Presumptive","SSDI Indicator"
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_SSDIStatus").SwfExist("SSDI Status")
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_SSDIStatus").SwfSelect"Actual Application","SSDI Status"
			Call fn_RecoveryAction()

			SSDI_Status=swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_SSDIStatus").SwfGetAllItemsValue("SSDI Status")
			If 	Instr(1,SSDI_Status,"Actual Application",1)>1 Then
					Call WriteReport("SSDI_Status Field available are:" ,"SSDI_Status Field available are Actual Application,Actual First Level Appeal,Actual Hearing Appeal,Denial - Not Pursuing a Hearing,Denial - Not Pursuing Appeal,Denied Final at Hearing,Estimated Application,Estimated First Level Appeal,Estimated Hearing Appeal,Monitoring for SS,Noncompliant,Primary Award/FSS Award,Primary Award/FSS NA,Primary Award/FSS Pending,Requested Application,Requested First Level Appeal,Requested Hearing Appeal","SSDI_Status Field available are  Actual Application,Actual First Level Appeal,Actual Hearing Appeal,Denial - Not Pursuing a Hearing,Denial - Not Pursuing Appeal,Denied Final at Hearing,Estimated Application,Estimated First Level Appeal,Estimated Hearing Appeal,Monitoring for SS,Noncompliant,Primary Award/FSS Award,Primary Award/FSS NA,Primary Award/FSS Pending,Requested Application,Requested First Level Appeal,Requested Hearing Appeal as expected","P")
					Else
					Call WriteReport("SSDI_Status Field available are:" ,"SSDI_Status there is no  Lists in File Direction Fields","SSDI_Status there is no  Lists in File Direction Fields as expected","F")
			End If
	
			swfwindow("Swin_NaviLink").SwfButton("SBtn_ssdistsdte").SwfClick"SSDI Status date"
			swfwindow("Swin_NaviLink").SwfWindow("Swin_Calendar").SwfClose"SSDI Status Date"
	
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_SSDIAssistType").SwfExist"SSDI Assist Type"
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_SSDIAssistType").SwfSelect"Genex","SSDI Assist Type"
			Call fn_RecoveryAction()

			SSDI_AssistType=swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_SSDIAssistType").SwfGetAllItemsValue("SSDI Assist Type")
			If 	Instr(1,SSDI_AssistType,"Genex",1)>1 Then
					Call WriteReport("SSDI_AssistType Field available are:" ,"SSDI_AssistType Field available are Genex,Not Applicable,Other Vendor,Private Attorney,Self,SS Consultant","SSDI_AssistType Field available are  Genex,Not Applicable,Other Vendor,Private Attorney,Self,SS Consultant as expected","P")
					Else
					Call WriteReport("SSDI_AssistType Field available are:" ,"SSDI_AssistType there is no  Lists in File Direction Fields","SSDI_AssistType there is no  Lists in File Direction Fields as expected","F")
			End If
	
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_SSDIReason").SwfExist"SSDI Reason"
			swfwindow("Swin_NaviLink").SwfButton("SBtn_actualHdte").SwfClick"Actual Hearing Date Calendar"
			swfwindow("Swin_NaviLink").SwfWindow("Swin_Calendar").SwfClose"Actual Hearing Date Calendar"
	
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_EligDepndns").SwfExist"Elig Dependents"
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_EligDepndns").SwfSelect"Yes","Elig Dependents"
			swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_EligDepndns").SwfSelect"No","Elig Dependents"
	
			swfwindow("Swin_NaviLink").SwfEditor("SEdtr_ClmMangDirRich").SwfType"Smoke Test","Claim management Direction"
			Call fn_RecoveryAction()
	
		Call SyncWind()
	
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreatedBy").SwfExist"Created By"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreatedDte").SwfExist"Created Date"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreateSite").SwfExist"Created Site"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_UpdatedBy").SwfExist"Updated By"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_UpdatedDte").SwfExist"Updated Date"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_UpdatedSite").SwfExist"Updated Site"
	
		swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_Converted").SwfExist"Converted"
		swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_Converted").Swfcheck"Converted"
	
		swfwindow("Swin_NaviLink").SwfButton("SBtn_View Pol").SwfExist"View Policy"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Full View").SwfExist"Full View"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Save").SwfExist"Save"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Cancel").SwfExist"Cancel"
		CloseTabWin()
    End If
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public function ActionPlan_Actions()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If

	sv_SearchBy = SearchBy("ClaimNo",g_CLAIMNO)
	Call fn_RecoveryAction()

	If sv_SearchBy = 0  Then
	
		Swfwindow("Swin_SingleSearch").SwfButton("SBtn_VWActnPln").SwfClick"View Action Plan"
		Call SyncWind()
		swfwindow("Swin_NaviLink").SwfTab("STab_ActionPlanTab").SwfTabSelect"Actions","Actions"
		Call SyncWind()
		swfwindow("Swin_NaviLink").SwfTable("STble_KeyActivities").SwfExist"Key Activities"
	
		swfwindow("Swin_NaviLink").SwfButton("SBtn_OpnActivity").SwfExist"Open Activity"
		swfwindow("Swin_NaviLink").SwfTable("STble_AddDocumentation").SwfExist"Additional Documentation"
        Call fn_RecoveryAction()

		swfwindow("Swin_NaviLink").SwfButton("SBtn_Add").SwfExist"Add"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Add").SwfClick"Add"
		Call SyncWind()
		Call fn_RecoveryAction()

		swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_ActionsCombo").SwfExist"Actions"
		Actions=swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_ActionsCombo").SwfGetAllItemsValue("Actions")
		If 	Instr(1,Actions,"Accident Report",1)>1 Then
			Call WriteReport("Actions Field available are:" ,"Actions Field available are Accident Report,Appointment Books,Auto Carrier,Competency Statement,Health Insurer,Letter,Malpractice Coverage,Other,Other Disability Coverage,Pension,Social Security,Surgical Schedules,Telephone Call,Workers Comp File","Actions Field available are Accident Report,Appointment Books,Auto Carrier,Competency Statement,Health Insurer,Letter,Malpractice Coverage,Other,Other Disability Coverage,Pension,Social Security,Surgical Schedules,Telephone Call,Workers Comp File as expected","P")
			Else
			Call WriteReport("Actions Field available are:" ,"Actions there is no  Lists in Actions Fields","Actions there is no  Lists in Actions as expected","F")
		End If
			
			swfwindow("Swin_NaviLink").SwfEdit("SEdt_Comments").SwfSet "smoke Testing","comments"
			swfwindow("Swin_NaviLink").SwfButton("SBtn_Edit").SwfExist"Edit"
			swfwindow("Swin_NaviLink").SwfButton("SBtn_UpdateGrid").SwfExist"Update Grid"
            Call SyncWind()
	
			swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreatedBy").SwfExist"Created By"
			swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreatedDte").SwfExist"Created Date"
			swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreateSite").SwfExist"Created Site"
			swfwindow("Swin_NaviLink").SwfEdit("SEdt_UpdatedBy").SwfExist"Updated By"
			swfwindow("Swin_NaviLink").SwfEdit("SEdt_UpdatedDte").SwfExist"Updated Date"
			swfwindow("Swin_NaviLink").SwfEdit("SEdt_UpdatedSite").SwfExist"Updated Site"
	
			swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_Converted").SwfExist"Converted"
			swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_Converted").Swfcheck"Converted"
			Call fn_RecoveryAction()

			swfwindow("Swin_NaviLink").SwfButton("SBtn_View Pol").SwfExist"View Policy"
			swfwindow("Swin_NaviLink").SwfButton("SBtn_Full View").SwfExist"Full View"
			swfwindow("Swin_NaviLink").SwfButton("SBtn_Save").SwfExist"Save"
			CloseTabWin()
	End If
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public function ActionPlan_Offsets()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If

	sv_SearchBy = SearchBy("ClaimNo",g_CLAIMNO)
	Call fn_RecoveryAction()

	If sv_SearchBy = 0  Then
		Call SyncWind()
    		Swfwindow("Swin_SingleSearch").SwfButton("SBtn_VWActnPln").SwfClick"View Action Plan"
    		Call SyncWind()
    		swfwindow("Swin_NaviLink").SwfTab("STab_ActionPlanTab").SwfTabSelect "Offsets","Offsets Tab"
			Call fn_RecoveryAction()
		Call SyncWind()

		swfwindow("Swin_NaviLink").SwfTable("STble_APOffsets").SwfExist "Offsets"
		swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_OffSetTypes").SwfExist "Type"
		swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_Frequency").SwfExist "Frequency"
	
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Add").SwfClick "Add"
		Call fn_RecoveryAction()

		Offset_Type=swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_OffSetTypes").SwfGetAllItemsValue("Type")
			If 	Instr(1,Offset_Type,"A&S",1)>1 Then
					Call WriteReport("Offset_Type Field available are:" ,"Offset_Type Field available are A&S,Auto Liability,Compulsory Benefit,Disability Retirement,Family Canada Pension,Family Quebec Pension,Family Social Security,Long Term Disability,Motor Vehicle,No Fault,Normal Retirement,Other,Other Group Insurance,Other Individual Disability Coverage,Pension Retirement,Pension Supplement,PERS/STRS,Primary Social Security,Prior Carrier,Railroad Disability,Railroad Retirement,Rehab Earnings Reduction,Sabbatical Leave,Salary Continuation,Short Term Disability,Social Security Disability,Social Security Retirement,State Disability,State Teachers Retirement Sys.,Third Party Judgement,Unemployment Insurance,Voluntary Retirement,Workers Compensation Permanent,Workers Compensation Temporary","Offset_Type Field available are A&S,Auto Liability,Compulsory Benefit,Disability Retirement,Family Canada Pension,Family Quebec Pension,Family Social Security,Long Term Disability,Motor Vehicle,No Fault,Normal Retirement,Other,Other Group Insurance,Other Individual Disability Coverage,Pension Retirement,Pension Supplement,PERS/STRS,Primary Social Security,Prior Carrier,Railroad Disability,Railroad Retirement,Rehab Earnings Reduction,Sabbatical Leave,Salary Continuation,Short Term Disability,Social Security Disability,Social Security Retirement,State Disability,State Teachers Retirement Sys.,Third Party Judgement,Unemployment Insurance,Voluntary Retirement,Workers Compensation Permanent,Workers Compensation Temporary as expected","P")
					Else
					Call WriteReport("Offset_Type Field available are:" ,"Offset_Type there is no  Lists in Offset_Type Fields","Actions there is no  Lists in Offset_Type as expected","F")
			End If
	
		Offset_Frequency=swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_Frequency").SwfGetAllItemsValue("Frequency")
		If 	Instr(1,Offset_Frequency,"Annually",1)>1 Then
					Call WriteReport("Offset_Frequency Field available are:" ,"Offset_Frequency Field available are Annually,Bi-Weekly,Daily,Lump Sum Payout,Monthly,Semi-annually,Semi-monthly,Weekly","Offset_Type Field available are Annually,Bi-Weekly,Daily,Lump Sum Payout,Monthly,Semi-annually,Semi-monthly,Weekly as expected","P")
					Else
					Call WriteReport("Offset_Frequency Field available are:" ,"Offset_Frequency there is no  Lists in Offset_Frequency Fields","Actions there is no  Lists in Offset_Frequency as expected","F")
			End If
		Call fn_RecoveryAction()

		swfwindow("Swin_NaviLink").SwfButton("SBtn_Edit").SwfExist "Edit"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_UpdateGrid").SwfExist "Update Grid"
	
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreatedBy").SwfExist "Created By"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreatedDte").SwfExist "Created Date"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreateSite").SwfExist "Created Site"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_UpdatedBy").SwfExist "Updated By"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_UpdatedDte").SwfExist "Updated Date"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_UpdatedSite").SwfExist "Updated Site"
	
		swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_Converted").SwfExist "Converted"
		swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_Converted").Swfcheck "Converted"
	
		swfwindow("Swin_NaviLink").SwfButton("SBtn_View Pol").SwfExist"View Policy"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Full View").SwfExist"Full View"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Save").SwfExist"Save"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Cancel").SwfExist"Cancel"
		CloseTabWin()
	End If
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public function ActionPlan_RequestLog()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If

	sv_SearchBy = SearchBy("ClaimNo",g_CLAIMNO)
	Call fn_RecoveryAction()

	If sv_SearchBy = 0  Then
		Swfwindow("Swin_SingleSearch").SwfButton("SBtn_VWActnPln").SwfClick "View Action Plan"
		swfwindow("Swin_NaviLink").SwfTab("STab_ActionPlanTab").SwfTabSelect "Request Log","Request Log"
		Call SyncWind()
		Call fn_RecoveryAction()

		swfwindow("Swin_NaviLink").SwfTable("STble_RequestLog").SwfExist "Request Log"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_OpnActivity").SwfExist "Open Activity"
	
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreatedBy").SwfExist "Created By"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreatedDte").SwfExist "Created Date"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreateSite").SwfExist "Created Site"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_UpdatedBy").SwfExist "Updated By"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_UpdatedDte").SwfExist "Updated Date"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_UpdatedSite").SwfExist "Updated Site"
	
		swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_Converted").SwfExist "Converted"
		swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_Converted").Swfcheck "Converted"
	
		swfwindow("Swin_NaviLink").SwfButton("SBtn_View Pol").SwfExist "View Policy"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Full View").SwfExist "Full View"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Save").SwfExist "Save"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Cancel").SwfExist "Cancel"
	
		CloseTabWin()
		Call SyncWind()
	End If
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public function ActionPlan_ChangeInStatus()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If

	sv_SearchBy = SearchBy("ClaimNo",g_CLAIMNO)
	Call fn_RecoveryAction()

	If sv_SearchBy = 0  Then
		Swfwindow("Swin_SingleSearch").SwfButton("SBtn_VWActnPln").SwfClick"View Action Plan"
		swfwindow("Swin_NaviLink").SwfTab("STab_ActionPlanTab").SwfTabSelect "Change In Status","Change In Status"
		Call SyncWind()
		Call fn_RecoveryAction()

		swfwindow("Swin_NaviLink").SwfEdit("SEdt_CIS_CreatedBy").SwfExist"CIS Created By"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreateDte").SwfExist"CIS Create Date"
		
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_CIS_UpdtdBy").SwfExist "CIS Updated By"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_CIS_UpdatedDte").SwfExist"CIS Updated Date"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_SSDIStat").SwfExist"SSDI Status"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_Segment").SwfExist"Segment"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_OrgInvStatDte").SwfExist"Orig. Inventory Status Date"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_LegClm").SwfExist"Legacy Claim No."
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_FileDirection").SwfExist"File Direction"

		swfwindow("Swin_NaviLink").SwfButton("SBtn_Add").SwfExist"Add Button"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Add").SwfClick"Add Button"
			
		swfwindow("Swin_NaviLink").SwfButton("SBtn_InvStatDte").SwfExist"Inventory Status Date"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_InvStatDte").SwfClick"Inventory Status Date"
		swfwindow("Swin_NaviLink").SwfWindow("Swin_Calendar").SwfClose"Inventory Status Date"
		Call fn_RecoveryAction()
	
		Inventory_StatusType=swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_InvStatType").SwfGetAllItemsValue("Inventory Status Type")
		If 	Instr(1,Inventory_StatusType,"ART",1)>1 Then
				Call WriteReport("Inventory_StatusType Field available are:" ,"Inventory_StatusType Field available are ART,FSU,Liability Acceptance,RCU Referral,Reconsideration,Resolution,Special Benefits","Inventory_StatusType Field available are ART,FSU,Liability Acceptance,RCU Referral,Reconsideration,Resolution,Special Benefits as expected","P")
		Else
				Call WriteReport("Inventory_StatusType Field available are:" ,"Inventory_StatusType there is no  Lists in Inventory_StatusType Fields","Inventory_StatusType there is no  Lists in Inventory_StatusType as expected","F")
		End If
	
		Not_AchievedReason=swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_NotAchievedReason").SwfGetAllItemsValue("Not Achieved Reason")
		If 	Instr(1,Not_AchievedReason,"Addt'l Info Received",1)>1 Then
				Call WriteReport("Not_AchievedReason Field available are:" ,"Not_AchievedReason Field available are Addt'l Info Received,AP&C not accepted,Awaiting Addt'l Info,,Claim open with OSP/DMO,Claim with other resource,Moved to future month,Other Resource Opinion,Recovery and/or RTW delayed,SS Info Pending,Timeliness of DBS","Not_AchievedReason Field available are Addt'l Info Received,AP&C not accepted,Awaiting Addt'l Info,,Claim open with OSP/DMO,Claim with other resource,Moved to future month,Other Resource Opinion,Recovery and/or RTW delayed,SS Info Pending,Timeliness of DBS as expected","P")
		Else
				Call WriteReport("Not_AchievedReason Field available are:" ,"Not_AchievedReason there is no  Lists in Not_AchievedReason Fields","Not_AchievedReason there is no  Lists in Not_AchievedReason as expected","F")
		End If
		Call fn_RecoveryAction()

		swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_InvStatType").Select "ART"
		Inventory_StatusName=swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_InvStatNme").SwfGetAllItemsValue("Inventory Status Name")
		If 	Instr(1,Inventory_StatusName,"Comp",1)>1 Then
				Call WriteReport("Inventory_StatusName Field available are:" ,"Inventory_StatusName Field available are Comp,Comp,Paid Likely,Paid Possible,Paid Unexpected,Referral,Referral,Unpaid Likely,Unpaid Possible,Unpaid Unexpected","Inventory_StatusName Field available are Comp,Comp,Paid Likely,Paid Possible,Paid Unexpected,Referral,Referral,Unpaid Likely,Unpaid Possible,Unpaid Unexpected as expected","P")
		Else
				Call WriteReport("Inventory_StatusName Field available are:" ,"Inventory_StatusName there is no  Lists in Inventory_StatusName Fields","Actions there is no  Lists in Inventory_StatusName as expected","F")
		End If
	
		Unexpected_Reason=swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_UnExpReason").SwfGetAllItemsValue("Unexpected Reason")
		If 	Instr(1,Unexpected_Reason,"AP&C",1)>1 Then
				Call WriteReport("Unexpected_Reason Field available are:" ,"Unexpected_Reason Field available are AP&C,Medical Opinion,Moved from future month,Other,Other Resource Opinion,RTW","Unexpected_Reason Field available are AP&C,Medical Opinion,Moved from future month,Other,Other Resource Opinion,RTW as expected","P")
		Else
				Call WriteReport("Unexpected_Reason Field available are:" ,"Unexpected_Reason there is no  Lists in Unexpected_Reason Fields","Unexpected_Reason there is no  Lists in Unexpected_Reason as expected","F")
		End If
	
		 Advanced_PayClose=swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_AdvPayClse").SwfGetAllItemsValue("Advance Pay and close")
		If 	Instr(1,Advanced_PayClose,"No",1)>1 Then
				Call WriteReport("Advanced_PayClose Field available are:" ,"Advanced_PayClose Field available are No,Yes","Advanced_PayClose Field available are No,Yes as expected","P")
		Else
				Call WriteReport("Advanced_PayClose Field available are:" ,"Advanced_PayClose there is no  Lists in Advanced_PayClose Fields","Advanced_PayClose there is no  Lists in Advanced_PayClose as expected","F")
		End If

		swfwindow("Swin_NaviLink").SwfButton("SBtn_ActAcvdteCal").SwfExist"Actual Achieved Date"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_ActAcvdteCal").SwfClick"Actual Achieved Date"
		swfwindow("Swin_NaviLink").SwfWindow("Swin_Calendar").SwfClose"Actual Achieved Date"
		Call fn_RecoveryAction()
			
		swfwindow("Swin_NaviLink").SwfEditor("SEdtr_ClaimCount").SwfExist"Claim count"
		swfwindow("Swin_NaviLink").SwfEditor("SEdtr_TotalClaimCount").SwfExist"Outcome Count"
		swfwindow("Swin_NaviLink").SwfEdit("SEdt_LegacyClaimID").SwfExist"Legacy Claim Numbers"
	
		swfwindow("Swin_NaviLink").SwfEditor("SEdtr_Notes").SwfType"Smoke Test1","Notes"
		Call fn_RecoveryAction()
	
		swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_Converted").SwfExist"Converted"
		swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_Converted").Swfcheck"Converted"
	
		swfwindow("Swin_NaviLink").SwfButton("SBtn_View Pol").SwfExist"View Policy"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Full View").SwfExist"Full View"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Save").SwfExist"Save"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Cancel").SwfExist"Cancel"
	
	   CloseTabWin()
	   Call SyncWind()
	End If
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public function ActionPlan_FullView()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If

	sv_SearchBy = SearchBy("ClaimNo",g_CLAIMNO)
	Call fn_RecoveryAction()

	If sv_SearchBy = 0  Then
		Swfwindow("Swin_SingleSearch").SwfButton("SBtn_VWActnPln").SwfClick"View Action Plan"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Full View").SwfExist"Full View Button"
		swfwindow("Swin_NaviLink").SwfButton("SBtn_Full View").SwfClick"Full View"
		swfwindow("Swin_NaviLink").SwfWindow("Swin_Full View").SwfExist"Full View Window"
		swfwindow("Swin_NaviLink").SwfWindow("Swin_Full View").SwfButton("SBtn_FullView_OK").SwfClick"OK"
	   CloseTabWin()
	   Call SyncWind()
	End If
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function Cont_DelCont()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   CloseTabWin()

	sv_ViewClaimProfile = ViewClaimProfile("ClaimNo",g_CLAIMNO)
	Call fn_RecoveryAction()

   If sv_ViewClaimProfile = 0 Then
		Call SyncWind()
		   
		   SwfWindow("Swin_NaviLink").SwfTab("STab_ClaimFolderTab").SwfTabSelect "Contacts","Contacts Tab"
		   Call SyncWind()
		   Call fn_RecoveryAction()
		   Wait(10)

			ClmContCnt = SwfWindow("Swin_NaviLink").SwfTable("STble_ContClmGrd").SwfRwCnt
			Call SyncWind()
			Wait(10)	
			If ClmContCnt = "" Then
				SwfWindow("Swin_NaviLink").SwfButton("SBtn_AddClmCont").SwfClick "Add Claim Contact"
				Nme = AddSrh("IndiVidual")
				NmeVal = Split(Nme,",")
			
				SwfWindow("Swin_ContSrh").SwfButton("SBtn_NewCont").SwfClick "Create New Contact"
				IndNewCont NmeVal(0),NmeVal(1)
				Call SyncWind()	
				Wait(10)
			End If

		   GrdVal = SwfWindow("Swin_NaviLink").SwfTable("STble_ContClmGrd").SwfActRwVal
		   FLName = Split(GrdVal,",")
		
		   SwfWindow("Swin_NaviLink").SwfButton("SBtn_DetachClmCont").SwfClick "Detach Claim Contact Button"
		   Call SyncWind()
		   SwfWindow("Swin_NaviLink").Dialog("DLog_DetachClmCont").SwfExist "Detach Claim Contact Window"
		   If  SwfWindow("Swin_NaviLink").Dialog("DLog_DetachClmCont").WinButton("WBtn_OK").Exist(5) Then
			   SwfWindow("Swin_NaviLink").Dialog("DLog_DetachClmCont").WinButton("WBtn_OK").SwfClick "Ok Button"
				Call WriteReport("Check for Deleted Claim Contact","Contact is Delected","Contact is Delected as Expected","P")
			Else
				Call WriteReport("Check for Deleted Claim Contact","Contact is Delected","Contact is not Delected as Expected","F")
		   End If
		   Call SyncWind()
		   Call fn_RecoveryAction()
	
		   CloseTabWin()
		   Call SyncWind()   
	End If
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function Cont_EdtCont()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   CloseTabWin()

	sv_ViewClaimProfile = ViewClaimProfile("ClaimNo",g_CLAIMNO)
	Call fn_RecoveryAction()

   If sv_ViewClaimProfile = 0 Then
		SwfWindow("Swin_NaviLink").SwfTab("STab_ClaimFolderTab").SwfTabSelect "Contacts","Contacts Tab"
		Call SyncWind()
		Wait (10)

		ClmContCnt = SwfWindow("Swin_NaviLink").SwfTable("STble_ContClmGrd").SwfRwCnt
		Call SyncWind()
		Call fn_RecoveryAction()
		Wait(10)	
		If ClmContCnt = "" Then
			SwfWindow("Swin_NaviLink").SwfButton("SBtn_AddClmCont").SwfClick "Add Claim Contact"
			Nme = AddSrh("IndiVidual")
			NmeVal = Split(Nme,",")
		
			SwfWindow("Swin_ContSrh").SwfButton("SBtn_NewCont").SwfClick "Create New Contact"
			IndNewCont NmeVal(0),NmeVal(1)
			Call SyncWind()	
			Wait(10)
		End If

		GrdVal = SwfWindow("Swin_NaviLink").SwfTable("STble_ContClmGrd").SwfActRwVal
		wait(5)
		FLName = Split(GrdVal,",")
		
		SwfWindow("Swin_NaviLink").SwfButton("SBtn_EditCont").SwfClick "Edit Contact Button"
		Call SyncWind()
		SwfWindow("Swin_EditCont").SwfExist "Edit Contact Window"
		FName = SwfWindow("Swin_EditCont").SwfEdit("SEdt_FName").SwfGetValue("First Name") 
		LName = SwfWindow("Swin_EditCont").SwfEdit("SEdt_LName").SwfGetValue("Last Name") 
		
		If (Trim(FLName(0)) = Trim(LName)) And (Trim(FLName(1)) = Trim(FName)) Then
				SwfWindow("Swin_EditCont").SwfComboBox("SCoBox_PhoneType").SwfSelect "Home","Home Phone"
				SwfWindow("Swin_EditCont").SwfCheckBox("SChBx_PhIntNat").Swfcheck "International"
				SwfWindow("Swin_EditCont").SwfEdit("SEdt_PhNum").SwfSet "771423294700600","771423294700600"
				
				SwfWindow("Swin_EditCont").SwfComboBox("SCoBox_FaxType").SwfSelect "Home","Home Phone"
				SwfWindow("Swin_EditCont").SwfCheckBox("SChBx_FaxIntNat").Swfcheck "International"
				SwfWindow("Swin_EditCont").SwfEdit("SEdt_FaxNum").SwfSet "771423294700578","771423294700578"
				Call fn_RecoveryAction()
					
				EMail = RandNme(5)
				
				SwfWindow("Swin_EditCont").SwfComboBox("SCoBox_EmailType").SwfSelect "Home","Home Phone"
				SwfWindow("Swin_EditCont").SwfEdit("SEdt_Email").SwfSet EMail&"@unum.com",EMail&"@unum.com"
				SwfWindow("Swin_EditCont").SwfButton("SBtn_Save").SwfClick "Save Button"
				Call SyncWind()
				Call fn_RecoveryAction()
		End If
		CloseTabWin()
		Call SyncWind()
	End If
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function Cont_CreatIndNew()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   CloseTabWin()
  
	sv_ViewClaimProfile = ViewClaimProfile("ClaimNo",g_CLAIMNO)
	Call fn_RecoveryAction()

   If sv_ViewClaimProfile = 0 Then
	   Call SyncWind()
   
	   SwfWindow("Swin_NaviLink").SwfTab("STab_ClaimFolderTab").SwfTabSelect "Contacts","Contacts Tab"
	   Call SyncWind()
	   Call fn_RecoveryAction()
	
	   ClmContCnt = SwfWindow("Swin_NaviLink").SwfTable("STble_ContClmGrd").SwfRwCnt
		Call SyncWind()
	
	   If ClmContCnt = "" Then
		   SwfWindow("Swin_NaviLink").SwfButton("SBtn_EditCont").SwfDisable "Edit Contact Button"
		Else
			SwfWindow("Swin_NaviLink").SwfButton("SBtn_EditCont").SwfEnable "Edit Contact Button"
	   End If
	
	   SwfWindow("Swin_NaviLink").SwfButton("SBtn_AddClmCont").SwfClick "Add Claim Contact"
	   Call fn_RecoveryAction()
		Nme = AddSrh("IndiVidual")
	   NmeVal = Split(Nme,",")
	
	   SwfWindow("Swin_ContSrh").SwfButton("SBtn_NewCont").SwfClick "Create New Contact"
	   Call fn_RecoveryAction()
	   IndNewCont NmeVal(0),NmeVal(1)
		Call SyncWind()	
	   Wait(10)
	
	   GrdVal = SwfWindow("Swin_NaviLink").SwfTable("STble_ContClmGrd").SwfGetCell(NmeVal(0)&", "&NmeVal(1),1,NmeVal(0)&", "&NmeVal(1))
		If Trim(NmeVal(0)&", "&NmeVal(1)) = Trim(GrdVal) Then
			Call WriteReport("Verify Both Names","Both Names are Same","Both Names are Same as Expected","P")
		Else
			Call WriteReport("Verify Both Names","Both Names are Not Same","Both Names are Not Same as Expected","F")
		End If
	   CloseTabWin()
	   Call SyncWind()
	End If
	Call fn_RecoveryAction()
End Function
'================================================================================================================
Public Function Cont_CratCompNew()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   CloseTabWin()
	sv_ViewClaimProfile = ViewClaimProfile("ClaimNo",g_CLAIMNO)
	Call fn_RecoveryAction()

	If sv_ViewClaimProfile = 0 Then
	   SwfWindow("Swin_NaviLink").SwfTab("STab_ClaimFolderTab").SwfTabSelect "Contacts","Contacts Tab"
	   Call SyncWind()
	   ClmContCnt = SwfWindow("Swin_NaviLink").SwfTable("STble_ContClmGrd").SwfRwCnt
	   
		If ClmContCnt = "" Then
		   SwfWindow("Swin_NaviLink").SwfButton("SBtn_EditCont").SwfDisable "Edit Contact Button"
		Else
			SwfWindow("Swin_NaviLink").SwfButton("SBtn_EditCont").SwfEnable "Edit Contact Button"
		End If
	
		SwfWindow("Swin_NaviLink").SwfButton("SBtn_AddClmCont").SwfClick "Add Claim Contact"
		Call fn_RecoveryAction()
		CmpNme = AddSrh("Company")
		Call SyncWind()
		Wait(5)
	
		SwfWindow("Swin_ContSrh").SwfButton("SBtn_NewCont").SwfClick "Create New Contact"
		Call SyncWind()
		Wait(5)
	
		CompNewCont(CmpNme)
		Call SyncWind()
		Wait(5)
	
		GrdVal = SwfWindow("Swin_NaviLink").SwfTable("STble_ContClmGrd").SwfGetCell(CmpNme,1,CmpNme)
		Call SyncWind()
		Wait(5)
	
	   If Trim(CmpNme) = Trim(GrdVal) Then
		   Call WriteReport("Verify New Claim Status","New Claim Contact is Added","New Claim Contact is added as Expected","P")
		Else
			Call WriteReport("Verify New Claim Status","New Claim Contact is Not Added","New Claim Contact is Not Added as Expected","F")
	   End If
	
		CloseTabWin()
		Call SyncWind()
	End If
	Call fn_RecoveryAction()
End Function
'================================================================================================================
'
'										Iteration5
'
'================================================================================================================
Public Function PrintClaimFolder()
	If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
	CloseTabWin()

	ViewClaimProfile "CLAIMNO",g_CLAIMNO
	Call SyncWind()

	SwfWindow("Swin_NaviLink").SwfTab("STab_ClaimFolderTab").SwfTabSelect "Folder Cont.","Folder Contant Tab"
	Call SyncWind()
	Call fn_RecoveryAction()
	Wait(5)
	
	SwfWindow("Swin_NaviLink").SwfButton("SBtn_PrintClaimFolder").SwfClick "Print Claim Folder"
	Call SyncWind()
	Wait(10)
	SwfWindow("Swin_GenFldrImage").SwfExist "Generate Folder Image"
	Call fn_RecoveryAction()

	Do
		If SwfWindow("Swin_GenFldrImage").Exist(10) Then
			Wait(5)
		Else
			Exit Do
		End If
	Loop

	Call SyncWind()
	Call fn_RecoveryAction()
	Wait(5)	

	If SwfWindow("Swin_OnScreen.NET").Exist(10) Then
		SwfWindow("Swin_OnScreen.NET").SwfExist "Print Folder Window"
		Call SyncWind()
	End If
	SwfWindow("Swin_NaviLink").SwfButton("Sbtn_Save_and_Close").Click
	SwfWindow("Swin_OnScreen.NET").SwfClose "Print Folder Window"
End Function
''================================================================================================================
Public Function ActivityTab()
	If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
	CloseTabWin()
	
	ViewClaimProfile "CLAIMNO",g_CLAIMNO
	Call SyncWind()
	
	SwfWindow("Swin_NaviLink").SwfTab("STab_ClaimFolderTab").SwfTabSelect "Activity","Activity Tab"
	Call SyncWind()
    	
	SwfWindow("Swin_NaviLink").SwfEdit("SEdt_ClaimantName").SwfExist "Claimant Name"
	SwfWindow("Swin_NaviLink").SwfEdit("SEdt_StateProv").SwfExist "State or Prov"
	SwfWindow("Swin_NaviLink").SwfEdit("SEdt_TaxId").SwfExist "Tax Id"
	SwfWindow("Swin_NaviLink").SwfEdit("SEdt_Phone").SwfExist "Phone"
	SwfWindow("Swin_NaviLink").SwfEdit("SEdt_NavLnkClmNum").SwfExist "NaviLink Claim Number"
	SwfWindow("Swin_NaviLink").SwfEdit("SEdt_Owner").SwfExist "Owner"
	SwfWindow("Swin_NaviLink").SwfEdit("SEdt_LegSys").SwfExist "Legacy System"
	SwfWindow("Swin_NaviLink").SwfEdit("SEdt_Status").SwfExist "Status"
	SwfWindow("Swin_NaviLink").SwfEdit("SEdt_PolNum").SwfExist "Policy Number"
	SwfWindow("Swin_NaviLink").SwfEdit("SEdt_PolicyName").SwfExist "Policy Name"
	SwfWindow("Swin_NaviLink").SwfEdit("SEdt_Product").SwfExist "Product"
	SwfWindow("Swin_NaviLink").SwfEdit("SEdt_ProdType").SwfExist "Product Type"
	
	SwfWindow("Swin_NaviLink").SwfButton("SBtn_New").SwfClick "New Button"
	Call SyncWind()
	Call fn_RecoveryAction()

	TypeCnt = SwfWindow("Swin_NaviLink").SwfComboBox("SCoBox_ActType").SwfGetItmCnt("Activity Type")
	For i = 1 to TypeCnt-1
		Call WriteReport("Verify List of Type Combo", "Type Combo Count is " &TypeCnt, "Type Combo Count is " &TypeCnt&" as expected","P")

		sv_tempVal = SwfWindow("Swin_NaviLink").SwfComboBox("SCoBox_ActType").GetItem(i)
		SwfWindow("Swin_NaviLink").SwfComboBox("SCoBox_ActType").SwfSelect sv_tempVal,"Activity Type"

		ActType = SwfWindow("Swin_NaviLink").SwfComboBox("SCoBox_ActType").SwfGetSel()
		Call WriteReport("Verify selected val in Type Combo", "Selected Val in Type Combo is " &ActType, "Selected Val in Type Combo is " &ActType&" as expected","P")

		ActNmeList = SwfWindow("Swin_NaviLink").SwfComboBox("SCoBox_ActNme").SwfGetItmCnt("Activity Name")
		Call WriteReport("Verify List of Name Combo", "Name Combo Count is " &ActNmeList, "Name Combo Count is " &TypeCnt&" as expected","P")
		ActNme = SwfWindow("Swin_NaviLink").SwfComboBox("SCoBox_ActNme").SwfGetAllItemsValue("Activity Name")
		Call fn_RecoveryAction()
		
		ActNmeLst = Replace(ActNme,VbLf,"; ")
		Call WriteReport("Verify" &ActType&" Combo List Values", ActType&" Combo List Values are "&ActNmeLst, ActType&" Combo List Values are "&ActNmeLst&" as expected","P")
		Call fn_RecoveryAction()
	Next
	SwfWindow("Swin_NaviLink").SwfComboBox("SCoBox_ActType").SwfSelect "Benefit Verification","Activity Type"
	SwfWindow("Swin_NaviLink").SwfComboBox("SCoBox_ActNme").SwfSelect "New Claim: Finalize","Name"
	StatLst = SwfWindow("Swin_NaviLink").SwfComboBox("SCoBox_ActStatus").SwfGetAllItemsValue("Status")
	StatCnt = SwfWindow("Swin_NaviLink").SwfComboBox("SCoBox_ActStatus").SwfGetItmCnt("Activity Status")
	StatLstVal = Replace(StatLst,VbLf,"; ")
	Call SyncWind()
	Call fn_RecoveryAction()

	Call WriteReport("Verify Status Combo List Values", "Status Combo List Values are "&StatLstVal,"Status Combo List Values are "&StatLstVal&" as expected","P")
	
	SwfWindow("Swin_NaviLink").SwfEditor("SEdtr_NotifyDte").SwfExist "Notify Date"
	SwfWindow("Swin_NaviLink").SwfEditor("SEdtr_NotifyDte").SwfType "03052010","03052010"
	
	SwfWindow("Swin_NaviLink").SwfEdit("SEdt_ActOwn").SwfExist "Activity Owner"
	SwfWindow("Swin_NaviLink").SwfCheckBox("SChBx_MarkAsPriority").SwfExist "Mark as Priority"
	SwfWindow("Swin_NaviLink").SwfEdit("SEdt_Subject").SwfExist "Subject"
	SwfWindow("Swin_NaviLink").SwfRadioButton("SRBtn_ActivityCreator").SwfExist "Activity Creator"
	SwfWindow("Swin_NaviLink").SwfRadioButton("SRBtn_ClmOwnr").SwfExist "Claim Owner Radio Button"
	SwfWindow("Swin_NaviLink").SwfEditor("SEdtr_DueDate").SwfExist "Due Date"
	SwfWindow("Swin_NaviLink").SwfComboBox("SCoBox_Actions").SwfExist "Actions Combo Box"
	
	SwfWindow("Swin_NaviLink").SwfTab("STab_ReqRespTab").SwfTabSelect "Request","Request"
	
	SwfWindow("Swin_NaviLink").SwfTab("STab_ReqRespTab").SwfTabSelect "Response","Response"

	SwfWindow("Swin_NaviLink").SwfButton("SBtn_LnkImg").SwfClick "Link Image"
	Call SyncWind()
	Call fn_RecoveryAction()

	SwfWindow("Swin_NaviLink").SwfWindow("Swin_LinkViewImage").SwfExist "Link View Image"
	SwfWindow("Swin_NaviLink").SwfWindow("Swin_LinkViewImage").SwfButton("SBtn_Cancel").SwfClick "Cancel Button"	
	
	SwfWindow("Swin_NaviLink").SwfButton("SBtn_EditFields").SwfClick "Edit Fields"
    
	SwfWindow("Swin_NaviLink").SwfWindow("Swin_EditFields").SwfButton("SBtn_Cancel").SwfClick "Cancel Button"
	If SwfWindow("Swin_NaviLink").SwfWindow("Swin_EditFields").Dialog("dlg_InfoMsg").WinButton("Btn_OK").exist(10) Then
			SwfWindow("Swin_NaviLink").SwfWindow("Swin_EditFields").Dialog("dlg_InfoMsg").WinButton("Btn_OK").Click
	End If
	Call SyncWind()
	CloseTabWin()
	Call SyncWind()
	Call fn_RecoveryAction()
End Function
''================================================================================================================
Public Function Tools_Triage()
	If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
	SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelMenu "Tools"
	Call SyncWind()
	SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelSubMenu "Tools","Triage"
	Call SyncWind()

	SwfWindow("Swin_Triage").SwfExist"Triage"
	SwfWindow("Swin_Triage").SwfButton("SBtn_Triage").SwfClick"Triage"
	Call SyncWind()
	Call fn_RecoveryAction()

	If SwfWindow("Swin_Triage").Dialog("DLog_Triage and Assignment").Exist Then
		Call WriteReport("Triage Validation","Triage button is clicked without data filled in the required fields","Validation error dialog box appeared as Expected","P")
	Else
		Call WriteReport("Triage Validation","Triage button is clicked without data filled in the required fields","Validation error dialog box not appeared as Expected","P")
	End If
	
    SwfWindow("Swin_Triage").Dialog("DLog_Triage and Assignment").WinButton("WBtn_OK").SwfClick"OK Button"
	Call SyncWind()
	SwfWindow("Swin_Triage").SwfExist"Date Received"
    SwfWindow("Swin_Triage").SwfButton("SBtn_DteRecCalBtn").SwfClick"Date Received"
	Call SyncWind()
	SwfWindow("Swin_Triage").SwfWindow("Swin_Calendar").SwfClose"Date Received"
	
	SwfWindow("Swin_Triage").SwfEdit("SEdt_LegClmNum").SwfSet"996232323","Legacy Claim Number"
	SwfWindow("Swin_Triage").SwfEdit("SEdt_PolNum").SwfSet"12345","Policy Number"
	SwfWindow("Swin_Triage").SwfComboBox("SCobox_Product").SwfSelect "A & S","A & S"
	SwfWindow("Swin_Triage").SwfEdit("SEdt_Salary").SwfSet"10000","Salary"
	SwfWindow("Swin_Triage").SwfComboBox("SCoBox_CoverageType").SwfSelect "Choice Disability","Choice Disability"
	SwfWindow("Swin_Triage").SwfRadioButton("SRBtn_USA").SwfRBCheck "USA"
	SwfWindow("Swin_Triage").SwfRadioButton("SRBtn_Canada").SwfRBCheck "Canada"
	SwfWindow("Swin_Triage").SwfComboBox("SCoBox_Situs").SwfSelect"Alabama","Alabama"
	SwfWindow("Swin_Triage").SwfComboBox("SCoBox_Mva").SwfSelect"No","No"
	SwfWindow("Swin_Triage").SwfEdit("SEdt_Icd9Code").SwfSet"272.2","272.2"
	Call SyncWind()
	Call fn_RecoveryAction()

	SwfWindow("Swin_Triage").SwfComboBox("SCoBox_Sites").SwfSelect"Chattanooga","Chattanooga"
	SwfWindow("Swin_Triage").SwfComboBox("SCoBox_ClmSys").SwfSelect"BAS","BAS"
	Call SyncWind()
	Call fn_RecoveryAction()

	SwfWindow("Swin_Triage").SwfComboBox("SCoBox_ContractSeries").SwfSelect"CXC","CXC"
	SwfWindow("Swin_Triage").SwfComboBox("SCoBox_ProductTypes").SwfSelect"A&H","A&H"
	SwfWindow("Swin_Triage").SwfComboBox("SCoBox_EarningsMode").SwfSelect"Annually","Annually"
	SwfWindow("Swin_Triage").SwfComboBox("SCoBox_FundingType").SwfSelect"Fully Insured","Fully Insured"
	SwfWindow("Swin_Triage").SwfComboBox("SCoBox_State").SwfSelect"Alberta","Alberta"
	SwfWindow("Swin_Triage").SwfEdit("SEdt_ReportGroup").SwfSet"Test","Test"
	swfwindow("Swin_Triage").SwfComboBox("SCoBox_WorkRelated").SwfSelect"No","No"
	SwfWindow("Swin_Triage").SwfComboBox("SCoBox_SalesOffice").SwfSelect"Atlanta","Atlanta"
	SwfWindow("Swin_Triage").SwfComboBox("SCoBox_RtwStatus").SwfSelect"Full Time","Full Time"
	SwfWindow("Swin_Triage").SwfComboBox("SCoBox_ProjectedRtwStatus").SwfSelect"Full Time","Full Time"
	
	SwfWindow("Swin_Triage").SwfButton("SBtn_RTWDate").SwfClick"RTW Date"
	SwfWindow("Swin_Triage").SwfWindow("Swin_Calendar").SwfClose"RTW Date"
	SwfWindow("Swin_Triage").SwfButton("SBtn_ProjRTWDate").SwfClick"Projected RTW Date"
	SwfWindow("Swin_Triage").SwfWindow("Swin_Calendar").SwfClose"Projected RTW Date"
	
	Call SyncWind()
	Call fn_RecoveryAction()

	SwfWindow("Swin_Triage").SwfButton("SBtn_Triage").SwfClick"Triage"
	wait(10)
	Call SyncWind()
	
	Triage_Result=SwfWindow("Swin_Triage").SwfEdit("SBtn_TriageResult").SwfGetValue("Triage Result")
	Coverage_Type=SwfWindow("Swin_Triage").SwfComboBox("SCoBox_CoverageType").SwfGetValue("Coverage Type")
	Call SyncWind()
	wait(5)
	If trim(Triage_Result) = trim(Coverage_Type) Then
			Call WriteReport("Triage Result","Triage Result is "&Triage_Result&" is as Coverage Type "&Coverage_Type&"","Triage Result is "&Triage_Result&" is as Coverage Type "&Coverage_Type&" as Expected","P")
		Else
			Call WriteReport("Triage Result","Triage Result is   "&Triage_Result&" is not as Coverage Type "&Coverage_Type&"","Triage Result is "&Triage_Result&" is not as Coverage Type "&Coverage_Type&" as Expected","F")
	End If
	
	SwfWindow("Swin_Triage").SwfButton("SBtn_Assignment").SwfExist"Assigment"
    SwfWindow("Swin_Triage").SwfButton("SBtn_Print").SwfExist"Print"

	SwfWindow("Swin_Triage").SwfButton("SBtn_Reset").SwfExist"Reset"
	SwfWindow("Swin_Triage").SwfButton("SBtn_Reset").SwfClick"Reset"
	Call SyncWind()
	wait(10)
	Triage_Result=SwfWindow("Swin_Triage").SwfEdit("SBtn_TriageResult").SwfGetValue("Triage Result")
	If Triage_Result= "" Then
		Call WriteReport("Reset Buttont","Values filled in the fields are Reset by clicking reset button","Values filled in the fields are Reset by clicking reset button as Expected","P")
	Else
		Call WriteReport("Reset Buttont","Values filled in the fields are Reset by clicking reset button","Values filled in the fields are not Reset by clicking reset button as Expected","F")
	End If
	
	SwfWindow("Swin_Triage").SwfButton("SBtn_Close").SwfExist"Close"
	SwfWindow("Swin_Triage").SwfButton("SBtn_Close").SwfClick"Close"

	Call SyncWind()
	Call fn_RecoveryAction()
End Function
''================================================================================================================
Public Function DocDetTb()
	If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
	swfwindow("Swin_NaviLink").SwfButton("SBtn_WL_Sort").SwfClick"Sort"
    swfwindow("SWin_SortBy").SwfComboBox("SCoBoX_SortBy").SwfSelect"Type","Type"
	swfwindow("SWin_SortBy").SwfButton("SBtn_OK").SwfClick"OK"
	Call SyncWind()
	Call fn_RecoveryAction()

	SwfWindow("Swin_NaviLink").SwfTreeView("STvw_WrkLstVw").SwfTreeSelect "\Group","Group"
	Call SyncWind()
	Call fn_RecoveryAction()
	SwfWindow("Swin_NaviLink").SwfTreeView("STvw_WrkLstVw").SwfTreeSelect "\Group\PORT New Claim","PORT New Claim"
	Call SyncWind()
	Call fn_RecoveryAction()
	SwfWindow("Swin_NaviLink").SwfTreeView("STvw_WrkLstVw").SwfTreeSelect "\Group\PORT New Claim\Incoming Mail","Incoming Mail Group"
	Call SyncWind()
	Call fn_RecoveryAction()
	SwfWindow("Swin_NaviLink").SwfTreeView("STvw_WrkLstVw").SwfTreeSelect "\Group\PORT New Claim\Incoming Mail\","Incoming Mail"
	Call SyncWind()
	Call fn_RecoveryAction()
	
	SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
	
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_DocumentIDT").SwfExist("Document ID")
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_DocEntryDate").SwfExist("Entry Date")
	swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_DocPrimDocType").SwfExist("Primary Document")
	swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_DocPrimDocType").SwfSelect"Claim Form","Claim Form"
	Call SyncWind()
	Call fn_RecoveryAction()
	swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_SecDocType").SwfExist("Secondary Document")
	swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_SecDocType").SwfSelect"New Claim","New Claim"
	Call SyncWind()
	swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_DocFormName").SwfExist("Form Name")
	swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_DocFormName").SwfSelect"Not Mapped","Not Mapped"
	Call SyncWind()
	Call fn_RecoveryAction()
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_DocNotes").SwfSet "Testing","Testing"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_DocSource").SwfExist("Source")
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_ParentDocIDT").SwfExist("Parent Document ID")
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_DocLegClmNo").SwfExist("Legacy Claim number")
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_ClaimOwner").SwfExist("Claim Owner")
	
	swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_DocLegClmSys").SwfExist("Legacy claim system")
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_DocTaxIDT").SwfExist("Tax ID")
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_DocTaxIDType").SwfExist("Tax ID Type")
	Call fn_RecoveryAction()
	swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_DocPrefix").SwfExist("Prefix")
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_DocFirstName").SwfExist("First Name")
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_DocLastName").SwfExist("Last Name")
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_DocMiddleName").SwfExist("Middle Name")
	
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_DocDependent").SwfExist("Dependent")
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_DocPolicy").SwfExist("Policy Number")
	swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_DocFunding").SwfExist("Funding")
	swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_Product").SwfExist("Product")
	swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_DocProductType").SwfExist("Product Type")
	swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_DocSpouseDisability").SwfExist("Spouse Disability")
	Call fn_RecoveryAction()
	swfwindow("Swin_NaviLink").SwfCheckBox("SChBox_MultipleClsCB").Swfcheck("Multiple claims")
	swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_IntegratedCB").Swfcheck("Integrated Coverage")
	
	swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_TelephonicCB").Swfcheck("Telephonic")
	
	swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_MarkAsPriority").Swfcheck("Mark as Priority")
	swfwindow("Swin_NaviLink").SwfEditor("SEdtr_WorkItemNotes").SwfType"Testing","Testing"
	Call fn_RecoveryAction()
	swfwindow("Swin_NaviLink").SwfButton("SBtn_SnglSrh").SwfExist"Single Search"
	swfwindow("Swin_NaviLink").SwfButton("SBtn_SnglSrh").SwfClick"Single Search"
	Call SyncWind()
	If swfwindow("Swin_SingleSearch").Exist then
		Call WriteReport("Click Single Search Button","Single Search button clicked","Single search button clicked and Navilink single search window exist as Expected","P")
	Else
		Call WriteReport("Click Single Search Button","Single Search button clicked","Single search button not clicked and Navilink single search window not exist  as Expected","F")
	End If
	
	swfwindow("Swin_SingleSearch").SwfClose"Navilink Single search Window"
	swfwindow("Swin_NaviLink").SwfButton("SBtn_AddClmFldr").SwfExist"Add Claim Folder"
	
	Swfwindow("Swin_NaviLink").SwfButton("Sbtn_AdtTrl").SwfExist"Audit Trail"
	swfwindow("Swin_NaviLink").SwfButton("SBtn_Delete").SwfExist"Delete"
	swfwindow("Swin_NaviLink").SwfButton("SBtn_Modify").SwfExist"Modify"
	swfwindow("Swin_NaviLink").SwfButton("SBtn_Complete").SwfExist"Complete"
	swfwindow("Swin_NaviLink").SwfButton("SBtn_NxtItm").SwfExist"Next Item"
	swfwindow("Swin_NaviLink").SwfButton("SBtn_Return2FxPrntr").SwfExist"Return to Fax Printer"
	Call SyncWind()
	CloseTabWin()
	Wait(10)
	SwfWindow("Swin_NaviLink").SwfTreeView("STvw_WrkLstVw").SwfTreeCollapse "\Group","Group"
	Call SyncWind()
	Call fn_RecoveryAction()
	SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
End Function
''================================================================================================================
Public Function Follow_Up_Tab()
	If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If

	Swfwindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfTbarClick "mainToolbar","Search"
	Swfwindow("Swin_SingleSearch").SwfEdit("SEdt_ClaimNo").SwfSet g_CLAIMNO,"Claim No. " & g_CLAIMNO
	Swfwindow("Swin_SingleSearch").SwfButton("SBtn_Search").SwfClick "Search"
	Call SyncWind()
	Call fn_RecoveryAction()

	Swfwindow("Swin_SingleSearch").SwfButton("SBtn_VWClmProf").SwfClick"View Claim Profile"
	swfwindow("Swin_NaviLink").SwfTab("STab_ClaimFolderTab").SwfTabSelect"Activity","Activity"
	Call SyncWind()
	Call fn_RecoveryAction()

	swfwindow("Swin_NaviLink").SwfButton("SBtn_New").SwfClick"New"
	Call SyncWind()

	swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_ActType").SwfSelect"Appeal","Appeal"
	swfwindow("Swin_NaviLink").SwfComboBox("SCoBox_ActNme").SwfSelect"Appeal Referral","Appeal Referral"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_Subject").SwfSet"Follow up Test","Follow up Test"
	Call SyncWind()

	Set obj = fn_Object("SwfWindow","NaviLink")
	Set NaviLinkwin = SwfWindow(obj)
	Set obj_swfobject_IERequest = fn_Object("SwfObject","ClmDocNotes")
	NaviLinkwin.WinObject(obj_swfobject_IERequest).Type "Automation Testing"

    swfwindow("Swin_NaviLink").SwfButton("SBtn_Sve&Clse").SwfClick"Save and Close"
	Call SyncWind()
	swfwindow("Swin_NaviLink").Dialog("DLog_Followup").WinButton("SBtn_Yes").SwfClick"Yes"
	Call fn_RecoveryAction()

	swfwindow("Swin_NaviLink").SwfEdit("SEdt_ClaimantName").SwfExist"ClaimantName"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_StateProv").SwfExist"StateProv"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_TaxId").SwfExist"Tax Id"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_Phone").SwfExist"Phone"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_NavLnkClmNum").SwfExist"Navilink Claim Number"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_Owner").SwfExist"Owner"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_LegSys").SwfExist"BAS"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_Status").SwfExist"Status"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_PolNum").SwfExist"Policy Number"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_PolicyName").SwfExist"Policy Name"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_Product").SwfExist"Product"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_ProdType").SwfExist"Product Type"

   swfwindow("Swin_NaviLink").swfedit("SEdt_ActivityName").SwfExist"Name"
   swfwindow("Swin_NaviLink").SwfEdit("SEdt_ActivityType").SwfExist"Type"

   swfwindow("Swin_NaviLink").SwfEditor("SEdtr_FollowUpDate").SwfExist"Follow up Date"
   swfwindow("Swin_NaviLink").SwfEdit("SEdt_FollowUpOwner").SwfExist"Follow up owner"

   swfwindow("Swin_NaviLink").SwfEdit("SEdt_Subject").SwfExist"subject"
   swfwindow("Swin_NaviLink").SwfEdit("SEdt_Subject").SwfSet"Smoke Test","Smoke Test"
   swfwindow("Swin_NaviLink").SwfCheckBox("SChBx_FollowUpMarkAsPriority").Swfcheck"Mark as priority"

	swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreatedByTextbox").SwfExist"Created By"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreatedDateTextBox").SwfExist"Created Date"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_CreateSiteTextBox").SwfExist"Created Site"
    
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_CompletedByTextBox").SwfExist"Completed By"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_CompletedDateTextBox").SwfExist"Completed Date"
	swfwindow("Swin_NaviLink").SwfEdit("SEdt_CompleteSiteTextBox").SwfExist"Completed Site"

	swfwindow("Swin_NaviLink").SwfButton("SBtn_OpnAdtTrl").SwfExist"Open Audit Trail"
	swfwindow("Swin_NaviLink").SwfButton("SBtn_ViewActivity").SwfExist"View Activity"
	swfwindow("Swin_NaviLink").SwfButton("SBtn_Save").SwfExist"Save"
	swfwindow("Swin_NaviLink").SwfButton("SBtn_Sve&Clse").SwfExist"Save and Close"
	swfwindow("Swin_NaviLink").SwfButton("SBtn_Cancel").SwfExist"Cancel"
	Call SyncWind()
	CloseTabWin()

	Call SyncWind()
	Call fn_RecoveryAction()
End Function
''================================================================================================================
'
'	Public Function SearchBy(Criteria,Val)
'	
'	   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfTbarClick "mainToolbar","Search"
'	
'	   SwfWindow("Swin_SingleSearch").SwfExist "Single Search Window"
'	   
'	   If Criteria= "TaxID" or Criteria="TAXID" OR Criteria="SSN" Then
'		   SwfWindow("Swin_SingleSearch").SwfEditor("SEdtr_TaxId").SwfHighlight "TaxId"
'		   SwfWindow("Swin_SingleSearch").SwfEditor("SEdtr_TaxId").SwfSet Val,"Tax Id"
'		Else If Criteria= "ClaimNo" or Criteria="CLAIMNO"Then
'			 SwfWindow("Swin_SingleSearch").SwfEdit("SEdt_ClaimNo").SwfHighlight "Claim No Field"
'			 SwfWindow("Swin_SingleSearch").SwfEdit("SEdt_ClaimNo").SwfSet Val, "Claim No Field"
'		End If
'		SwfWindow("Swin_SingleSearch").SwfButton("SBtn_Search").SwfHighlight "Search Button"
'		SwfWindow("Swin_SingleSearch").SwfButton("SBtn_Search").SwfClick "Search Button"
'	End If
'End Function
'''================================================================================================================
'
'Public Function ToolsSearchBy(Criteria,Val)
'
'   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelMenu "Tools"
'   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelSubMenu "Tools","Single Search"
'
'   SwfWindow("Swin_NaviLink").SwfWindow("Swin_SingleSearch").SwfExist "Single Search Window"
'   
'    If Criteria= "TaxID" or Criteria="TAXID" OR Criteria="SSN" Then
'	   SwfWindow("Swin_NaviLink").SwfWindow("Swin_SingleSearch").SwfEditor("SEdtr_TaxId").SwfHighlight "TaxId"
'	   SwfWindow("Swin_NaviLink").SwfWindow("Swin_SingleSearch").SwfEditor("SEdtr_TaxId").SwfSet Val,"Tax Id"
'    Else If Criteria= "ClaimNo" or Criteria="CLAIMNO"Then
'		 SwfWindow("Swin_NaviLink").SwfWindow("Swin_SingleSearch").SwfEdit("SEdt_ClaimNo").SwfHighlight "Claim No Field"
'		 SwfWindow("Swin_NaviLink").SwfWindow("Swin_SingleSearch").SwfEdit("SEdt_ClaimNo").SwfSet Val, "Claim No Field"
'	End If
'		SwfWindow("Swin_NaviLink").SwfWindow("Swin_SingleSearch").SwfButton("SBtn_Search").SwfHighlight "Search Button"
'		SwfWindow("Swin_NaviLink").SwfWindow("Swin_SingleSearch").SwfButton("SBtn_Search").SwfClick "Search Button"
'	End If
'End Function 
'''================================================================================================================
'
'Public Function ViewClaimProfile(Criteria,Val)
'
'  Call SearchBy(Criteria,Val)
'
'   SwfWindow("Swin_SingleSearch").SwfButton("SBtn_VWClmProf").SwfHighlight "View Claim Profile Button"
'   SwfWindow("Swin_SingleSearch").SwfButton("SBtn_VWClmProf").SwfClick "View Claim Profile Button"
'End Function
'''================================================================================================================
'
'Public Function ViewFolderCont(Criteria,Val)
'
'   Call SearchBy(Criteria,Val)
'
'   SwfWindow("Swin_SingleSearch").SwfButton("SBtn_VWFldrCont").SwfHighlight "View Folder Contant Button"
'   SwfWindow("Swin_SingleSearch").SwfButton("SBtn_VWFldrCont").SwfClick "View Folder Contant Button"
'	
'End Function
'''================================================================================================================
'
'Public Function ToolsViewSearch(Criteria,Val)
'
'    Call ToolsSearchBy("CLAIMNO",g_CLAIMNO)
'
'   SwfWindow("Swin_SingleSearch").SwfButton("SBtn_VWClmProf").SwfHighlight "View Claim Profile Button"
'   SwfWindow("Swin_SingleSearch").SwfButton("SBtn_VWClmProf").SwfClick "View Claim Profile Button"
'
'   CloseTabWin()
'
'   Call ToolsSearchBy("CLAIMNO",g_CLAIMNO)
'   
'   SwfWindow("Swin_SingleSearch").SwfButton("SBtn_VWFldrCont").SwfHighlight "View Folder Contant Button"
'   SwfWindow("Swin_SingleSearch").SwfButton("SBtn_VWFldrCont").SwfClick "View Folder Contant Button"
'
'   CloseTabWin()
'
'End Function
''================================================================================================================
'
'										Common Functions
'
''================================================================================================================
Public Function ViewClaimProfile(Criteria,Val)
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   sv_SearchBy = SearchBy(Criteria,Val)
   Call fn_RecoveryAction()

   If sv_SearchBy = 0 Then
		ViewClaimProfile = 0
		Set obj_swfobj_CP = fn_Object("SwfButton","ViewClaimProfile")
		Set obj_swfobject_Navi = fn_Object("SwfWindow","NaviLink")
		Set NaviLinkwin = SwfWindow(obj_swfobject_Navi)
		Set obj_swfobject_SearchWin = fn_Object("SwfWindow","SingleSearch")
		Set SearchWindow = SwfWindow(obj_swfobject_SearchWin)
		
		SearchWindow.SwfButton(obj_swfobj_CP).SwfClick "ViewClaimProfile"
		Call SyncWind()
		wait(15)
		Call fn_RecoveryAction()
				
		If g_FlowFlag = 1Then
			Set obj_SwfTab_MainTab =  fn_Object("SwfTab","ClmFoldUltraTabCtrl")
			Wait(15)
			CloseTabWin()
			Call SyncWind()
			wait(5)
			SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
			Wait(2)	
			g_FlowFlag = 0
		End If
	Else
		ViewClaimProfile = 1
   End If
   Call fn_RecoveryAction()
End Function
''================================================================================================================
 Public Function ViewFolderCont(Criteria,Val)
	   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   Call SearchBy(Criteria,Val)
   Call SyncWind()
   Call fn_RecoveryAction()

	Set obj_swfobj_FT = fn_Object("SwfButton","ViewFolderContents")
	Set obj_swfobject_Navi = fn_Object("SwfWindow","NaviLink")
	Set NaviLinkwin = SwfWindow(obj_swfobject_Navi)
	Set obj_swfobject_SearchWin = fn_Object("SwfWindow","SingleSearch")
	Set SearchWindow = SwfWindow(obj_swfobject_SearchWin)

	SearchWindow.SwfObject(obj_swfobj_FT).SwfClick "ViewFolderContent"
	Call SyncWind()
	wait(5)
	If g_FlowFlag = 1Then
		Set obj_SwfTab_MainTab =  fn_Object("SwfTab","ClmFoldUltraTabCtrl")
		Wait(15)
		CloseTabWin()
		Call SyncWind()
		wait(5)
		SystemUtil.CloseProcessByName("Unum.Enterprise.ImageServices.OnScreenLoader.exe")
		Wait(2)	
		g_FlowFlag = 0
	End If			
	Call fn_RecoveryAction()
End Function
''================================================================================================================
Public Function SearchBy(Criteria,Val)
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
	Set obj_swfobject_Navi = fn_Object("SwfWindow","NaviLink")
	Set NaviLinkwin = SwfWindow(obj_swfobject_Navi)
	Set obj_swfobject_SearchWin = fn_Object("SwfWindow","SingleSearch")
	Set SearchWindow = SwfWindow(obj_swfobject_SearchWin)
	Set obj_swfobj_Seach = fn_Object("SwfButton","SnglSrh")
	Set obj_swfobj_TaxId = fn_Object("SwfEditor","SngSrh_TaxId")
	Set obj_swfobj_Claimno = fn_Object("SwfEdit","SearchClaim")
	Set obj_swfobj_Seach1 = fn_Object("SwfToolbar","Toolbar")

	NaviLinkwin.SwfToolbar(obj_swfobj_Seach1).ClickToolbarTool "mainToolbar","Search"
	Call fn_RecoveryAction()
	wait(5)

	If Criteria= "TaxID" or Criteria="TAXID" OR Criteria="SSN" Then
		SearchWindow.SwfEditor(obj_swfobj_TaxId).Type Val
		SearchWindow.SwfButton(obj_swfobj_Seach).SwfClick "Search"
	ElseIf Criteria= "ClaimNo" or Criteria="CLAIMNO"Then
		SearchWindow.SwfEdit(obj_swfobj_Claimno).SwfSet Val,"Claim No"
		SearchWindow.SwfButton(obj_swfobj_Seach).SwfClick "Search"
	End If
	Call SyncWind()
	Call fn_RecoveryAction()
	Wait(5)

	If SwfWindow("Swin_NaviLink").SwfWindow("Swin_Single_Search").Dialog("Dlg_NoClaim").WinButton("WinBtn_OK").Exist(10) Then
		Call WriteReport("Claim Information should be available for the ClaimNo: " & Val,"Claim Information is available for the ClaimNo: " & Val,"Claim Information is not available for the ClaimNo: " & Val,"F")
		SwfWindow("Swin_NaviLink").SwfWindow("Swin_Single_Search").Dialog("Dlg_NoClaim").WinButton("WinBtn_OK").Click
		SwfWindow("Swin_NaviLink").SwfWindow("Swin_Single_Search").SwfButton("SBtn_Cancel").Click
		SearchBy = 1
	Elseif SwfWindow("Swin_NaviLink").SwfWindow("Swin_Single_Search").Dialog("Dlg_ERROR").WinButton("WinBtn_OK").Exist(10) Then
		Call WriteReport("Claim Information should be available for the Taxid:  " & Val,"Claim Information is available for the Taxid: " & Val,"Claim Information is not available for the Taxid: " & Val,"F")
		SwfWindow("Swin_NaviLink").SwfWindow("Swin_Single_Search").Dialog("Dlg_ERROR").WinButton("WinBtn_OK").Click
		SwfWindow("Swin_NaviLink").SwfWindow("Swin_Single_Search").SwfButton("SBtn_Cancel").Click
		SearchBy = 1
	Else
		SearchBy = 0
	End If
	Call fn_RecoveryAction()
End Function 
'================================================================================================================
Public Function ToolsSearchBy(Criteria,Val)
      If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
	Set obj_swfobject_Navi = fn_Object("SwfWindow","NaviLink")
	Set NaviLinkwin = SwfWindow(obj_swfobject_Navi)
	Set obj_swfobject_SearchWin = fn_Object("SwfWindow","SingleSearch")
	Set SearchWindow = SwfWindow(obj_swfobject_SearchWin)
	Set obj_swfobj_Seach = fn_Object("SwfButton","SnglSrh")
	Set obj_swfobj_TaxId = fn_Object("SwfEditor","SngSrh_TaxId")
	Set obj_swfobj_Claimno = fn_Object("SwfEdit","SearchClaim")
	Set obj_SwfToolbar = fn_Object("SwfToolbar","Toolbar")

	Navilinkwin.SwfToolbar(obj_SwfToolbar).SwfSelMenu "Tools"
	Navilinkwin.SwfToolbar(obj_SwfToolbar).SwfSelSubMenu "Tools","Single Search"
	Call fn_RecoveryAction()
	wait(5)

	If Criteria= "TaxID" or Criteria="TAXID" OR Criteria="SSN" Then
		SearchWindow.SwfEditor(obj_swfobj_TaxId).SwfType Val,"Tax-ID"
		 SearchWindow.SwfButton(obj_swfobj_Seach).SwfClick "Search button"
		 Call SyncWind()
	ElseIf Criteria= "ClaimNo" or Criteria="CLAIMNO"Then
		SearchWindow.SwfEdit(obj_swfobj_Claimno).SwfSet Val,"ClaimNO"
		SearchWindow.SwfButton(obj_swfobj_Seach).SwfClick "SearchButton"
		Call SyncWind()
	End If
	Call fn_RecoveryAction()

	If SwfWindow("Swin_NaviLink").SwfWindow("Swin_Single_Search").Dialog("Dlg_NoClaim").WinButton("WinBtn_OK").Exist(10) Then
		Call WriteReport("Claim Information should be available for the ClaimNo: " & Val,"Claim Information is available for the ClaimNo: " & Val,"Claim Information is not available for the ClaimNo: " & Val,"F")
		SwfWindow("Swin_NaviLink").SwfWindow("Swin_Single_Search").Dialog("Dlg_NoClaim").WinButton("WinBtn_OK").Click
		SwfWindow("Swin_NaviLink").SwfWindow("Swin_Single_Search").SwfButton("SBtn_Cancel").Click
		ToolsSearchBy = 1
	Elseif SwfWindow("Swin_NaviLink").SwfWindow("Swin_Single_Search").Dialog("Dlg_ERROR").WinButton("WinBtn_OK").Exist(10) Then
		Call WriteReport("Claim Information should be available for the Taxid:  " & Val,"Claim Information is available for the Taxid: " & Val,"Claim Information is not available for the Taxid: " & Val,"F")
		SwfWindow("Swin_NaviLink").SwfWindow("Swin_Single_Search").Dialog("Dlg_ERROR").WinButton("WinBtn_OK").Click
		SwfWindow("Swin_NaviLink").SwfWindow("Swin_Single_Search").SwfButton("SBtn_Cancel").Click
		ToolsSearchBy = 1
	Else
		ToolsSearchBy = 0
	End If
	Call fn_RecoveryAction()
End Function  
''================================================================================================================
Public Function SrhCont()
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   SwfWindow("Swin_NaviLink").SwfExist "NaviLink Window"
   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelMenu "Tools"
   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelSubMenu "Tools","Contacts"
	Call fn_RecoveryAction()

   SwfWindow("Swin_ContSrh").SwfExist "Contact Search Window"
   SwfWindow("Swin_ContSrh").SwfRadioButton("SRbtn_Individual").SwfIsChecked "IndiVidual"
   SwfWindow("Swin_ContSrh").SwfEdit("SEdt_CompNme1").SwfSet "Unum123","Unum123"
   SwfWindow("Swin_ContSrh").SwfButton("SBtn_Search").SwfClick "Search Button"
   Call SyncWind()
   Call fn_RecoveryAction()
   Wait(5)

   GrdVal = SwfWindow("Swin_ContSrh").SwfTable("STble_ContSrh").SwfActRwVal
   SrhCont = GrdVal
   Call fn_RecoveryAction()
End Function
''================================================================================================================
Public Function AddSrh(RadioBtn)
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If

   SwfWindow("Swin_ContSrh").SwfExist "Contact Search Window"
   SwfWindow("Swin_ContSrh").SwfButton("SBtn_NewCont").SwfDisable "Create New Contact"
   SwfWindow("Swin_ContSrh").SwfButton("SBtn_EditCont").SwfDisable "Edit Contact"

   If RadioBtn = "Company" Then
	   SwfWindow("Swin_ContSrh").SwfRadioButton("SRbtn_Company").SwfRBCheck "Company"
	   SwfWindow("Swin_ContSrh").SwfRadioButton("SRbtn_Company").SwfIsChecked "Company"
	    CmpNme = RandNme(5)
	   SwfWindow("Swin_ContSrh").SwfEdit("SEdt_CompNme1").SwfSet CmpNme,CmpNme
	   SwfWindow("Swin_ContSrh").SwfButton("SBtn_Search").SwfClick "Search Button"
       		Call SyncWind()
			Call fn_RecoveryAction()
	Else
		SwfWindow("Swin_ContSrh").SwfRadioButton("SRbtn_Individual").SwfIsChecked "Individual"
		LName  = RandNme(5)
	   SwfWindow("Swin_ContSrh").SwfEdit("SEdt_LName").SwfSet LName,LName
	   FName  = RandNme(5)
	   SwfWindow("Swin_ContSrh").SwfEdit("SEdt_FName").SwfSet FName,FName
	   SwfWindow("Swin_ContSrh").SwfButton("SBtn_Search").SwfClick "Search Button"
		Call SyncWind()
		Call fn_RecoveryAction()
   End If
  
   Dialog("DLog_NoContFnd").SwfExist "No Contacts Found Dialog"
   Dialog("DLog_NoContFnd").WinButton("WBtn_OK").SwfClick "OK Button"
	Call SyncWind()
	Call fn_RecoveryAction()

   SwfWindow("Swin_ContSrh").SwfButton("SBtn_NewCont").SwfEnable "Create New Contact"
   SwfWindow("Swin_ContSrh").SwfButton("SBtn_EditCont").SwfDisable "Edit Contact"

   If RadioBtn = "Company" Then
	   AddSrh = CmpNme
	Else
		AddSrh = LName&","&FName
	End If
	Call fn_RecoveryAction()
  
End Function
''================================================================================================================
Public Function IndNewCont(LName,FName)
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   SwfWindow("Swin_AddCont").SwfExist "Add Contact Window"
   SwfWindow("Swin_AddCont").SwfComboBox("SCoBox_Prefix").SwfSelect "Mr.","Mr."
   ACFName = SwfWindow("Swin_AddCont").SwfEdit("SEdt_FName").SwfGetValue("FName")
   ACLName = SwfWindow("Swin_AddCont").SwfEdit("SEdt_LName").SwfGetValue("LName")

   If (LName = ACLName) And (FName = ACFName) Then
	   Call WriteReport("Verify Both First and Last Names are Same","Both First and Last Names are Same","Both First and Last Names are Same as Expected","P")
	Else
		Call WriteReport("Verify Both First and Last Names are Same","Both First and Last Names are Not Same","Both First and Last Names are Not Same as Expected","F")
		Exit Function
   End If
	Call fn_RecoveryAction()

   SwfWindow("Swin_AddCont").SwfEdit("SEdt_Suffix").SwfSet "Sr","Sr"
   SwfWindow("Swin_AddCont").SwfEdit("SEdt_LName").SwfDisable "Last Name"
   SwfWindow("Swin_AddCont").SwfEdit("SEdt_CompNme1").SwfSet "Unum123","Unum123"
   SwfWindow("Swin_AddCont").SwfEdit("SEdt_AddrLne1").SwfSet "465 Hillcrest Drive","465 Hillcrest Drive"
   SwfWindow("Swin_AddCont").SwfEdit("SEdt_AddrLne2").SwfSet "465 Hillcrest Drive","465 Hillcrest Drive"
   SwfWindow("Swin_AddCont").SwfEdit("SEdt_City").SwfSet "Detroit","Detroit"
   SwfWindow("Swin_AddCont").SwfComboBox("SCoBox_StateProv").SwfSelect "Michigan","Michigan"
   SwfWindow("Swin_AddCont").SwfEdit("SEdt_PostalCde").SwfSet "48234","48234"
	Call fn_RecoveryAction()

   PrmRelStat = SwfWindow("Swin_AddCont").SwfComboBox("SCoBox_PrimRelShp").GetROProperty("Enabled")
   SecmRelStat = SwfWindow("Swin_AddCont").SwfComboBox("SCoBox_SecRelShp").GetROProperty("Enabled")

   If PrmRelStat = False And SecmRelStat  = False Then
	   
	Else
		SwfWindow("Swin_AddCont").SwfComboBox("SCoBox_PrimRelShp").SwfSelect "Employer","Employer"
		SwfWindow("Swin_AddCont").SwfComboBox("SCoBox_SecRelShp").SwfSelect "Benefit Administrator","Benefit Administrator"
   End If

   SwfWindow("Swin_AddCont").SwfButton("SBtn_Save").SwfClick "Save Button"
	Call SyncWind()
	Call fn_RecoveryAction()
End Function
''================================================================================================================
Public Function VerIndSrh(LName,FName)
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If

	SwfWindow("Swin_NaviLink").SwfExist "NaviLink Window"
	SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelMenu "Tools"
	SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelSubMenu "Tools","Contacts"
	Call SyncWind()
	Call fn_RecoveryAction()

	SwfWindow("Swin_ContSrh").SwfExist "Contact Search Window"
	SwfWindow("Swin_ContSrh").SwfEdit("SEdt_LName").SwfSet LName,LName
	SwfWindow("Swin_ContSrh").SwfEdit("SEdt_FName").SwfSet FName,FName
	SwfWindow("Swin_ContSrh").SwfButton("SBtn_Search").SwfClick "Search Button"
	Call SyncWind()
	Call fn_RecoveryAction()

	CName = LName & ", " & FName
	GName = SwfWindow("Swin_ContSrh").SwfTable("STble_ContSrh").SwfGetCell(CName,1,CName)

   If UCase(Trim(CName)) = UCase(Trim(GName)) Then
	   Call WriteReport("Verify Both the Names","Both "&CName&" And "&GName&" are Same","Both "&CName&" And "&GName&" are Same as Expected","P")
		SwfWindow("Swin_ContSrh").SwfButton("SBtn_Cancel").SwfClick "Cancel Button"
	Else
		Call WriteReport("Verify Both the Names","Both "&CName&" And "&GName&" are not Same","Both "&CName&" And "&GName&" are not Same as Expected","F")
		SwfWindow("Swin_ContSrh").SwfButton("SBtn_Cancel").SwfClick "Cancel Button"
   End If
	Call SyncWind()
	Call fn_RecoveryAction()
End Function
''================================================================================================================
Public Function CompNewCont(CmpNme)
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   SwfWindow("Swin_AddCont").SwfExist "Add Contact Window"
   SwfWindow("Swin_AddCont").SwfRadioButton("SRdBtn_Company").SwfIsChecked "Company"
   SwfWindow("Swin_AddCont").SwfEdit("SEdt_CompNme1").SwfDisable "Company Name"
   CmpNme1= SwfWindow("Swin_AddCont").SwfEdit("SEdt_CompNme1").SwfGetValue("Company 1 Name")
	Call fn_RecoveryAction()

	If Trim(CmpNme) = Trim(CmpNme1) Then
	   Call WriteReport("Verify Both Company Names are Same","Both Company Names are Same","Both Company Names are Same as Expected","P")
	Else
		Call WriteReport("Verify Both Company Names are Same","Both Company Names are Not Same","Both Company Names are Not Same as Expected","F")
		Exit Function
   End If

   SwfWindow("Swin_AddCont").SwfEdit("SEdt_AttnLne1").SwfSet "Testing1","Testing1"
   SwfWindow("Swin_AddCont").SwfEdit("SEdt_AddrLne1").SwfSet "465 Hillcrest Drive","465 Hillcrest Drive"
   SwfWindow("Swin_AddCont").SwfEdit("SEdt_AddrLne2").SwfSet "465 Hillcrest Drive","465 Hillcrest Drive"
   SwfWindow("Swin_AddCont").SwfEdit("SEdt_City").SwfSet "Detroit","Detroit"
   SwfWindow("Swin_AddCont").SwfComboBox("SCoBox_StateProv").SwfSelect "Michigan","Michigan"
   SwfWindow("Swin_AddCont").SwfEdit("SEdt_PostalCde").SwfSet "48234","48234"
   Call fn_RecoveryAction()

	PrmRelStat = SwfWindow("Swin_AddCont").SwfComboBox("SCoBox_PrimRelShp").GetROProperty("Enabled")
   SecmRelStat = SwfWindow("Swin_AddCont").SwfComboBox("SCoBox_SecRelShp").GetROProperty("Enabled")

   If PrmRelStat = False And SecmRelStat  = False Then
	   
	Else
		SwfWindow("Swin_AddCont").SwfComboBox("SCoBox_PrimRelShp").SwfSelect "Employer","Employer"
		SwfWindow("Swin_AddCont").SwfComboBox("SCoBox_SecRelShp").SwfSelect "Benefit Administrator","Benefit Administrator"
   End If

   SwfWindow("Swin_AddCont").SwfButton("SBtn_Save").SwfClick "Save Button"
	Call SyncWind()  
	Call fn_RecoveryAction()
End Function
''================================================================================================================
Public Function VerCmpSrh(CmpNme)
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If
   SwfWindow("Swin_NaviLink").SwfExist "NaviLink Window"
   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelMenu "Tools"
   SwfWindow("Swin_NaviLink").SwfToolbar("STbar_MainMenu").SwfSelSubMenu "Tools","Contacts"
	Call fn_RecoveryAction()

   SwfWindow("Swin_ContSrh").SwfExist "Contact Search Window"
   SwfWindow("Swin_ContSrh").SwfRadioButton("SRbtn_Company").SwfRBCheck "Company"
   SwfWindow("Swin_ContSrh").SwfEdit("SEdt_CompNme1").SwfSet CmpNme,CmpNme
   SwfWindow("Swin_ContSrh").SwfButton("SBtn_Search").SwfClick "Search Button"
	Call SyncWind()
	Call fn_RecoveryAction()

	GName = SwfWindow("Swin_ContSrh").SwfTable("STble_ContSrh").SwfGetCell(CmpNme,1,CmpNme)
   If UCase(Trim(CmpNme)) = UCase(Trim(GName)) Then
	   Call WriteReport("Verify Both the Names","Both "&CmpNme&" And "&GName&" are Same","Both "&CmpNme&" And "&GName&" are Same as Expected","P")
		SwfWindow("Swin_ContSrh").SwfButton("SBtn_Cancel").SwfClick "Cancel Button"
	Else
		Call WriteReport("Verify Both the Names","Both "&CmpNme&" And "&GName&" are not Same","Both "&CmpNme&" And "&GName&" are not Same as Expected","F")
		SwfWindow("Swin_ContSrh").SwfButton("SBtn_Cancel").SwfClick "Cancel Button"
   End If
	Call SyncWind()
	Call fn_RecoveryAction()
End Function
''================================================================================================================
Public Function RandNme(AlpCnt) 'Common Sheet
   If  UCase(g_HandleError) = "YES" Then
		On Error resume next 
	End If

   Const Chars = "abcdefghijklmnopqrstuvwxyz"
   strName = ""
   Randomize
	For k = 1 To AlpCnt
		intValue = Fix(26 * Rnd())
		strChar = Mid(Chars, intValue + 1, 1)
		strName = strName & strChar
	Next
	RandNme = strName
End Function
''================================================================================================================
